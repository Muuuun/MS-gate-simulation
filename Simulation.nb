(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2611836,      49797]
NotebookOptionsPosition[   2598333,      49362]
NotebookOutlinePosition[   2598703,      49378]
CellTagsIndexPosition[   2598660,      49375]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulation", "Title",
 CellChangeTimes->{{3.7565082592119226`*^9, 3.756508260533421*^9}}],

Cell[CellGroupData[{

Cell["Pre-function", "Chapter",
 CellChangeTimes->{{3.756980067107995*^9, 3.756980078116983*^9}, {
  3.756980119679235*^9, 3.756980125319233*^9}}],

Cell[CellGroupData[{

Cell["Basic Function", "Section",
 CellChangeTimes->{{3.735541742086438*^9, 3.735541744572085*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinEigenstate", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"PhononEigenstate", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "circle", "}"}], ",", 
     RowBox[{
      RowBox[{"circle", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Cycles", "[", 
              RowBox[{"{", "circle", "}"}], "]"}]}], "]"}], "&"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "1"}],
             "}"}], "//", "Flatten"}], ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7307101186242743`*^9, 3.730710161881748*^9}, {
  3.735614174579564*^9, 3.7356141801616173`*^9}, {3.7356142194599113`*^9, 
  3.73561424928274*^9}, {3.73561428398462*^9, 3.735614298093095*^9}, {
  3.735615287595399*^9, 3.7356152877446833`*^9}, {3.735615458751697*^9, 
  3.735615540623932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DensityMatrix", "[", "State_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"Conjugate", "@", "State"}], ",", "State"}], "]"}], 
   RowBox[{
    RowBox[{"Conjugate", "@", "State"}], ".", "State"}]]}]], "Input",
 CellChangeTimes->{{3.7356144936946774`*^9, 3.7356145022294073`*^9}, {
  3.7356145554753227`*^9, 3.7356145874298887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReducedSpinDensityMatrix", "[", 
   RowBox[{"State_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "wholeDensityMatrix", "}"}], ",", 
    RowBox[{
     RowBox[{"wholeDensityMatrix", "=", 
      RowBox[{"DensityMatrix", "[", "State", "]"}]}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Normalize", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"Nest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Permute", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Cycles", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}],
                     "]"}]}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  "i"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
                 
                 RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".",
            "wholeDensityMatrix", ".", 
           RowBox[{"(", 
            RowBox[{"Normalize", "@", 
             RowBox[{"Flatten", "@", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"Nest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Permute", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Cycles", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}],
                     "]"}]}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  "j"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
                 
                 RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", 
            RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
        "Chop"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757319101445539*^9, 3.757319121629839*^9}, {
  3.757319192091464*^9, 3.757319269935294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationSingleParticle", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", "g"}], "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", "g"}], "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7539329393009977`*^9, 3.753932956193926*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Population", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "g"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "g"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7307110414500566`*^9, 3.7307110666835003`*^9}, {
   3.7307111997801123`*^9, 3.7307112734743276`*^9}, 3.7307113318256655`*^9, {
   3.730761042212937*^9, 3.7307610583718605`*^9}, {3.7307612002419753`*^9, 
   3.730761203041136*^9}, {3.730796868454355*^9, 3.7307968962869463`*^9}, {
   3.730796982701889*^9, 3.730796989973305*^9}, {3.735614876597836*^9, 
   3.735614946903778*^9}, {3.7356150038844433`*^9, 3.735615018697229*^9}, {
   3.735615306097938*^9, 3.735615307141433*^9}, {3.735615406632887*^9, 
   3.735615406981205*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PhononDistribution", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "p"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "g", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "p"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "g", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7415702639739017`*^9, 3.7415703199281025`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UParity", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]_"}], "]"}], "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}], 
      RowBox[{
       RowBox[{"-", "I"}], " ", 
       SuperscriptBox["E", 
        RowBox[{"I", " ", "\[Phi]"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "I"}], " ", 
       SuperscriptBox["E", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "\[Phi]"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}]}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.759459358105268*^9, 3.7594594063604116`*^9}, {
  3.760094102492169*^9, 3.760094166922532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.759459407097806*^9, 3.759471852628113*^9, 3.760092802994104*^9, {
   3.760094171466195*^9, 3.7600941974682407`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UParityTwoIon", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], "=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"UParity", "[", 
     RowBox[{"\[Phi]", ",", "\[Theta]1"}], "]"}], ",", 
    RowBox[{"UParity", "[", 
     RowBox[{"\[Phi]", ",", "\[Theta]2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.759459411366664*^9, 3.759459454127335*^9}, {
  3.760094178830119*^9, 3.760094196234042*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7594594141109858`*^9, 3.7594594167729053`*^9}, 
   3.75945945461372*^9, 3.759471852672947*^9, 3.760092803060317*^9, 
   3.760094199193387*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AnalyticParityEvolve", "[", 
   RowBox[{"\[Rho]_", ",", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[Rho]AfterParity", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Rho]AfterParity", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Refine", "[", 
         RowBox[{
          RowBox[{"ComplexExpand", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"UParityTwoIon", "[", 
              RowBox[{"\[Phi]", ",", "\[Theta]1", ",", "\[Theta]2"}], "]"}], 
             ".", "\[Rho]", ".", 
             RowBox[{
              RowBox[{"UParityTwoIon", "[", 
               RowBox[{"\[Phi]", ",", "\[Theta]1", ",", "\[Theta]2"}], "]"}], 
              "\[ConjugateTranspose]"}]}], ")"}]}], ",", 
          RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "]"}], "//", "Chop"}], 
       "//", "FullSimplify"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "-", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7594604794319143`*^9, 3.7594605235774193`*^9}, {
  3.7600942087642927`*^9, 3.760094232136155*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Matrixs", "Section",
 CellChangeTimes->{{3.735536939642934*^9, 3.735536950527709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxPhononNumber", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.735540973887891*^9, 3.735540986895095*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Id", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Px", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Py", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pm", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]x", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Px", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]y", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Py", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]z", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pz", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]p", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pp", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]m", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pm", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "x"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "z"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "y"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{"-", "I"}]},
      {"I", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "+"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1"},
      {"0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "-"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0"},
      {"1", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"a", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "-", "1"}]}], "]"}], 
        SqrtBox["j"]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"adag", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "+", "1"}]}], "]"}], 
        SqrtBox[
         RowBox[{"j", "+", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726362943681505*^9, 3.7263629676883783`*^9}, {
   3.726363631390667*^9, 3.726363646560259*^9}, 3.726363738418151*^9, {
   3.729248960306776*^9, 3.729249014398572*^9}, {3.729249066088626*^9, 
   3.729249071735437*^9}, {3.7292491113875217`*^9, 3.729249116613011*^9}, {
   3.7292494578750753`*^9, 3.729249461178195*^9}, {3.729249646860078*^9, 
   3.729249654040284*^9}, {3.730631934481776*^9, 3.730631954416917*^9}, {
   3.733044962909903*^9, 3.73304497565516*^9}, {3.735540966293165*^9, 
   3.735540995599413*^9}, {3.735541439374699*^9, 3.7355414683897142`*^9}, {
   3.735541502812069*^9, 3.735541507708048*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinRotation", "[", 
   RowBox[{"\[Theta]_", ",", "\[CurlyPhi]_"}], "]"}], ":=", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      FractionBox["\[Theta]", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], "NumofIons"], 
           RowBox[{"\[Sigma]x", "[", "k", "]"}]}], ")"}], 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], "NumofIons"], 
           RowBox[{"\[Sigma]y", "[", "k", "]"}]}], ")"}], 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.757474072438566*^9, 3.757474107103876*^9}, {
  3.757474176962634*^9, 3.75747418016044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]Z", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "z"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], ",", 
     "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.735540942063628*^9, 3.7355409538341303`*^9}, {
   3.735541003212188*^9, 3.735541016403418*^9}, {3.735541055009431*^9, 
   3.7355410579088707`*^9}, {3.735541148555523*^9, 3.735541202675058*^9}, {
   3.7355412682873383`*^9, 3.735541274678626*^9}, 3.735541360307719*^9, {
   3.735541390655395*^9, 3.735541390811715*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]P", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "+"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], ",", 
     "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7355420028979387`*^9, 3.735542012135611*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]M", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "-"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], ",", 
     "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.735542018415069*^9, 3.735542025403665*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pnt", "=", "800"}], ";", 
  RowBox[{
   RowBox[{"TwoIonSimulation", "[", 
    RowBox[{
    "\[CapitalOmega]_", ",", "\[Delta]_", ",", "\[Nu]_", ",", 
     "MaxPhononNumber_", ",", "SimulationTime_", ",", "only_", ",", 
     RowBox[{"initialState_:", " ", 
      RowBox[{"Normalize", "[", 
       RowBox[{
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
              "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
       "]"}]}], ",", 
     RowBox[{"Hamcar_:", "0"}], ",", 
     RowBox[{"export_:", "False"}], ",", 
     RowBox[{"plotTrue_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IHamiltonian", ",", "a", ",", "adag", ",", "\[Sigma]Z", ",", 
       "\[Sigma]P", ",", "\[Sigma]M", ",", "sol", ",", "data", ",", "Hambsb", 
       ",", "Hamrsb", ",", "\[Delta]\[Omega]b", ",", "\[Delta]\[Omega]r", ",",
        "end"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Delta]\[Omega]b", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"\[Delta]\[Omega]r", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
      RowBox[{"a", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], 
            SqrtBox["j"]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}],
         "]"}]}], ";", 
      RowBox[{"adag", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], 
            SqrtBox[
             RowBox[{"j", "+", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}],
         "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]Z", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "z"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
          ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]P", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "+"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
          ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]M", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "-"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
          ",", "1"}], "]"}]}]}], ";", 
      RowBox[{"Hambsb", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 RowBox[{"(", 
                  RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
              ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
             "\[ImaginaryI]", " ", "\[Delta]\[Omega]b", "  ", "t"}]]}]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Eta]", " ", "a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                  RowBox[{"\[Eta]", " ", 
                   RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 RowBox[{"(", 
                  RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
              ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]b", "  ", 
              "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
      RowBox[{"Hamrsb", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                  RowBox[{
                   RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 RowBox[{"(", 
                  RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
              ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
             "\[ImaginaryI]", " ", "\[Delta]\[Omega]r", "  ", "t"}]]}]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Eta]", " ", 
                RowBox[{"(", " ", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 RowBox[{"(", 
                  RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
              ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]r", "  ", 
              "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
      RowBox[{"IHamiltonian", "=", 
       RowBox[{"Hambsb", "+", "Hamrsb", "+", "Hamcar"}]}], ";", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"I", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[Equal]", 
            
            RowBox[{
             RowBox[{"(", "IHamiltonian", ")"}], ".", 
             RowBox[{"c", "[", "t", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"c", "[", "0", "]"}], "\[Equal]", "initialState"}]}], 
          "}"}], ",", "c", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "SimulationTime"}], "}"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"export", ",", 
        RowBox[{"expoteSolution", "=", "sol"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"plotTrue", "\[Equal]", "False"}], ",", 
        RowBox[{"Goto", "[", "end", "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"only", "\[Equal]", "\"\<Individual\>\""}], ",", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"Population", "[", 
               RowBox[{
                RowBox[{"DensityMatrix", "[", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"c", "[", "t", "]"}], "/.", 
                   RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "i", 
                ",", "MaxPhononNumber"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
              RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"data", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], 
                "}"}]}], ")"}]}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
               "\"\<00\>\""}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Population", "[", 
                 RowBox[{
                  RowBox[{"DensityMatrix", "[", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", 
                  ",", "MaxPhononNumber"}], "]"}]}], "+", 
               RowBox[{"Population", "[", 
                RowBox[{
                 RowBox[{"DensityMatrix", "[", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", 
                 ",", "MaxPhononNumber"}], "]"}], "+", 
               RowBox[{"Population", "[", 
                RowBox[{
                 RowBox[{"DensityMatrix", "[", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", 
                 ",", "MaxPhononNumber"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
              RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"data", ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], "]"}]}]}], 
       "]"}], ";", 
      RowBox[{"Label", "[", "end", "]"}], ";"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740907606777033*^9, 3.7409076822283487`*^9}, {
   3.7409077209495635`*^9, 3.740907749420192*^9}, {3.7409078041393213`*^9, 
   3.7409079245032063`*^9}, {3.7409079759671497`*^9, 3.740907978192277*^9}, {
   3.740908075014815*^9, 3.7409081233435793`*^9}, {3.7409081580695653`*^9, 
   3.7409081958707275`*^9}, 3.7409083146205196`*^9, {3.7409085249615507`*^9, 
   3.7409085369742374`*^9}, {3.74090857023814*^9, 3.740908611379493*^9}, {
   3.74090864925966*^9, 3.7409086494436703`*^9}, {3.7409087271631155`*^9, 
   3.7409087295392513`*^9}, {3.740908760091999*^9, 3.740908766476364*^9}, {
   3.7409089855358934`*^9, 3.7409089861039257`*^9}, {3.7409091409447823`*^9, 
   3.74090915366651*^9}, {3.7409096309268084`*^9, 3.7409096614065514`*^9}, {
   3.7409096942094274`*^9, 3.740909718613823*^9}, {3.740909773295951*^9, 
   3.7409097744780183`*^9}, {3.7409970479684987`*^9, 3.740997051421696*^9}, {
   3.7410396270058804`*^9, 3.74103963486833*^9}, {3.741041290590032*^9, 
   3.7410413074869986`*^9}, {3.7410430913970323`*^9, 
   3.7410430934861517`*^9}, {3.741043227167798*^9, 3.7410432672430897`*^9}, {
   3.741043304625228*^9, 3.741043317713977*^9}, {3.7410433937443256`*^9, 
   3.741043406480054*^9}, {3.7410438096061115`*^9, 3.7410438144303875`*^9}, {
   3.741056865967491*^9, 3.7410568743729715`*^9}, {3.741058150383956*^9, 
   3.7410581753893857`*^9}, {3.741058210290382*^9, 3.7410582612482967`*^9}, 
   3.741058353320563*^9, {3.741058390190672*^9, 3.7410585976785393`*^9}, {
   3.7410586652034016`*^9, 3.741058755955592*^9}, {3.741058798315015*^9, 
   3.7410588116577783`*^9}, {3.741058847492828*^9, 3.7410588521560946`*^9}, {
   3.741058925230274*^9, 3.7410589289234858`*^9}, {3.741059005484864*^9, 
   3.7410590197496805`*^9}, {3.7410590538996334`*^9, 3.741059139938555*^9}, 
   3.741059179955844*^9, {3.741073880515668*^9, 3.7410739004178057`*^9}, 
   3.7410740436199965`*^9, {3.741074096322011*^9, 3.7410741319110465`*^9}, 
   3.7410742326638093`*^9, {3.741075305744186*^9, 3.7410753808724833`*^9}, {
   3.7410754646652756`*^9, 3.741075543014757*^9}, {3.741078063140133*^9, 
   3.741078069505497*^9}, {3.7411527011397676`*^9, 3.7411527066670837`*^9}, {
   3.741153167858463*^9, 3.741153193217913*^9}, {3.741153255063451*^9, 
   3.7411532758686404`*^9}, {3.741153357102287*^9, 3.7411533882500687`*^9}, {
   3.7411537507428017`*^9, 3.741153758615252*^9}, {3.7411538080160775`*^9, 
   3.7411538306003695`*^9}, {3.7411544963914504`*^9, 3.741154561924199*^9}, 
   3.741154615391257*^9, {3.7411547396973667`*^9, 3.741154789249201*^9}, {
   3.741154900344555*^9, 3.741154905705862*^9}, {3.7413143116382656`*^9, 
   3.7413143214788284`*^9}, {3.7413144007933655`*^9, 
   3.7413144038755417`*^9}, {3.74131544988437*^9, 3.7413154646872163`*^9}, {
   3.7413155349412346`*^9, 3.741315570101246*^9}, {3.7413169904824867`*^9, 
   3.741317050780936*^9}, {3.741318972897875*^9, 3.7413190117700977`*^9}, {
   3.741319046460082*^9, 3.74131909957812*^9}, {3.7413191974217167`*^9, 
   3.7413192111034994`*^9}, {3.741319336316661*^9, 3.741319359886009*^9}, {
   3.741319390367752*^9, 3.741319398703229*^9}, {3.7413210980374255`*^9, 
   3.741321111963222*^9}, 3.741332484098671*^9, {3.741334019692502*^9, 
   3.741334033258278*^9}, {3.7413340728825445`*^9, 3.741334086219307*^9}, {
   3.7415691250687604`*^9, 3.741569144188854*^9}, 3.741569204245289*^9, {
   3.741569234460017*^9, 3.7415692367881503`*^9}, {3.741569302252895*^9, 
   3.741569345900391*^9}, {3.7415694827172165`*^9, 3.741569532275051*^9}, {
   3.7415698678882475`*^9, 3.74156987353557*^9}, {3.741570215807147*^9, 
   3.741570222020502*^9}, 3.7415704177186956`*^9, {3.756506377697969*^9, 
   3.756506381747332*^9}, {3.7565067798624268`*^9, 3.756506807787545*^9}, {
   3.756507349826872*^9, 3.756507383039626*^9}, {3.756507608822401*^9, 
   3.756507641659936*^9}, {3.756507741718251*^9, 3.7565077420583143`*^9}, {
   3.756507777160894*^9, 3.756507792915447*^9}, {3.756507834289385*^9, 
   3.756507929405039*^9}, {3.756509663096066*^9, 3.756509710602314*^9}, {
   3.756509984332872*^9, 3.7565099889123783`*^9}, {3.756510729443226*^9, 
   3.756510798312159*^9}, {3.756980398715255*^9, 3.7569804475419197`*^9}, {
   3.756981702639697*^9, 3.756981713958783*^9}, 3.7569817525357*^9, {
   3.756981796533292*^9, 3.756981802135212*^9}, {3.7569819112253857`*^9, 
   3.7569819780969067`*^9}, {3.7569820229390383`*^9, 
   3.7569820230929813`*^9}, {3.756982279601139*^9, 3.756982295001837*^9}, {
   3.756982710461275*^9, 3.756982718834388*^9}, {3.7569857483474207`*^9, 
   3.756985757374257*^9}, {3.756985826571913*^9, 3.756985828180088*^9}, {
   3.756985891364262*^9, 3.756985894471477*^9}, 3.757068405355926*^9, {
   3.7570684991443253`*^9, 3.757068518455181*^9}, {3.757068553110278*^9, 
   3.757068602308579*^9}, 3.757318978672659*^9, {3.757330735498168*^9, 
   3.757330738554386*^9}, {3.759444622792911*^9, 3.7594446481959763`*^9}, {
   3.75944469406975*^9, 3.759444696440651*^9}, {3.7594449188401337`*^9, 
   3.759444952631028*^9}, {3.759446176177875*^9, 3.759446178900278*^9}, {
   3.759446499049243*^9, 3.7594464995829067`*^9}, 3.759446549727826*^9, {
   3.7594466167844543`*^9, 3.759446625209323*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoIonSimulationTwoModes", "[", 
   RowBox[{
   "\[CapitalOmega]_", ",", "\[Delta]_", ",", "\[Nu]_", ",", 
    "MaxPhononNumber_", ",", "SimulationTime_", ",", "only_", ",", 
    RowBox[{"initialState_:", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"Table", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
             "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
      "]"}]}], ",", 
    RowBox[{"Hamcar_:", "0"}], ",", 
    RowBox[{"export_:", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "IHamiltonian", ",", "a", ",", "adag", ",", "\[Sigma]Z", ",", 
      "\[Sigma]P", ",", "\[Sigma]M", ",", "sol", ",", "data", ",", "Hambsb", 
      ",", "Hamrsb", ",", "\[Delta]\[Omega]b", ",", "\[Delta]\[Omega]r", ",", 
      "end"}], "}"}], ",", 
    RowBox[{
     RowBox[{"\[Delta]\[Omega]b", "=", 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[Delta]", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
     RowBox[{"\[Delta]\[Omega]r", "=", 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[Delta]", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
     RowBox[{"a", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", 
             RowBox[{"j", "-", "1"}]}], "]"}], 
           SqrtBox["j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", 
     RowBox[{"adag", "=", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", 
             RowBox[{"j", "+", "1"}]}], "]"}], 
           SqrtBox[
            RowBox[{"j", "+", "1"}]]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
       "]"}]}], ";", 
     RowBox[{
      RowBox[{"\[Sigma]Z", "[", "i_", "]"}], ":=", 
      RowBox[{"KroneckerProduct", "@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
               SubscriptBox["\[Sigma]", "z"]}], "}"}], ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
         ",", "1"}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"\[Sigma]P", "[", "i_", "]"}], ":=", 
      RowBox[{"KroneckerProduct", "@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
               SubscriptBox["\[Sigma]", "+"]}], "}"}], ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
         ",", "1"}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"\[Sigma]M", "[", "i_", "]"}], ":=", 
      RowBox[{"KroneckerProduct", "@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
               SubscriptBox["\[Sigma]", "-"]}], "}"}], ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], "}"}]}], "}"}], 
         ",", "1"}], "]"}]}]}], ";", 
     RowBox[{"Hambsb", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ni", "=", "1"}], "2"], 
          RowBox[{"2", "\[Pi]", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                 RowBox[{"adag", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"4", "*", 
                RowBox[{"(", 
                 RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
             ")"}]}], "*", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
            "\[ImaginaryI]", " ", "\[Delta]\[Omega]b", "  ", "t"}]]}]}], "+", 
         
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ni", "=", "1"}], "2"], 
          RowBox[{"2", "\[Pi]", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Eta]", " ", "a", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                 RowBox[{"\[Eta]", " ", 
                  RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"4", "*", 
                RowBox[{"(", 
                 RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
             ")"}]}], "*", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]b", "  ", 
             "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
     RowBox[{"Hamrsb", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ni", "=", "1"}], "2"], 
          RowBox[{"2", "\[Pi]", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "ni"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"a", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                 RowBox[{
                  RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"4", "*", 
                RowBox[{"(", 
                 RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
             ")"}]}], "*", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
            "\[ImaginaryI]", " ", "\[Delta]\[Omega]r", "  ", "t"}]]}]}], "+", 
         
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"ni", "=", "1"}], "2"], 
          RowBox[{"2", "\[Pi]", " ", 
           RowBox[{"\[CapitalOmega]", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "ni"}], "]"}], "]"}], 
           RowBox[{
            RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[ImaginaryI]", " ", "\[Eta]", " ", 
               RowBox[{"(", " ", 
                RowBox[{
                 RowBox[{"a", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    "\[Nu]", " ", "t"}]]}], "+", 
                 RowBox[{"adag", " ", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{
                   "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                    "t"}]]}]}], " ", ")"}]}], "+", 
              RowBox[{"IdentityMatrix", "[", 
               RowBox[{"4", "*", 
                RowBox[{"(", 
                 RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
             ")"}]}], "*", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]r", "  ", 
             "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
     RowBox[{"IHamiltonian", "=", 
      RowBox[{"Hambsb", "+", "Hamrsb", "+", "Hamcar"}]}], ";", 
     RowBox[{"sol", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"I", " ", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"c", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", "IHamiltonian", ")"}], ".", 
            RowBox[{"c", "[", "t", "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"c", "[", "0", "]"}], "\[Equal]", "initialState"}]}], 
         "}"}], ",", "c", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "SimulationTime"}], "}"}], ",", 
        RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{"export", ",", 
       RowBox[{"expoteSolution", "=", "1"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"only", "\[Equal]", "\"\<Individual\>\""}], ",", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"Population", "[", 
              RowBox[{
               RowBox[{"DensityMatrix", "[", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"c", "[", "t", "]"}], "/.", 
                  RowBox[{"sol", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "i", 
               ",", "MaxPhononNumber"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
             RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
        
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], 
              "}"}]}], ")"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
             "\"\<00\>\""}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"Population", "[", 
                RowBox[{
                 RowBox[{"DensityMatrix", "[", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", 
                 ",", "MaxPhononNumber"}], "]"}]}], "+", 
              RowBox[{"Population", "[", 
               RowBox[{
                RowBox[{"DensityMatrix", "[", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"c", "[", "t", "]"}], "/.", 
                   RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", 
                ",", "MaxPhononNumber"}], "]"}], "+", 
              RowBox[{"Population", "[", 
               RowBox[{
                RowBox[{"DensityMatrix", "[", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"c", "[", "t", "]"}], "/.", 
                   RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", 
                ",", "MaxPhononNumber"}], "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
             RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
        
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"data", ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757318188905539*^9, 3.757318190429936*^9}, {
  3.7594449436645937`*^9, 3.7594449440828342`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulate the carrier and sideband", "Chapter",
 CellChangeTimes->{{3.756506828824114*^9, 3.756506832895825*^9}}],

Cell[CellGroupData[{

Cell["Carrier simulation", "Subsection",
 CellChangeTimes->{{3.756506501567689*^9, 3.756506504368865*^9}}],

Cell[CellGroupData[{

Cell["Single ion carrier", "Subsubsection",
 CellChangeTimes->{{3.756507396375043*^9, 3.7565074004748993`*^9}, {
  3.756507448899572*^9, 3.756507449568672*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "20"}], ";"}]], "Input",
 CellChangeTimes->{{3.7565064544429626`*^9, 3.7565064632684097`*^9}, {
  3.756506516443489*^9, 3.756506518968326*^9}, {3.756506566006073*^9, 
  3.756506574745083*^9}, {3.756506754533291*^9, 3.756506755844652*^9}, {
  3.756506869153369*^9, 3.756506918453288*^9}, {3.756507404169693*^9, 
  3.756507422583109*^9}, {3.756507472489666*^9, 3.756507487750661*^9}, {
  3.756509733972995*^9, 3.756509757464407*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7565065451847963`*^9, 3.756506551337469*^9}, {
   3.756507423858993*^9, 3.756507424509942*^9}, {3.756507651285543*^9, 
   3.756507655273253*^9}, 3.756510028407976*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
c3gLvAt44SdP+3/HWhr/
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
p89TxDmxiXMdPb//4QUo4nOm0culvsSLUITHzyEG84OIl6QIJ7n1obqniJer
iHjpIrcbV4hXp4iGNIVX4snEE1OCwqDXM40ymD4l7E1/t1Qyj+lTwmMb2cPx
xUyfEg5End6uWc30KcHdIa7PuYHpU8J0y73Swh9MnxJcjx+I+djB9Clh6+YH
SlO6mD4lzN5de8e3h+lTQnbwQo2FfUyfMmrvFXT19TF9yugc4uKyrI/pU0Zi
sUBxXw/Tp4zAByPPLu1i+pTx2yJzwe8Opk8Z3Su+1rn9p6//+oY+yQ0NTJ8y
fp5tvTylmulTRukR5Xd1xUyfMt4E5mZOyGP6VBD65EzOmv/8U4HWrHq3WclM
nwrG6Tk2isUyfSqQHFtk5n+K6VNBj/nTpAdBTJ8KbIxM5uT89/uqYH1ZRk6s
J9OngqfLb32b7cr0qeDD6sST+UOZPhUU7lW5aGTI9Kni3KKrrRNlmD5V7FAd
sGHCd1bfqtAeN1xS9z3Vr6sq/MrmRealsXpXRb34IONF56ieA1RxtVE/PHsP
q39VpAQ8KtH4i3hJ/Z+3wFR68jh2P6hiWkGM0VJD4tWpwkZjpPOiXnb/qmF2
+O2TTmV0v2upoXH62jmqqex+VoOIdyu34Bjd/65qSPO29tr/N7u/1XCzzOau
mTPxAtSgWT1y+iMdtn6oQT9Z8Mu1ldavJDWsnSYfVfyCrU9qWJC32snzLK1n
dWr42z7AsHE9W6/U4R5mGr7NidY3LXW4nb8hp6DK1kN1vP0w0fn2J1o/XdXx
ze/XwOXJbL1Vh0KBt7PFflqfA9ThVKepJzmLrb/qsBxU96pHj9brJHWMem+a
oN7I1nd1BD8cMHZuCu0HderQ5EkoPdjD9g8N3Jk75t2MybQ/aGlg5xIxJw1l
tp9ooJynZa9eSvuPqwayXsRunhXN9isNhNS1d+WtbiB9GrhYMevaUVu2f2kg
IDHT63zrF9Kngdzv64Xdd9n+qIFX4nPrErbTflqngZNjn697MIbtl5q4YCkT
zROj/VVLE1n+RUs6Mth+rInCBRJ+Nvtp/3bVhE/k16v549l+rwmZsun36iRo
Pw/QxPT7dkt9M+tInybePD7sumMf9QtJmogxLOVLjGP9hSZuzA26q9BH/Uid
JhZEHAi58pD1L1pwlU9dku1P/YmWFuRWPv28ZyjrZ7Qga7juY14r9T+uWqiT
/K50L4H1S1pos5g9b/y6T6RPCzmF/57yM2P9kxaK1n/NmVlVS/q0oHa1T6Ii
kvVnWrjj+XG1vhv1c3Va2NOS4KitwPo1bWQdCst6/7KG9Gkj2CAw0H0f6we1
MTf5ZV/0KOofXbUx7dOZokftrN/Uxr/xJpm34qk/DdDGfIfaY7tWsf5TG0MT
tpjZGlC/mqSNcr8On6xi1t9qY7Zfvs/ko9QP12mjwHGe/dNJVaRPB2/F/3rq
MID6Yy0dTJWI3T7dl/XTOvjeHP8394n6b1cdKNaFb5/k9pH06UBFqvLR5ucV
pE8Hm/ReiQqGVZA+HVQeUX/qFVdO+nRww9bLaroOOx/owDZi+KD9YWWkTwe5
I3Ly1cXKSJ8urh0681TVt5T06eJw7Jz2g3UlpE8XJUfyx+9YUEL6dDFCl7+8
8/UH0qcLtRWKeXLOH0ifLh6+r89/klZM+nQxxSI1TJdfTPp0MbBOvcvmahHp
00WztG1dl34R6dOFfa3igKOn35M+PZTsM6voUHxP+vRg9zT3X8eQQtKnh92r
/e97SBWSPj1IFtkdXLevgPT1v9+9PmVj3zvSp4e+YovobbvekT49SEfqxR7q
fkv69PBP3H6LGzvfkj49fLX1O9vQQ+fbOj0E5f7cMS0gn/Tpo/tg/MIqiXzS
p48zXyfGzVN6Q/r0MS/QZriv3mvSpw8FtesfeDZ5pE8fQ26E8g6MySV9+kiS
eZsTM+sV6dNH3u3rW0+tySF9+rih8OWLz75s0qePUEOJzHEXXpI+fTj0Hbxs
/OQF6TPAW+sBHaY1z0mfAWb+Pahnocxz0meAsnG9qaWCZ6TPAAYy0SVJS7JI
nwG8GqRTO8MzSZ8Bbn1+Pvrx06ekzwC3D9ypVu7KIH0GGF519KyMYwbpM4A+
Zn245ZtO+gww0HtxFd/rCekzxKFd7RMv/3r05/1yhvjZdFpUGPqQ9BqiYpRa
QqXFgz/X8wwx6HPCgarcNNJvCLvpJ2f/2HbvDw+GeHNRuNnclvIhV0P0aopZ
nWtI+cPzMMSmH3MjVick0/czxATxORVRO5L+8HwNcaz4puX0WXfo+xpiclBI
zjF7yq9CDVGmvn2mv3oifX9DJDjkjbKVS/jDizWEX2PR947uG+SHIQab3vf3
6Yv7w0vv/7vs0r2pKixfM8TYOY/WtIyI/cMrMUSK2OCrozbFkF+GaPw77kHK
w0t/eG2GyHp7O3C3VjT5Z4SYtLzMtUoXyD8jyOW/rG1WPUv+GSHVKVw3ewzl
hzwjfD1WM9Ix9BT5ZwTPj2Nf+oj9Q/4ZIXqIY9DtyGPknxH+kq5+7HM3nPwz
Qsdh41e+gSzfNEJp2xzZ6gsHyD8jzB+ltsJ40H7yzwijj2c0jNm7h/wzwnip
m4UbwvzJPyMo9/kfOjnMj/wzQqtkbUac2HryzwjBPdmDT+SvIv+MsEHmfv73
J0vJPyMkezyYGbp0LvlnhBNRr6PlJCaSf0aIzFa9ueAs5cdtRnCxilXoUFIj
/4yxbpTYKt3bK8b+8c8YOmJJ5cNcVMg/Ywx21M0OvCsi/4whJVURlOruQv4Z
Y8uveVJJTXPIP2O41JQYbeSTPldjFJlY8w9sX0X+GcPt6+MN7md9yD9jiHJK
5rr2+pJ/xpgRZhktN43y5wBjnBzh9yRzBPPPGGHvJ7aXV+8j/4yx9kVZqPrm
A+SfMeYbW9ubuweTf8Z4uXbakJhAyp/TjfE56H7hkAD6fXONcenrpcFKn06Q
f8a4tznfX9/nFPlnjBB56Re/9SLIP2OYqh/f6t0WRf6ZIPXKikdDmyl/ljNB
bJR+grw05c9aJhgweHqlTxzlzzwTTGic8LfhEpY/91//SGm0hBnlzzBB3uoM
0189V8k/E1yoPxlS+YXyZw8TDFJ6PybiM8ufTbAl/UzEwPZ48s8EO0bvbu8b
RPlzgAminH8uTzZm968J/Bf63JF3ZvmzCeTCDq/s9Kb8OdYEmqHLbFZcpPw5
yQSqLj9rR5RR/pxuAovpOb4r9Vn+bAKPmIuP8tdS/lxigqEzO0JWPKL8uc4E
i09d2y+jRflzmwnaLoepXt7J8mdTaFdG+Gt9YeufKSz2B12fsfAJ+WeKXY42
ItW/af3kmWJ0ZM9pJxtab0Wm8Lw3wtakhfJnmGJ7yczgK2lPyT9TBEpYPLwX
lEn+mcI7btb0qW5sfTeFy5FX86daPCP/TCE1+OyB2N5n5J8pSptmWE/58Jz8
M8V5u28TTVJekH+m2COTfUH/JO0/saZ48OTxM4tt2eRf//87/IztllD+nG6K
R6+6VXQmviL/TLGjtrW8TJhL/pn2r/9GRYuMaH+sM8WkfONpwcqvyT9T3DfN
vjtTiuXPZtD8Z8rxs91vyD8zKL7f6BS/ne3HZhi3buj1Ub9o/+aZAaVl379v
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
/rmz35/xMfMUKlj+7IDL/8hN+WdtKff/AFtluhY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
c3gLvAt44SdP+3/HWhr/
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxVmnc41X/4/yWiomwZ2fNYZ1TS8H420NCilPZU2kUkKtpJSaJoaqiUUigq
0UAkKWUXysxOJRI/3+/nfn2v6+efLhfncZ49nfN63/fjvHVXbnFaIy4mJqbb
X0zsf/79/79auciI//3i7Gd1xS/tbaHvb3GF1bE1u/61cKL//YrnrNKUy+Z2
sZ8nc+q82xJNv1q4/zhpnEeLXvekVvb7Lzm3KXGHF9a3cG7/+5XBaZb+DBVU
ssdncdrHpwuzC1u4tzn/+8U5B7qEG75lvDxuxa5tCnbP2e+/54q3SSjzEhg/
n+M8XxsUXGeP/8hlZj34PC2cPV8B19r5oenoQcYr4qZMPKwQ5sF4xVxXuaHS
5uWMV8rx5R6+UnFkvDLu8sd9vSdHMd4X7nWi05Uv2oxXwV0x3XuynzT7/Qru
0cvi+3+bm4lfyfnKyjTnfmymx3/lFs5rFOxObqbn+8bpyfzbJH2hmXhVnGmy
cdj2vc3Eq+LsjeuupCxnvGpO6FB7tgGMV8NdvZa9v0eb8Wq5pjktu//8ayJe
HbcvpeNuaUkT8eq4CTPHzY152ES8em6HmWOKW0gT8b5zly1E8xQ3NBGvgVt0
b/LlB5MYr5Eb+clzooMG4zVyUTlJvfltjcRr4lJ481IXZTYSr5m7fFTreOW5
RuL19ax54Ny6LY0ce92lJZ6c9HMC+/1W7u3kwgFHFBuJ38pN0rl93LiqgR7f
xmnkLr1ZEN9Az9fG6QUnOUbsayDeD+7uYs8wj9kNxPvBzZ4Sneo+vIF4P7jy
JW9N/Ou/E6+dO3h61vQnCd+J185JFpU/1d77nXg/uYGzbps8mPKdeD850287
ZnnLfyfeTy758stej+J64v3ichwOqMRerifeLy5h0/qdxmvrifebc1r8bGid
eT3xfnOCxJbs9rY64v3m9rUUn571sI54HZygzn2h2K464nVwGzV//Bs0vo54
fzjc3LLCs7eWeH+4UJNy1wnPa4n3h+s66JDkta+WeJ3cca9Bk9Qm1RKvk0vk
5JIt+tcSr4v72HMtP+lFDfG6OF6Kx6TUgBridXFjwr4k2aGGeH85zV0Lvszu
qSbeX+7o+FErq59UE6+b61+o3i7lU028bq6pXMEhZWQ18bq5S8HpGoN+VBHv
H9cgEzWmPbaKeP+4rpEpu3a7VxGvh9vdefhVrEEV8Xq4lnm6CkfLvxGvh+sw
OuqpFPmNeL1cz2Ar+XlzvxGvlzP2TTGePeQb8cRwcUfOkMGvv9Lvi8GkQMH6
WMBX4ouhyX40r2DMV3q8GNqnSh5ta6+k5xPDQ7fFst/uVBKvHx7blu2PW1NJ
vH549GHcu2ValcTrh9faayt+F1QQrx9GW8kn+QZXEK8f1J2cl/90qCCeOFac
tGpw6ztn/uOJQyKorfTBtnLiicPg4t3uq1+/EE8cb4NdFsU6fyGeOKSv7B5S
+uoz8fpjjJSsks2oz8TrjwaL2U75N8qI1x+jW/sHJqqVEa8/JIMuL2g4Vkq8
/nDv4Fn595QQTwKDugWz924rIZ4Eit/MzWuvKiaeBJZMaztet6CYeBKQaikf
s+5tEfEkEPZ5w5zdE4uIJ4myutW6wqRC4knC2k8x66RlIfEk8dByK3f1egHx
JGE7WH2ux/AC4knixDzew0Hhn4g3AGcuFHZsH/qJeANQ+90+PPHoR+INwO7U
mK5SiY/EG4Bv3uaHW/zziTcAIwY9PdX57wPxpDDA9/vO/n4fiCeFbnOpMJW/
74knBYmq1Y7jfN8TTwoR4XLye7rziCeFbbvnL63ek0c8aezddCHTVzyPeNII
fHH+TdiQd8STxuXJ0p+T1HOJJ41ZLikjPE3fEk8achoPtpWOySHeQOzZqTZa
fNYb4g1Ee1jk+O412cQbiMRT+Taf92YRbyDsR43OTzr/mngDMVBB/fqVp5nE
G4Stu2PU7pZnEG8QoruneDVLZhBvEIysHyR6WaUTbxBWfGg45rr4FfEGIcTF
2/FW0EviDcbw/HvfvNNeEG8wIvxXZRZ0PCfeYKx5F9JUIHxOvMG4/2xt2pFt
acQbjIS8pyP+rE0lngzWtq7z9P+ZQjwZnDg7/ljmkafEk0GYgTCg3uAJ8WQg
3v7ZoF9WMvFk0NNaKW2yI4l4snj12i7Yy/QR8WRhEBjX1r8mkXiyGLTlgktN
TALxZHH6Zcsn4c544sli3tqKK/9mPCDeEGRbJUgsNL9PvCFwajpzYqFiHPGG
YLa0wyi9AXeJNwTzDq+pG95xm3hDINCr/JLVeYt4QzHAvvW1/ZCbxBuKLbN/
/0sYEU28ofj6Ga2iTdeINxT//Lz0vz26QryheFhdtKJSKYp4cjBZlml9TvrS
f7+vJofEfV03g2TOE18O/zRnteWPjPjv8Y5y+F5uejv2QDg9nxxUGrW953WG
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
l58nv1asg9/Lgu3KkohXo4OJ7nbXRnwkXrsOqr8mqK5rZr5OFyNOVd73lCL/
J6ML/+TKIwu0yS+q6aL+uMYjeeYPjXSxrcHE5eJ05ht1ITvw2dHuZeQToYvA
+QUePA/iOerim6+EndFB4rnqonBHPr85jPlIXQjiPvj6Xyeehy7kb2/xKo0n
nr8uSv3MD/xLI16QLn7ecNGqzmH+Uxf9ZFo+niwkXrQu/mrauvRWEC9eF+Kj
fm20qidemi66r6hK67Qy36kL5yuFNnm/iFesiwVBheO4LuLV6GLt7hjPjcwf
t+vi3b75W+f3Mn+qh8hvMxt6e1l/elinPiF3DfPPanrwKXOzOvqP9aeH1CNa
Tuu7WH96kPzoFz3wN+tPD0MVt2SuZfkc9fD54zufg/WsPz0oTQi+taqS9aeH
jY4ua/sXsf70UH0npWYN88/+eghSDdgZ9Jz1p4dbFZZBOxNYf3r4ejLnulk0
608PXs6TVt0IZ/3pYUF2xpYm5p/T9JBntvBoL/v75ujhSl2Md/ly1p8e5vgJ
ZIIdWX96CMvM1JWzZv3pYdaWSadX67D+9JFfojTtBPPPMvqwV9EyDG6h17Oa
PpZqD1Zw/0SvZyN9LI6a3jn8MfPF+jCsss25x/wz9HGgPn63jj+9Pxz7vo+y
l9q+gniu+mi5q7cxegLzz/ro8HB7mKpDPA99bBu9tV9aD3v/6mOzdYDHrVL2
/tVHyIgHU/c8Yu/fvny5M/Nxis6DaH3sueuxq53553h9jLcOeHl2MvHS+r5/
eGiOSJP5Z33saJhel/6DzqtifXTOC9js/JrOqxp9jGoKbPlyns6rdn3sm775
woat7PwzgMarnLzuiez8M0DkrHuDwpXY+WeAyz9GtI+ppvPTyADbI8QWtiQw
H22A2pD7Ix7tp/MZBriSteFC+Bw6fx0NoN37Ky9Ei85rVwNcDdtgHvudne8G
sNR8a9qUSNcDDwPs/bdgqYs/XT/8DZAtYb6jaSpdH4IM4JogYflIgflqA1Sk
yC5IKqHrT7QBFGafzP0Vxa5XBjj5YqW35zryz2kGkH8rNtbGkl2/DKDr8FJ6
ajv55WIDvDjgnX3zEV0fawzQPP3RxiW+dD1tN8D7hzM+bLBl/tkQXQs3lRaJ
0fVVxhA+yplLb71g12NDVGRX8b7up+u3Ud/3CgrSRyYzH22IO+lD4y9J0PUc
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
xWLuTnnmn0fgbmJnycg3X7n/B0uQ2NA=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 20.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 20.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.756506554376363*^9, 3.756506576465776*^9}, 
   3.75650676051611*^9, 3.7565068151319847`*^9, {3.7565068858192244`*^9, 
   3.756506903734387*^9}, 3.756507428291304*^9, {3.7565074798132267`*^9, 
   3.756507493835187*^9}, {3.756507657988997*^9, 3.7565076636378117`*^9}, {
   3.7565097486092863`*^9, 3.7565097620217876`*^9}, 3.7565100357677937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two ion carrier", "Subsubsection",
 CellChangeTimes->{{3.756507443749177*^9, 3.7565074474094067`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.7565074628351583`*^9, 3.7565075322019463`*^9}, {
  3.756507972730474*^9, 3.756507986603343*^9}, {3.75650972860638*^9, 
  3.7565097324887047`*^9}, {3.75650976495089*^9, 3.756509769087749*^9}, {
  3.7565434517621317`*^9, 3.756543473244584*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulationTime", "=", "100"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Total\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75728628547803*^9, 3.757286290871558*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
c9n9n+mYZfa594Lq/xz+H5ueDIE=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 1.9827901921921622`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.757286294007086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SimulationTime", "=", "80"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7565076710942183`*^9, 3.756507673179174*^9}, 
   3.75651003744534*^9, {3.757286258134849*^9, 3.757286283024344*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
/g54tOCFV18s029ygJb6zQCLYOpPRTvAh++ba2/JnE844MTqjAW/O6j/JXBA
0O6Kg3c2vCV+DuA9GmzmPyN/BQ4YVV90dcEMpj/lAIvKFr+pNm+InwO6V/cW
b11K/bkOBxx9u/jn58IW4ucAxXFtrTZXGH6OWHk5dNXPcOpPiTmCG/Num5gT
8/5whJWmkq/phDri54iWoPGun5/XED9HBIn0B+qfovWFI0qtfuQe/kL5me2I
J0lq0W9rqB7ycATvYPyt+R+Z/qYjst7veZJjR/sFf0fcUdt7PrbhAfFzRM00
7cIxD5n6zxHzizfJVC26RfwckejfvqxPn/YzAkfMm62u8E0qnfg5YvyeNN0V
nqnEzxFdZ/99iq9g8p8joka5bii/dJj4OULl64hTTxJDiJ8jBKMKW85YrCN+
jlhctHpvexXTv3eCzghZ118/eun5dUKE00jPumoL4ucEQdfMQJMjK4ifE3zO
X1oyY8Q24ucEt2LDjUtsgomfExZOPe4x71848XPC5pJMvdlSkcTPCRNCVGRn
xDH99aH7jbpt1CgaS/ycEORlaJM+j/r3YU4w5e1dpRwXR/yckCKjZx5jw8xz
OKFQImmGoQ31/wVOeHPmysFLFky/xwmH2rrEV3dR/77ACexFSdfya/cRPyes
lNup7FUXQvyc4Lguebmxsx/xc8KUgefjjy5cRfyc0BrmeNPU1Ib4sRGv3p2S
KtdB/NiwuDQlsUbDhvixh36/3yzVyLXEj42Aml+z+s+GED82Qj/MU52tF0X8
2Dj3I/xO/KFE4seGWOe+UydnUr/Sg43GOZFJsqsuEj821Kdtzm1OoX6ePxuJ
a8ZbND1n9h9s/N2753Fc3T3ix8bu+VUSae6FxI+NKx8n292VLyZ+bKz/FBCx
hU/1fRYbErEdje5NlcSPDVe1idqii5n6j41d/asqit5Rv7dx6P6zknxxhJ63
DjbMLts6lTlSvdbHxhEv7/K505nn1xmXll3ZF/SeyX/OaJYdP9Okmcl/zojK
H2M4w6yN+DljRsY+9ZsJlF90nJHyIzF09SvKV3DGnFXbjC5M6SB+zniN2TVm
mu+JnzMMNU7uXq7NnI86w13XtPr6tE7i54ymRPckt/pO4ucMs1a/Vy+203lp
tDPmtYtslO7pIn7OGNf9hx9mQuejAmdM+Xv3+N2VdH6aNfT9ZvsPM5bTPEiB
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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
yT8uDgVlb9jkTOcfjlwMm2W4Ssy3gvzj4ubDSTJb6pn6gotIOXapWkYx+ceF
pXPlZwWri+QfF4cPn7X6yc4j/7gwZeX4DtnK9Pu4aC8+ZpczkXl+uVgTWd78
qe0w+ceFleHWiPN395F/XCRNaOt0rokh/7gofVFv1RkfRP5x0VO3X32Ztw/5
x8VSye8FxklUH/ZxkXzyn1RVjDb5Z4PXW+56r3X5QvnPBt633wy5KqtM/tkg
5M7o7KebLck/Gwi1lps8dbQn/2zwrWfKPAk7qk9hgwcX17jNaGbynw021vyV
bw0VkH82iIr4GKTWztS3Njh+NKFlRRCL/LNBisnZeWv8lMm/gf9vH9BvvhE3
qC/BBhrGhdNyPdTIPxsEqOa+NO13If9sELjjwlXBb2/yzwa/872MlN2pPi23
wX/SkTeH10WTfzZQ2fWpVtx8L/lnA51LdkpJV5LJPxukhm7X9LM4Rf7Z4Ips
ycpIfib5ZwvDvg0rbuZRP17KFq+3Kw/sCak/LG+LjWf6I2P4tH9RsUXIbtWU
KbOZ9dcWbSaLrxotvkn+2UJn2qK1F8WoP+VoC3WeR1bmv3vkny2cTz/f2Cpk
9le2eKge6FoYSvVBgC0EJh+tNbvryD9bxHIzsveG0X4+wRbxJ6JkspSY8xdb
oOJgaWQD7f8ybXFk5pBbkUkvyT9bFOXVFd0510L+2WLVmaplaUOZ/qUtfs8t
PCaxkOqhRlvILPjwLe047U87bFF5+WeJxWOqX/tscXHt0Vn/fewg/+xwwfZz
ifz3TvLPDl4Rxq+LW5j9sB12LxUtZ52n/bOKHaa3T3Mr4zP7dzvkny8bcedx
F/lnB7ekUwkb1Zn6zw69v5+c9l5C+3U3O4zo8vJ/toLZ39vhzTnFoMNWVA8H
2EGgfir/31fiRdrh16E8k6HRTP6zw4N3Icu0Opn8Zwfpc0FHjs0hfZl2GOeX
0fmVy6wfdmhMWWC5kttJ/tkhcJf97S1zmfrdDs/9FMsnf6N+bqMdspzZDe55
1B/psMOQ7rU/o9yo39pnh51aoaPa++l+iPFwdLSuTNWsV+QfD8L1d+dXCGi9
lOdhxt6CrfNjqX+jwsP3FWtSn1U8Jf94UPDvfaU+uZ7848G1rzMrciezn+fB
oLyMu9CQ1nM3HvRTOHEjs5n+Eg8Fy+7p5AbfJv942OW0+nBtOp1vRfJg+8m0
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxdmnk8Ve/39hVpUpQiNCJKyDxzLtNxcBxnSFEpaVIUhYomFKlUopQmU4bG
T0VJZSiSIkUUKmMkJZWU5sfva+1/nvNPr172fu9rX3vttde97jXD21+4cqiY
mNgMcTGx//v3//+dSPy/Xx5rrIfPTt5mD9bg/x+yPBV4mZauISz9//2esY7W
iG8rnhtDf69niZfcV0u9fpw1SGlmrel/ePFQfyod38b65dK4O/Huedaq//06
WEXyUnuflV6l89+x2r/0pEsfv8F6XPF/vw+sxbONPsnduU28T6yrjhJjzWOK
6PjPrN8bgn/t4BQTv5e119o6UkeilM7/ygrU/nB5/5Uyut431pIdSiN1WOXE
62cNqVEtSUh9TLwfLLO6to41lU+I94ult+ERXr58SrzfrFKWl374+Sri/WXN
v3Lr3BzXauKJYa7S78TzpdV0vBiqeh6bnB/7jPhD0Dzr5+RHM5/R+UOh67v1
87XRz+h64lDInnJuxl2GJ4E++1DlVgeGJwHR0lBBXmoV8YbB69/4kfa1T4kn
iSk2vW9zHjD6h4P/+4VNbcZj4o2A9NTtZY3CcuKNgNt2M928F2XEG4nX64I+
K9mUEm8U3n1n6YmSGH9HY7JVvujt7yLiSSHzyNXghU/vEE8K1lIjX6a9zCXe
GJQ8b+3u0csm3lg8f3DZ+3XtJeJJ49vmkeuk5mQQTwautvMNOcOT6HgZfC99
05HzKZ74Mni+1/D974AoOn8cZCrEjqW3BNL1xqEz3CksrlhEvPFgeXtMXTba
zmqQNx69Ktvd138REm88NkZxLxbEbSSeLDKeVSo+99hNPFk4frlycm70YeJN
wPvTjyV61p0gfRMwWvnP3BsOqcSbgGmXl+yurcgk3kR8ePvMwPnkJeJNRKfP
y2VBxVeJJ4fcNjPjgKs5xJPDm4qLO4ThucSTw21JywmJU24RTx4R9w/3O2+8
Qzx55Lzi+BesKyDeJGx8t1YrXqyIeJMwOmCkemhsEfEmobci6++W1iLiKeBL
+Zm3074y75MCNMWXyJ8rYZ6vIo7FRhwa4sbwFNEe6Rx+07WQeIpIsUiwid6V
TzwlaPbd6zYV3iaeEj7vrROOrLhJvMn4M8phv6rEDeJNRmD48oZ+6WziTcaC
j1XlwZJXiDcFC8JXLH759xzxpuCR3aSdQrWzxJsK9xXO9qd9ThNvKszPb+Wn
ZzPxMhW92UGX5afsId40KBTPSu1aGEy8aTD7O+7LSZ35xJsOx9k52vcK11kN
Hj8dBf6nhiqXzif+dGxfGv0PCzfT+dOxTTvFclHuPrredPgNzdf5N5zJfzNw
RiO0fMoHJv/NwL4hwn0BnheINwOn1T7vMjl7jXgzsKqu9oK7803izUCixyYd
/aPM81WGp/vc4O2594inDPGOT9K/vZj3VRm/XyS29pg+Ip4yahxnLyrRryTe
wN81xk/cMq2KeCrIPGVaeWsmk39U8Kc8SyJLtZZ4Ktg5Z6+114QXxFPBE8+k
HMvuOuKp4PzovpFtmQ3EU4X92MlbuJaviKeKSRltnV0Zr4mnioWFM6eUNzYS
TxUFz/wvFjc1EU8Vyw0CjJ8Km4k3E4KfozqTE5qJNxOh8cM2u91qJt5MbHgU
VLszv5l4M+Hf9nmvRXIz8WbC9dMoCc3lDE8NPwzeda8bzvDUEK01089yShPx
1CARusP2fN9r4qmhr0DspMnpV8RTQxQ/cG2lwkviqaNl2QuDnxvqiaeOYZuO
/r578QXx1BFWdiMpoKqWeOpo/Boyce3bZ8RTx6JRnuNGf2OexyxErWx7GSfx
lHizMKmYra9sUEG8WehZ71p1JpTJ17Nwsqs52PtdCfFmwcTSV0U25i7xZuPx
f7/srtXfId5sCNKlDyrOyiXebDQn1+weJcPE32zMqfLKmGZwgXizMWKE2q6E
o2nE00BIlozfnAMniKeBY5J2zgmRscTTgOpCO5kH/8KJpwG750O8hzevJ54G
UmUioyeWuxBvDiaHi18bMSGA3rc5aFZibwz/5ki8OajeVm3YdcqHeHPwn2fX
LePPIcSbA3+lcPUf/pHE00RXwp8pPu8Pkj5NzA5U/tS8+gjxNNHnf3nZOHYi
8TSx6e96ebnK08TThFht0oKg1mTiaeGulqlX81bm/dUCG7YtJWfSiKeFurzi
5a4WZ4mnhZsTczYbcs8STwvRAtsLFo8Z/7QReTPZV3Cf4WkjyS5rjKZ1CvG0
kRbKuTsv8wzxtBGUeShWR+ME8bTB8ZF/pW1/lHhzsVnpXIuPeSzx5kKrstze
8koU8eYiTtkxb1TuVuLNxbCm0/7pqWuJNxdO/u+l2hq4xNNBgt/brjbp3Vb/
O15BBzMT8n0NX/OIrwNR96QFTusDBs/n6mDxkSVusmt30fV0cNg/KnakWNwg
L0wHoVN/OR7QPk3X10HNPAu1+9npg7xsHeSNUg9VWX6Z9Ohg9qSWWNZ8+h52
6CD2ZzvnlsMt0qcLuYRpOffD6HuloAvVmpgMrmUJ6dOFVd3UWfuEZaRPFwp3
1McvzWXeH11sdQ75uuTKU9Kni4u+l38PncHUZ7qIMd6jeCmjlvTpgn/u353P
pky+08VPdrzvn+oG0qcL348zMlPXvCZ9elA9K9i5pq+J9Onh1OHK5zVGLaRP
DxeqeKX1K1pJnx54YznjdoW1kT49pI1Ms7sf+Yb06SFnuVFEe0A76dPDo+W2
Lw5adZA+PcSGRLU2ve8gfXoI/uP6b8Omt6RPD8s97Yw8X70lffoIDfo012Jy
J+nTxy/bYjM9w07Sp48JOdOeflHrJH360Mo57172mXir9HFki29zQgLxwvQR
NqV0b53cW9Knj13Zmpz4IEafPrYUP7njeK2d9Oljs/F9qa7qN6RPH6L6pfvz
69tInwEusaUWLHzUSvoMkKEX75KQxfhngGWXj08J2UL5nWsAh28/N8/f1kj6
DHBzzTyju78oP4cZYOqSQrWwzfWkzwCa0hGuR74/J30GqF65GpG7akifAc6X
/9BnKVeTPgMcl9rj9yv7CekzxCFUPdzpVU76DJGyaqNDuOgB6TPEH+uzBg1H
ikmfIWRzfbmXNJj6yRAGXTIPovQonsMMcdpMNaDhfg7pM8Tdp+pa3dJU/2Qb
gvfJ7+0zxSzSZwiPpr1jnqynfNFhCNPE9V9uSjP1hhGazi7MiTI4RPqMoLFZ
4Pd+TwTpM4LTtIu8JcaBpM8IewrW7m9xXkr6jKD33KkvLdOC9Bnh8MVtSqvD
AgfzQaIRWouXLngbakj6jJBV3XpPUkxE+owgc/XXRsUQb9JnBOvXvgcsG31J
nzHuLxx9afO0jaTPeIAnMYKPYNJnjEkHvPKff95E+oyRJ1bNOTB0M+kzxm6z
+PWH/INJnzEqRLeWiK0kXqIxgr9cctfa7kf6jKGx0V1PSXo56TOGjuIapS1t
ItJnjMVnAjP+uhiTPhNEjdNt3SPP5D8TTFuUJBUcZU76TDD0SNCrdI2lpM8E
o9RHeHmtDSR9JnC6V2Ut1h5B+kwg3R3VaTMslvSZICW3sCit4TjpM4Fpxkj9
BkVm/WCClpIQK5/Z50ifCSr+Rb1xrL9C+kzBXrwnfFj7dfLPFBpaRo+1C26T
PlNUpPa82KN/l/SZwkYl527zxxLSZ4pMC9UMxbEPSZ8pXkuk5OrGMOtfU3g7
sztn6FaRPlM8T06wqSlm6pWB603KUP+35TnpM4X5b8Gm4071pM8MLWcN1e7p
viJ9Zoj3bzxZp9ZE+swQsniT6wOZFtJnhozvpSf2x7SSPjNcsTyYrzmUyX9m
eOMXmiW7jsl/ZvhT2vI5t4zJL2aYpm5+LkeG8lWFGcQOcrbX4R3pM8Nq2yO3
9dy6SJ855o+9e2+a03vSZ45wk9pP8yd/IH3miFgf0f6z7APpM8ff/xQ+nnfp
Jn3mWL2TvTo+q5v0mePbCAOP0Lpu0mcO4d+ivaWvukmfOVyfTNkedr2b9Jkj
4fe5cN5y4nWY40d2b9y6tx9InwXYV9N/Z9l+IH0WiD3z44Qg9D3ps0D4CK3j
Bge7SJ8FxjUoHoyNoPtdNfB/+WMfhi/qJH0WCFttIBarxORnC/RVjO1fXNZO
+ixgsdp6esXKN6TPArvUp/a79NPz6LCA9S5RtGB3C+mzRFLVqjO6Y6neVrDE
VE6Cr4PBa9JnCUXP+ymu7g2kzxJ7rJUNPx9i6mFLlLhabv7eUkP6LPEuWspg
1bxq0meJZUHSknfrqH+RbYkHbbYGWouZfoUl9hdzwraYPiB9lrhSe/O+dHAx
6bOCa06G1oZxTH1ghd0R+xZFTGXWz1awaNrtX9aQQ/qsMMQrMMNIeIX0WWFn
+qlh8f1ZpM8KRkEKCodOppI+KyzYJxlw9A3Vv9lWKJg92WDonTjSZ4V5XzcO
CeiLJn1WeNhzNFV53U7Sx4LrsMfzQ5cy+Y8Frx27cx2XLyd9LLRZlHbujRaQ
PhaWjvs76ibPhPSx4Ln5u+evheNJHwtnTELG3/AXUn5mYabktfnxKv8G6+ls
FrYpZGzT/jSO9LEwJq7l81WD8aSPBZ8lTx9qp4iRPkBKNuvgsrhVVv87Xgr4
/Hm28cU0GdILtOut9YiXMx48Xw14M0P4YsJnPukHPgnbsiZ3ebMIh71T39T9
N2oj3Q+QfPmzr734zkGeB7CH/V5YcIv8WgWI571NMUuOG+QFAgcF8w6Lqk7Q
/QLPWma3zzhJ+TIGuFCKqV+GM/0BYNNTm/+GrKLnmQGMPvp4W+O/HHpewHUX
ty6FRfT9LQKUvowqmc5i+iPAS519R/k3igd59cAV10RV8Xgm3oB9ufLSds/K
B3m9wMIqwbmjplRPilmjfSNPbNUN6tdJWYPzaGqW/GJa/ylY41ftcocrM+vI
P2uMsJ3Vbz/mJflnjZSq1Z7yUo3knzVSt+4Y43aAqXesUV+p77FpEtVHHtYY
ez8pSjONqR+tcaLi+vjRs+n9DrRGaa/kmpj0DvLPGtyvrruVJ1C+jLHGzRrD
a5yAd+SfNeK+i40/dr2L/LNG8F/R7RdNlH+yrXGsNer25PeUr4qs0bfMPbr2
GZPfBvQdXGHVmvCR/BvQl7jAOU23h/yzRuWOBdUSqT3knzUOv3v6O7Kjh/yz
wdDCB5KWf3vIPxsEe91VrO/sIf9soLLyV1NqBvHUbHDKNVp+mwnx9G2QrO3Z
/jrpI/lng8I/oR01jaSPa4PtO9zEf36n/OphA/n9r9VXf3xP/tlAMenk1cz7
XeSfDfpMp7PTw9+Rfzb4F2OxKY6pj2Ns4PNq5pOamx3knw2ql2nf6bFoJ/9s
4BZ1cNSG3DbyzwZn2rJVmzRbyT8b+K09vCorhelX2CAzxd91pgH1R+ptcGxm
Z8Y8g5fknw2MmqcoejvXkX82KFcJ5iqE1ZJ/tgiRuRLtX8fEny2O5H9c7evx
lPyzhY3CKSeNsbQeUrNFiu+k7OYypn61BfvdWd7vDsqnsEXv0xbj/Wvp/eDa
4p6gqnBH5i3yzxZlpmp/ZG2uk3+20KpQbdx4hurXQFsEmSwp8Ft1jvyzxb/O
jdyjncz7a4tY5/0tQpeT5J8tltjZVxaLxZN/tsi6O+yBMncv+WeL/9pU8gJr
KZ8W2WK4gYRf/QnKLxW26JCKn74mdTn5ZwtV70d9T+4LyD9bjK3mynReNyH/
bFGS+u5wbgPlUzE7XK/Z9MzKaSXlPzvEPTwwIjL8L9WDdgh3HfF7Rtk48s8O
3Xsj5uhMH0/+2aHmh+f75amUT2GH1Dd2x7Zk+QzyuHY4K69Z4bGS8qmHHZbt
txc7VGtE/tmhK/v85IASyqeBdph0cwOvJJfyaZgdxks8nB5Ut4H8s8PGMSY3
fDN3kH92cNR+UWjjR/k0ww7q7i1hBV6UT7PtYCK1OtXAn/JpkR1CfE/56wiZ
+tMO1i0/WqSSssg/OwSca2HlT6Z82mGHlHHfbeVOUT7ttcMclVtBZs/zyD97
7ByVmFf1lPrDUvZYbxXsPd2B8qmCPdzsDXfnSlI+VbOH2ixp84eqlE/17dHk
PsFp6Glab8Ee3Vbs+fsMKJ659jCL+uSzuKiG/LOHYqXfkGY/pr6wx4zVK2Un
GzSQf/b4mVJYwZOm9XmYPSYkDGkf9Z36jTH2SMKxlRc2tJB/9rDXfaTa0U71
T4Y9fP64eL4SvSH/7PG9bMiBabnt5J89jNgdOVaj35J/A8drTu5vcKb1db09
MKQpPD+IqUftIaExld8dTvml1x7Jk5qsi/3fk39sDC8aovvLjOpPKTbWntW8
freZqQfZEPNfq1y4hOpHNTa8lt34MD2b6k19NqwnNYSlvqL6FGxYyizMP9rA
5D82Pl5+MqXrItWrHmwYcRbX6sxj6ls2ZN6u+XqyiurhQDbW3R564Lsa5fsw
NlTWeeP0/PfkHxtvWbLjVyzvIv/YqMs6qnCIT/ebwUb/d6XF+TOov5DNxlO5
yS9fNtD3qIiN3hLRXIUwpj/AxsghiKqb+Ib8Y6Nvi8uulGSmHmVjyOaagNEz
qR/QywY/cpIUx7WJ/HPAONkguSwP6tdKOcDcYUXlvg20/ldwQP3hRpVTZ2j9
ouaAMa2zh5a8ZfrfDhDKVmfKi6gfCwe4AbWZ5Y/JPwcscPsdm815SP45YO+x
Pg1X1fvknwMymvM2JC6/S/454PD7rcVrZO+Qfw4o659ivWQu7W/GOMDr26a4
/knM/qcD4vPiZK2O0PovwwHyH4YEO2ykfmG2A1K7Uo5tWZlI/jkgwVgiRegf
S/45YOuF7keVO3aRfw7oU9s5vMEkiPxzgMHqLm+HaC/yb4D/8sOJn8+syD8O
9vnJyFVEJ1P+42CSfsuZIHFD8o+DPQfaHeS+Cck/DtbK8a4c3+1N/nEw/vaB
44lfab0PDi7f8V+9UoOp/zjg8VfajLSn/RcPDkqVMhwUP2wi/ziIn+fhP3xg
/T/oHwfKb+fc5Mxj1vscJFqYL+m3I14MB9b+qeaq1n7kHwf7v4ywd35D/YcM
Du5HTnyRXigi/zhYdjry34cVtN4v4sBm5rDiP1tODd5vBQca8y/Gr+8yJf84
iLjaJC57zZP842DD+dIf1Xtov7CXg91f5rkdlqD1vpgj1IwfTv624yDFnyMc
ThdnPjl+jPxzxA53kXG/CvVv1Bzhu133XmQhs1/oCIMlRsEO2f+Rf47Y55Pz
6EoUs15xxDCZYyy/rjzyzxHrYvtcjYcy/SVHFK4dPlrVh/ZrAx3h9vLvigrl
B+SfI7aOER+rpknrqRhH1Acv0Fu/7Qn55wjFtook5WHU/8pwxKxhHSVeK2vI
P0fc7pUyLax7Tv45Im2ERpaHez3FnyPSb22/d/nVS/LPEXlqC6vvelJ/rmNA
nwH/Stoa2n/pdcSDVXcrfE8w60sn7KwYWyGdT/1RKSdIsaKlox63kX9OEK+o
7Ol7QP1DNSdM/BWefT+L6l19J9ztXJeS6Uf5BU447261OEuG8jPXCfN2V4MV
R+thDye4Pa+LX9rD9Ded0PlXq2qPGuWrQCesShmtXGHErKcH/g4dvYZpTP3n
hF37mv771sKsr52QMT713rftxMtwQtux7adM+ph+hRNip+/df9qRyX9OENu/
61/kdib/OSGsv/i/x/FM/nPC2k7FsJJDVN93OGHTtnVDZgS3kn9OOPqs3Oa9
A+OfM0YdcQpYJkX1pJQzzJpur845QPtZCs7I2JPoL/pO/Ws1Z/Ai9dUVl1A9
qe+Me+s/icweUT0JZyy6wA45YEv9H64zPnezSqOqqJ70cEZ6k8ct829Mf90Z
LpKv5BcdKCP/nDFrjfv+2MAS8s8Zwi3vCiZco3oyxhkRaaZfa5Konkx0hnSk
akRQGvX/M5yh845b4vv2MvnnjF07F2oMUaZ5gSJnvHB7WPGmidm/GdDrdNv8
x5448s8ZCsFlP/rn7Cb/nKHpkKk5z3sD+eeMskLHu26mAvKPi12rnySnqt6m
/MdF+ofoxMNdjuQfF3WsI+P0uWvIPy7m5aZ7zasKJf+4OBJ1X2/Z7Cjyj4tW
+WVHX785RP5xsey5eWXDzyPkHxfaL+v1lrQmkn9cyPaMNdm88gz5x4X7tRiH
HNUU8o+LxMPn2XsuM/UzF8MPqbQPz08j/7i4HpxurG57lvzjosOpwfy02Vny
j4uz5+yfOJyl/agiLuym6TTLRzP1HxdDHjUuOPA1mfzjwm1D5u3qX7S/3sHF
75G2GmmhieQfF+Mm2KfPTj5C/rngT8R/5WGL6X6lXHBwY5jy3IZI8s8Fwx3D
fD2yQsk/FwS5X/uv+8oa8s8F7amfdXuW0n4UXJByQO51vMN1qp9d0GKx/qah
pDP554JJV/ZEOHmvI/9cULuj8/RQn3DyzwWtmp2t4Uqx5J8L/NJ8puwUp/20
GBdcsfsy/DgY/1ywtOr1re+VNJ+U4YKcFX45sbVXyT8XcJ6IeIodN8g/FxTc
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
gyk=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
lXQd+bNHGNteY2UV8STsIbX7iM7zucSTt8d8VnhHSFYt+bOHfvEIm4LXlM/E
Hu/D8sMHWmj/BfZwLXw0p/B6Nfmzx8OJay5ocGm/xtse/qGFj+aV0PPM1x6B
mlNFlRUYf/bgVtuNfrqU9hPD7ZEme/bM7DS6n6LskbrMyU+zu4D82cP78eer
gqJc8jd0vhcLXGy6mPE+lK91m9qavkvkzx51Dz888lA4R/7sMeO4e+yV3gTy
Zw/b0WcDBs5FkT97fNO1zPnDDiV/9tjMDj4bsWwx+XNAoMynyile2uTPAd3P
Cw/+OL2A/DkgPs1H0uoj1U9NB/gHyTxipR4ifw7oazj60cglgfw5QOT9tp+a
ObR+5zjA4Wn60SUhl8ifA5LEUxvXnWfmFw5o+Wx8/W8w7Q8EOaD22hbDrDO0
fxDugFdpK6fM3Mn4c0Dbvof/6VmVkD8HbMhfdjj9ywPy54CJbpr5j05XkD8H
TN4l6munW0n+HKCTcUBh5hG6vlUO+FAlW7j4Ds0/mobyjhj35Hp9DflzgPzL
fxCQRs+/r0N+5nYeGsF5Sv4c0XfS6mFPKTP+HPHqXJlalSQ9P+Ud0Vy4P2SD
Bo1nTUfkOryteDiexrOJI/zjzZw6iokHR4hHep667k48jiNMVqVbdQ+df9if
I6xrnItEmymfryMS2PVTJ9Y/IX+OWGUU57vhZjX5c4R2SURF83Lm/nXEzX0q
um7vKsifIzbf8PK9KCgjf47oVegeEXethPw5QqKtOq1Mopj8OeJviFMWt4/q
S5UjlPNX7s4YyCN/jiiQb1Y4xc0mf45IfJQtyxp/lfw5YuuFWj25henkzwkD
3WV1LgvOkD8n8BUjE6XN4sifEy66m26Y0EL1U9MJWz8lnJII3kz+nNAohZZg
nbnkzwkuNgeM+8f/tRv254SwaOmXrfsF5M8Jq8zndug6MvvJTrC6ExL/TGEv
+XOCbWaD1uCSY+TPCY9cg1IHbGm9EuUEhWtm0NZn1g9O2GsaLff8Kj1/0ofO
v35JZtj2TPLnhP74wPap2Vnkb4i3PXfk/FRa71U5oWtb3LPtgYw/J2Rkui5W
mUTPxy4n/N3C19JYe4f8OaE+JCrMZ8098ueMQ4nzOpYMFpI/Z6TOD4PoMeZ5
7Ayb7Osne5nnt6YzyvcbCvV/0PPexBkyH91queX0PIczVFvFVt+YT/cbxxle
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
qL0cOVXPsof1/wCnAn5A
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 80.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 80.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756507468512373*^9, {3.7565074996667137`*^9, 3.756507536567655*^9}, 
   3.7565076768416767`*^9, 3.756507899751193*^9, 3.756507936230351*^9, {
   3.756507976453806*^9, 3.756507990180303*^9}, 3.75650977390014*^9, {
   3.7565100414241743`*^9, 3.756510046823303*^9}, {3.75654346048952*^9, 
   3.756543476889289*^9}, {3.7572862641102962`*^9, 3.75728628703018*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Blue sideband simulation", "Subsection",
 CellChangeTimes->{{3.756506501567689*^9, 3.756506504368865*^9}, {
  3.7565069361720867`*^9, 3.756506938263636*^9}}],

Cell[CellGroupData[{

Cell["Single ion blue", "Subsubsection",
 CellChangeTimes->{{3.756510533500692*^9, 3.756510538332412*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Nu]"}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Total\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7565105452189302`*^9, 3.756510552084774*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxtmnk4ld8Xt6VJpdIkSUWlJCJDRYaPMbNjnjmD45xvFCmlkUqlSZo1SaQ0
cRKRktNAgwaVkMhRRGnQTOPrvX5rv3+9/dN1X9s+y7KfZ6+1bjT40Z5CeTk5
OY3ecnL/9////78qy3Sz0qCo7yMs/8cyy4udy04ofDckbrds1rtVOWSJPXGn
pWLp1ZfLv3oRf7Vc4mVjOV0njLjLsmbMhrxxMRHEvy05Q15Y3Nu0kFgOph66
VZYfFhPLozRnT8HVWcuJ+0B5Wha61RKI++GBV0elWdU6YgX03/i3MpS7kXgg
nm+aGXvIYguxIs6eT1+aPT+FeAh2/rxZNjJ2J7ESXH9rjBQ93U08DDlyRfKq
YfuIh6OAd7z255ADxCOQFnen5UnLIeKRcPyslxQlSyceBQ0rzo6bcseIldG9
7cP+b1mZxKMRev3C8ZyA48QqUNrmuv2yxgniMchct7Jk4O+TxKrosj4/dVH7
KeKxOKL6TnT79RliNcRIyk62fz9HPA45hjl+3ooS4vHYcLLrywfN88QT4D7t
14wZDvnE6rjVbw/vV+yF/3GiOiJaUk0tTxTQugY68gVlzc2FtK6BVwbnXO9q
FtH6RIRfu5HetKiY1idC4qx/u3/FJVqfhPTao+ZaEy/T+iRUHy+s1tx4hdYn
46edWXnLp1Jan4zZOvvOOAjLaF0T32YK7VVjpLSuiehkvUi7mddofQr25ksk
yt+JE6dgtpLL5TVXr9P6VIxcLNe2YMsNWp+Ksq02jtUBN2ldC0MkGheO6ZTT
uhbqd1dKyuUraH0aTDa82abXQJw4Db836bg/KL5F69oYseBbWWrabVrXhlzt
O7Fw5R1anw43Fe4+U95dWp+OG88z/f86VtK6Dk6tiNuQbnyP1nUQ3Rp9SWHy
fVrXxSb5RQHaox7Qui5KhMP3dCo8pPUZSLVVFzj8I06cgY03t9gPXVVF63qY
+sX1SV43caIeHrX1H7gq/hGt6yNaNanv/C5i6KPic+ed6OWP6ev1UWV+0m79
L2KpPip9v3gcXPOE9s9E5LemC6flq2n/TCSkyo87vYk4cSZ87Rx1UgY/pf0z
kWZ4d6HLHmI5Awy32MOtH1tD+w2gP37tAt3jxIkGSClR+GyqW0v7DfCpYJRZ
10ViOUOsHvN8a6BVHe03xIwJZ0b63SNONMSTNw/+vPR7RvsNscAsTPDlFbGc
EZoHjvdbHVNP+42QV89pjvtDnGiEctmhXo+3PKf9RqipbMzbqNJA+43RT1ux
MfkEMYyx3l9pyX2jRtpvjIh3xwMdbxBLjWGwzjD2k8cL2j8LN1vy00pkxJiF
h8s2nDoQ3UT7Z2Fyrd+a9X+JpbNQUflv2UV7Ge2fjbGK5yI1U4gxG3WnRvXf
/JQ4cTaK3f8WPVdrpv2zkZS1+v3ocGK5OchZHqky5wwx5uBU68Mzsz4TJ85B
7njPcUNMXtL+OXivd7K1OIFYzgTyUXJrZ1YQwwTcg8ujYxVf0X4TKNRuNF7q
SSw1QYcqP3h2GrGcKfjC+FhJIzFMEb66ZlDDxBbabwqJ9d7rBSJiqSlebLCb
bXyWWG4uNoUFDfPvJMZcrP+T9m+0USvtn4vlL+KLo5cRS+fic+z+nwElxHJm
GKimtv3Rb2KY4ViCBh5ZvKb9Ztg2bdx7r0RiqRk+LLJf5n2NWM4cqzJ+V97v
1Ub7zaFrp/OqxIo40RxPSi+UKa8llppDq7kiuqGMWM4Cibc8Bvf/y/ZbYOip
wKs757bTfgs8uMsvXBZPLLXAmUUVMwsKiOUsofF0bKJ1JzEsIR6w8+e46W9o
vyVm1TsMsBYSSy1xLOXixNPpxHLA25SuSo9aYnVgRevMA0ZD39LnAcm7X+q6
2RNzAdULFuYHVxEnAiphSVtG5hNnAH8COW+KXxNLgcTFn8zXq3b8j2WAdGfJ
6mhXYjkreKzwylueQKxuBXMDhY4jEmJYgd97dFCdjJhrhUjVP3M1ld5RfCuo
F19rSLQgzrDCkk7Lo22RxFIreH1a2OWTRiyzQmVlTsztG8Ry1jh76WPW3A/E
6tYoqZ9pfXb0e4pvjXTB1qGjQcy1xn2TTS3xIuJEa5j9CMl9sJ04wxrfOYbR
oy4QS62x/7mHhVMtscwaW6YJHeb/JJaz6blf8x/Gqn2g+DZY6+6mwzMnhg2E
z7zuGYQQc22Q9mmUUetK4kQbeLV6/I07QJxhg/4jwxpeFhJLbdDYJ2TftEfE
MhuUloQNcugglrPF87kHZ5r1+UjxbeHhtEm5jxoxbPHMWanpiAEx1xbTQ/Jv
9XcgTrTF0pRjkxFMnGGL3vZveXbRxFJbrK5I7a28llhmC6+a3GzJTmI5O8ht
3PF7xDEW3w4fh9+ptshj8e2g3Oo9Qv8Ki28Hp+zswte3WHw75My//Ij3mMW3
Q/wf430Zz1l8O4ydIXTKfMXi26Hcws8t4i2Lb4/q0FbVdx9ZfHt8nHXVyvAr
i2+PpqSFC+b+YPHtcaZCxOvTzeLbI/Rrn5/bGWfYY4jDdp26LhbfHgojjfu/
+s7i2+PdCbXzuV9Y/Hn4ae46f+7/iz8Pe/oWbN38hsWfh6NaYzcdeMniz8PY
j+ptkfUs/jykv9Nx7/WIxZ+Ha5aClYEVLP48zH21F/ElLP48KA432hZ0jsV3
wK2y2eF9j7L4DsiaMqxt6Q4W3wH1UanO59ew+A54z78vK4xi8R3QL2TwkI0B
LL4DtKed9Jxkx+I74OjkVrsdeix+z+fFtu6rVGHxHeHkH69YL8fiO6Lp8u+k
K23s+XdExSPT70vus+ffESmfzRb0zWfPvyMOHJsyJGYve/4d0atiwMiiZez5
d8TSMSVVDf7s+XeEsCr97Ks57Pl3wtSEdVMejGbvnxPuWPKepH9j778T9qgZ
h/o/Zu+/E1RvSDf9OcfefydoJvlP2ZnM3n8nnDx+SlOZz95/Jzj0Sdy4w5S9
/054Om5LqNxw9v47oyhibF1kO7t/nHF82PuZT0uJ4YzRpo1XLXcRc50xYfXZ
1lwhu/+cMaJvifqUOez+c4bh4Kt/cgaw+6/n81+uGze3nt2/zlD477Ch7BS7
f12wbsr4fofj2f3rgrQm9wWx9uz+dUFIBddLNILdvy5YaDumYE0Tu/9d8Dd8
6+Erp9n974LG1mvamnHs/nfBpG8Ltl+xIJa5QJy5u/em/sRyrjg3wLgh+SGr
P674bvE7rmIfMVzRu1eLhW0IMdcV/U2bLvSbxOqbK3x9ErjD26n+Zbhi3KID
LyLPsnrpipbYt09HxxDLXLG4X8kvVUNWP92gmbJq+IpvVH/V3aCsuOSNSRGr
x25wHcQJDosn5rrhbeo9z49zWH13w3k1jvRDF/UDGW4wlSZn8YtZv+CGEm+F
fpxlxDI3zK9t+nXZmPUP7hj/1STrzBfqP9TdIV/xddLk86wfccfJGtM87YXE
XHe4CsYm3NRm/Y07HDs1ar6/pv4nwx2mhu//VmSyfskdh4LKnU1DiWXuSLw+
U9l3DOufOPAbkHJ1QjX1X0o9LEk/cziFWJ2DpzqaTo8diPU5GJu8WLFCnvVr
HNSn/Ptv9RXq/zgcfDvw7cWfOGIuBwu773a46BHHcMAbUDUypp31lxz87L7W
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
RkHboL/ug1j/9x++xzYO/rm/3vL/AEWx0a0=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200.}, {0, 0.9992132075491431}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.756510556592512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Nu]"}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Total\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.75651059703395*^9, 3.756510608320366*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
0h+7daT+P/9vDobWfxpV3M3/BzjgzUI=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200.}, {0, 0.9990043124874026}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7565106131477423`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two ion blue", "Subsubsection",
 CellChangeTimes->{{3.756510527596553*^9, 3.756510531147707*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Nu]"}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}]], "Input",
 CellChangeTimes->{{3.7565064544429626`*^9, 3.7565064632684097`*^9}, {
   3.756506516443489*^9, 3.756506518968326*^9}, {3.756506566006073*^9, 
   3.756506574745083*^9}, {3.756506754533291*^9, 3.756506755844652*^9}, {
   3.756506869153369*^9, 3.756506918453288*^9}, 3.756506953335333*^9, {
   3.756507056111033*^9, 3.756507056223549*^9}, {3.756507111209507*^9, 
   3.756507111300555*^9}, {3.75650716022784*^9, 3.75650717633152*^9}, {
   3.756508014474205*^9, 3.756508155932074*^9}, {3.756509783070385*^9, 
   3.756509786234939*^9}, {3.7565098917464857`*^9, 3.756509903701909*^9}, {
   3.75650993681052*^9, 3.7565099500918827`*^9}, {3.7565100900964518`*^9, 
   3.756510097327483*^9}, {3.7565101444698*^9, 3.7565101679558764`*^9}, {
   3.756510204873599*^9, 3.7565102254738693`*^9}, {3.756510258918448*^9, 
   3.756510259041923*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Total\>\"", ",", "True"}], "]"}]], "Input",\

 CellChangeTimes->{{3.7565065451847963`*^9, 3.756506551337469*^9}, {
   3.756508051834083*^9, 3.756508073370998*^9}, {3.756508139124958*^9, 
   3.756508140039226*^9}, 3.756510055667791*^9, 3.7565101479510717`*^9, {
   3.756510806205161*^9, 3.756510807910783*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
/wdF/PU7
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 200.}, {0, 1.7676418218770058`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.756506554376363*^9, 3.756506576465776*^9}, 
   3.75650676051611*^9, 3.7565068151319847`*^9, {3.7565068858192244`*^9, 
   3.756506903734387*^9}, 3.756506960900989*^9, 3.756507061635906*^9, 
   3.756507116251141*^9, {3.756507165782686*^9, 3.75650718069452*^9}, {
   3.756508048276936*^9, 3.756508159828587*^9}, {3.7565097908655663`*^9, 
   3.756509800778799*^9}, {3.756509886933832*^9, 3.756509908390246*^9}, {
   3.756509945637965*^9, 3.756509954891185*^9}, 3.756510059491762*^9, {
   3.756510102602799*^9, 3.756510265568391*^9}, {3.7565108137047863`*^9, 
   3.756510821922782*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MaximalBy", "[", 
   RowBox[{"expoteddata", ",", 
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.756510823461444*^9, 3.756510913691201*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["69", "2"], ",", "1.7676418218770058`"}], "}"}]], "Output",
 CellChangeTimes->{{3.756510850083282*^9, 3.756510878100029*^9}, 
   3.7565109140343246`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How phase effect the evolution", "Section",
 CellChangeTimes->{{3.7594724003886957`*^9, 3.759472405458173*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", "0", ",", "True"}], "]"}], ";", 
  RowBox[{"FirstRotation", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxd2Xdcze/7B/A6jdM8ZWVv+iAje6XrCpkZIXtkREYoERIiInuEkgolIyMz
KRoyGjQ1tDvtztHe49vn08sfv9/7nx51n/d936/X8+qPHvXftGeJmUBGRqa/
nIzMv1///2Pb+dns7MPW9H+/d6BZ21+Otj9aPM2/z6kSY/+L1EtdMzj6raZ+
+/p1UtaNj2vdOEzf1eW/hx4ZDnmt1o312z/vTvZ5x8R6zxbrlxr/+5O7NHH1
ob76eevxvheVX383tMeqHfoqSff3TlPxoQqHqcP0uu/Hfo/IZMGUfcc6Hdcf
uvZSaPUQXzoU+NH8zBlH7P+MzLaZRlx8dFnfq+3tpPsv6Pu1dYLJFTdwnh/N
ET18E/jbXX/sf88rMtASTZ+wzAvnv6b1VvbvghY91g+rHtJ2whvaW3xr5LSw
F7jPO+JDh2t3ab7RX9J+IFlfMdnze1AA7veeplkIx1xXDdbPPvzvhgFUP37I
0avHwnDfQErIEi0rOfxV3/Lf6+0Noiob0n2vEoX7f6SrXT9HLXeP0W9vPZh8
f4bcPnspHnmCqfn7urNmWb/05/x3QAh5XJ/Xx/tWKvKFEHu/OrwwOEP/39Pa
jqTvWsVBKc+zkTeMLOaO//aOxPr/xUkKo+F+gx3Hdi5A/s+08mbALvHoYv2+
/16nTziZzC2b5XhHgj7CqV+X784tT8v0t/73fKHujmQ1+H0F+vlK7m9Dq6Iq
qvT/3a3zs6+kLq1kt3W16Osb7e8k2WfUVK9f8+921d/o3NORug9jm9Dfd+pQ
uKDH+axW/f/qmRZBDcYZNpXOstTeZwQlKFa7rl0jR/9d71QkabxxXKcyXYHa
+42iL/aL7S7OF1J01H8PdYiocTl5SJna+46mbw+9el6IVqX/4nb+QUdnlzYt
nyui9v5/0MMpfpXzbDTpv+3W/qTqxV/dTmZ2wO9BDJ1eeMd20vpO1J4nhoZa
jv+9uKoztfvEUIVh8iL/e1rUni+GBF51vut3dKN2r1j6rdBHaZJRD2rPG0tn
dtQ90Zvbi9r9Ykn4s+PI7Zv6UHv+ODrzzmviBqN+1O4ZR/f2/XrveaA/+oij
PY+OvLR7MYDafeMp66RP2JGGgegnnkavs/XXNhlM7d7xlKj51F4xRBt9JVCv
TPOOj/SHULt/AhXsHbLxzo+h6C+B/ul1Zpu1pQ61z0MiHb74ZFnIPyPQZyJ5
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
UUlJK/38agLuwqOSxqgNfHNM9h48KmnXjIz1EXPuwaOSFDrsept0+R48Kul8
T7Owhyn34FFJH3unn9MfeB8eleQUOLqzq8V9eFTS6wLRhkD/+/CoJL9sW4sH
8l7wqCLtj260ytgLHlWUseV9QqK7FzyqaGLcgmG9JV7wqCKxiayerp43PKrI
P+GJnOZ5b3hUUZ3ytkNBad7wqCL99S3XJo98AI8qevv04pxTxx/Ao4oaVk9x
uhv/AB5V5GiiO+/SPz7wqCL3GS9tFh3xgUcVbUgcJJMb6wOPKrqso/Bz3pCH
8KimL6Gnox2PPYRHNQ0+GZLjmvQQHtVkUBVQ6aD7CB7VlGBskTvL6RE8qilo
a+TVbPEjeFTTiWHjskz4MTyqSeHxFh8vt8fwqKbP6dkhP+ofw6Oa0ne3Kiau
eAKPatJ6UzDf/+0TeFTT7AcnNh/S8oVHNa1sPde7u40vPGro5xmZ2beSfeFR
Q9NbHB/XTnkKjxq63Pew5iT3p/CooYfXCvRXC57Bo4bGzVlav37bM3jUkMdO
/9ZZ0c/gUUNykas1Oo17Do8aiv6okht2+zk8ash2gXP3EYIX8Kihfb3TVpdM
eAGPGnq8vVDUe9cLeNSQ+XGHC6F3X8Cjhn6/1x6RlvQCHrW072vT9B0iP3jU
UmqOdICFoR88aunli/t98474waOWzriPdop77QePWvrl1+XleIkfPGopUvlI
nkj7JTxqKVZziuX6DS/hUUubusV5DnJ5CY9aWrrG+uPG+JfwqKVC3w8dtUSv
4FFLNwaUiQ3mvoJHLWVZyNvmObyCRx3Nv+PYXTbkFTzqaNjAR3LOza/gUUfF
KhNs7055DY86Mh5yNlj74Gt41NHDRbUdB799DY860rtv/cKt6jU86uhtj9OJ
F8a+gUcdra80DKqzegOPOvJ7v+Fu+ss38KgjwZZ1AXqVb+BRR+lFraQ17i08
6ujV3VvmO/a/hUcdhcW3mk9+9xYe9bTzmov1yfq38KinZxNXBc3RewePeio/
4mh99tg7eNRTb/OQCMOwd/CoJ+svg//YCf3hUU8ys5dojDHyh0c9hQaar9h0
xR8e9eSqNKxClOQPj3p6HD5eZVLv9/CoJ72bNt/TN7+HRz21pBivlHnyHh71
pPvEI92j4j08Gij0WsDRwCkB8Ggg299hG5afDIBHA93OmuRtERUAjwYSG3+w
Emh9gEcD3Vq8rriz6Qd4NJDcZe/h3o8/wKOBQoY6r3xV/QEeDfTYaep5MgiE
RwMZLTHOn3shEB4N5PzMziEuJRAeDdRjV+KJFO0geDSQ/K3MxvXWQfBoIENb
N6XNoUHwaKRPaw6G5Gl+hEcjeYouUsGGj/BopHW7Xrtue/4RHo3k/nNk0dbW
j/BopAOjX1Leok/waKQIT0u/HM9P8GgkV+vtxhsqPsGjbX864TJiQDA8Gum+
XP9xO+cHw6ORvDp+PV5oHQyPRlrom3va2z0YHo3Uw0lnwb1vwfBoooH9V6Zm
VATDo4kG9es3fk3vEHg0kV+Ezeauc0Lg0URB9k47Ou0LgUcTTf8WtHCRewg8
mmjFpS+dIr+HwKOJUsM2BZ2uDoFHE3WYJVx0on8oPJoo/JZpZNCCUHg0kfLu
peMmHw6FRxMNyG11qnoQCo+2+63I+vknPhQeTbR+1Eo5HdkweDTTgJX6gx+M
DINHM2WP8Ry3cW0YPJppyOXPo9Y6hcGjmXr0GdX5pn8YPJrp897PGR0KwuDR
TBueqp+P6vIZHs004Xx8168zP8Ojma7N17KTtf4Mj2b6nqL51vb+Z3g00w5L
vcDx8Z/h0Uy6p3efGSUXDo9mCnwU0nH72HB4tFCHpVZLcjaHw6OFwn2qp92+
Hg6PFqLbTRHXwsPh0UIfex6URtaEw6OF/hy77TZjyBd4tNDkSYe/Naz6Ao+2
9Qu0pfzcF3i0UNWwxRv/+fgFHi10xXzBC7eyL/BooTfyPQyMB36FRwvlz3wg
MFz+FR4tdFNvT47N2a/waCHzUWrRRYFf4dFKvuMXPnMt+wqPVrr2aoal06Bv
8GilwVunyrxf+Q0erWQ4wXCm9oVv8GilbjsiB8WFfINHK31MWn0msOYbPFrp
9vaAZXk63+HRSsPfSncbbfwOj1aaOXzCh/Ib3+HRShNNJvVKjPoOj1a641Ri
VSOIgEcrfauy9DCZHPH3/xycW/OPfcWeCOSR4eFZPjVRDyLgI8O+Pd+li9Mj
kE+Gn6qP6TilSyS8ZFgues3uKKNI5JXhB1MfR952iISfDBf6RQseBkYivwxT
6OuSsqpIeMrwrmjTdQdGRKEPGQ6+5jd80tYo+MrwB7feIyZ4RKEfGdbruWT0
3uQoeMuwm+FE1fwO0ehLhjO0q87dnB8NfxlWk7l30uFUNPqT4bmdhgX7forG
PMjwtq6GIs2GaPQpw2YzxZOfjfuB+ZDh1qZxIsc9P9CvDDve9jJxffwD8yLD
W713pxTk/UDfMvxsZpjpnv4/MT8y3Lsl3k933U/039ZfiNpVHZefmCcZVvHv
+mVD4k94yLJJzZ8z+Uox8JDl929k3Sb/EwMPWe6g/LLpoWEMPNrWveTPjdsS
Aw9ZTpF30047EQMPWY7d+OGZx90YeMjyJrNZgmPBMfCQ5et7DrYeyoyBhyzv
nJ198nJLDDxkeY3C812hvWPhIcsuiS9uaEyLhYcsH6xfmWGzNhYesjx8YEDf
RttYeMiyzaQFE1xux8JDlgtyOzQbf4iFhyx/DPNdOPh3LDza3vfZqtCpMRYe
sjzTbWRjj55x8JDlAAtn5WlT4+Ahy+frXigfWhMHD1neIZmV8MM2Dh6y/LA4
3EDfLQ4esjwpYOawr4Fx8JBlg50OZtvT4+Ahy1+mlUYMaomDh4CnNV4dXd8n
Hh4CHnZ31d58ioeHgM9diF5XahoPDwFb9xsao3IiHh4CHp9lcsfgfjw8BHy1
otT18ud4eAjYZtgW99q8eHgIuINL2x+kwgR4CHiCeoyq+tAEeAi4uX533w/z
EuAh4C/3Z50/visBHgJWnHNIe93FBHgI2PvssNDFLxLgIeDowCVj18QlwEPA
m996LjhSlQAPAQ+nI+JXWonwEHDJdKVI2cmJ8BDwnH5TE8zWJMJDwId29YnP
tEuEh4AXNTu57vFMhIeAx+RpNXcOS4THv+tdo3/mJcJDwHdXP0jzUPoFDwHL
HQxtdtD5BQ8Br1l2WHBs4S94yHHvyAeBFyx/wUOOfynnNb+4/gsectz3H5eb
he9+wUOO570rXz3u9y94yPH6iR27X2/5BQ85fubZ8b5wQBI85FgjP+H7RcMk
eMixnZ3i+qHbk+AhxyEtA3STzifBQ447nTukeetFEjzk+MDEuT93JiTBQ463
Dbynt6QuCR5y3OvkxiHzeyXDo229/8RNyzkZHnKcJPPw/b4tyfCQY/nEzi33
ziTDQ47/3PdryfVNhocclx80dZoQmwwPOVZ1/rXHtToZHnKseOWenUaPFHjI
sVnDyBPO+inwkGP7Ll/mD9+cAg853qW3+GG8Ywo85DiiYZ7ZOd8UeMixnq1o
8dLYFHjIc6N93HidmhR4yLNh64vcjj1T4SHPB2LdtVU4FR7yHJGXH6FplgoP
ebYJNXXTdkqFhzxPcAjfOv95KjzkedrJV9VHE1LhIc9mCS86h9SnwkOeh6xR
vdSh7294yHN0brdRe2f+hoc8O7WEfUzb/hse8txpSYZwxaXf8JDnNX4DEzJe
/4aHPCs90ZPsS/0ND3lOGmjVS0smDR7yvNUlfmj44DR4yPPeEd3Sj89Pg4c8
12/LaZ5jmQYPeY7VC1va+2YaPOTZWkbvQXNgGjzk2ctndGBRTho85PnBAJ01
2Urp8JBnTbaYIx6ZDg957lesM7diWTo85Nmy64UBqrbp8FDgKCMfl5F30+Gh
wI4jHlut/ZoODwX2sTLbe12SDg8FNgq3NfnVKQMeCnxlyAlx/ykZ8FDgnTGC
rAOmGfBQ4N3ZViqJpzPgocB2XzoP1nuaAY+29S3Ff57EZ8BDgTudTRk2qCED
HgoctCzI2atfJjwUOLPCvGz47Ex4KPDolRcaAi0y4aHAu5x2WC27ngkPBTYN
mtSlMiATHgo8MKOv563sTHgo8AL1fuYD5LPgocBP9Vb72XbNgocCd1ivq5I8
LAseCjzbb97iifpZ8FBgqVmZqYtxFjwUeN/oLd1btmTBQ4FFdvnLzQ5mwUOB
Yzze1vw4lwUPBe7jVZw4xSMLHorsGxsT8/BlFjwUOUF8MKzblyx4KHLdobKz
TilZ8FDkcL+ZMi2lWfBQ5O4rTgr2yWTDQ5FnqJzYVdQpGx6K7D3BrPvGf7Lh
ochLO4wSp0zJhociG+Vm+yxdmA0PRbbztqcfG7Phocjjn3c+PXd/NjwUWcl2
3fLwM9nwUOQdcdecDNyy4aHIzauym4KeZ8NDkWv2WzlOCcuGhyIHJdvIv/uV
DQ9Fnpg5eOHY4mx4KHLHoO36z5uz4aHIr7Tjnw3rkAMPRR77q+yg96AceCiy
8b4VB/pOyoGHIpd3un/81vwceChytyvWlpobcuChyE40YoCjVQ48FHmDUdPO
plM58BDy0pHdhux1yYGHkL+3BI/K8c2Bh5ATiw3WLgnOgYeQNx0pPR0cnwMP
IR+4Jj4zvCAHHkJu7UNTbzTkwEPIqgm9bZrVc+Eh5JH0osum/rnwEPKeQePL
wsblwkPIeb5VmQPm5MJDyLNP9/94dE0uPISsaFW7OWl3LjyE3H9P2OPhJ3Lh
IeSFNeKdR51z4SFkweyfx6Me5sJDyCG68mFagbnwEPKM/Upq637mwkPIpUo2
4z1ycuEhZPeHMt3Tq3PhIeT1Ry0uaymL4SFk4Sr3/fN7ieEh5G5JZ+/ZjhLD
Q8gujlPLH0wXw0PIhzenTo02EcNDyIOGPFwrNRfDQ4lT+smNVDkihocSZ83a
5tTvkhgeSqy0abfR6HtieCjxZovohXpvxPBQ4nmHl+8y+CaGhxKrOzce499i
eCixh13MlslSMTyUeGKUao2ObB48lLhprFCjW+c8eCixuVj3XLN2HjyUeGtc
l1lpk/PgocRhiuY9XxvlwUOJrUimwGFDHjyU2NAk02GhVR48lDjytnas5qk8
eChxt+JGn8ibefBoO0/GJ+/o4zx4KPGGky5bhwXlwUOJLU/uFf74mQcPJa6s
rfbanpMHDyWWHa7Qq7kqDx5K/Fq8Y+4ZYT48lPjm2R4qqj3y4aHExtHjp54a
ng8PJc7uJgqo0c+HhzIffztoywbjfHgos6mpVOvT5nx4KPPE5JDnXQ7kw0OZ
47UGqG0+kw8PZVae+VnZxzUfHsqcInfldLZvPjyUWSvaw7Tjp3x4KHPi0pj9
k2Pz4aHMh9+k31+emw8PZc7zfv1te3U+PJS5dZVNqJWwAB7KPOvN0T2W3Qvg
ocz99s97ZqZTAA9lnuT9Z+2iaQXwUOb8BZtXjVxUAA9lVlsSYy/YWAAPZb4f
6/I60qoAHsosmbA25qxDATyUec+Xb6/0bhTAQ5lX+VfpiX0K4KHM7qG5c4+/
L4CHMhfOivPXjCyAhzI/6jDR3DmtAB7K3MP48wSRtAAeytx76AA529YCeKjw
d8mkJ781C+GhwnuLKtR0BxTCQ4W9xNaKB8cWwkOFfcL6Hng1sxAeKpxffHlK
jkkhPFS48ojuGPlthfBQ4ew7LlO6HyyEhwpn3Twyuv/ZQniosLpneFVP10J4
qHDX5e6blJ8UwqPt+yc7VxV9KISHCtsl6Lz7EFUIDxX2K+ux6nh6ITxUeJ67
a6+J0kJ4tOW7Ojczs6UQHio8tEn+2GGNIni0ff5sVopivyJ4qHCpwupoB90i
eKhwz1ajCVVcBA8Vbnz6pXyZcRE8VNjZqmP6g41F8FDh/V0/JBZZFsFDhQ3c
D77vfaIIHipsf2eu2fSrRfBQYSMb/zcr7hXBQ5Xvdz7ruO5lETxUua/Hx3dL
Q4vgocr0wG3glLgieKiynsHph5o5RfBQ5aNTugxMKi+Chyr/8r2354JsMTxU
Wetu+I6xHYrh0bb+wKT8W79ieKiyX+rOrAW6xfBQZc0Oul1CqRgeqvzpsPKu
wYuK4aHK2qkLQ2zWF8NDlWfMu1nub1EMD1WWbfqQUnikGB6qnNcrZbnwfDE8
VPlHL6VZnW8Xw0OVj+wIO6nxuBgeqjy41+3SOv9ieKhy4N2N62K+FsNDlZ0s
Rrxy/lUMD1W2Wbsqck5eMTxUuWWR7smiymJ4qHJjh6vvbAQl8FDlzt8uGFZq
lsBDlXuY2ais7VsCDzVWGl2U6zeiBB5qvD0o9HnV1BJ4qPGdFzHzB80rgYca
n1v9zJlXlsBDjefPnbBz7tYSeKhx15dOj/WtS+ChxnWJWmP6nSiBhxqf/nQu
S3KpBB5qfHXFles+d0rgocZbDeOHL3hSAg81tj5qeCbDvwQeaqwbp316zZcS
eKjxmyECxc/xJfBQ4yddHxV0zS6Bhxrvk6tXWSEtgYcaxxk3LbJvLIFH23qK
ys0bSqXwUGOzTxHBN7qUwkONF54f/cx+QCk81NjmvR2vGFUKDzUefLHzqq56
pfBQ42HR91JC5pTCo62Pwdpey01K4aHGO4dKXRM3lsJDjRWn3vHU310KD3VO
bhxw68rhUnios8Wd51t+nC6Fhzp7XPtaVHW1FB7qrLtnhqqCRyk81DlwivHT
lsel8FDn2rH7X2e/LYWHOo+Uc1R4FloKD3VOSX5+avOPUnioc4DJ3h6C1FJ4
qHPMdc9HZ/NK4aHOpq6W3RvKSuGhzsI0i8VLm0rhoc77PA6NdxZK4KHOO5ZF
P//UUQIPdVbLqn0Q11sCD3VWqM0R/BgigYc6521IeOI3VgIPdR6xa7eTnb4E
Huo8vem54+i5Enio89pXmeejl0rgoc7bv7mcNF4vgYc6G0xNNgkyl8CjbV1c
KdHcJ4FHW79DvCcY2Ungoc5hpg099jhK4CHiGwPHnj50RQIPEZvZ523eeVsC
DxHvTBZ6zvSWwEPE5X7l2grPJfBoe//s2jxffwk8RLylx4xvU0Ml8BDx/VH+
gX6REniI+ETGPy9EiRJ4iHjUZdPLSzIk8BCx/LNr8+0KJPAQsZKiSczFMgk8
RHxAvEzdsV4CDxFr2s0uNxNI4SHi6tH6O3VUpfAQ8T8Gz3YkdZLCQ8QXDCwz
t/eSwkPEYVaf3ucMksJDxAmZAUUGI6TwELH9gOMbHMdL4SFi4Y/zqq+mSeEh
4jlbwjI+G0rhIeJOD3ZGBC6QwkPEG8f2D3Y1kcJDxN7Go/zWr5PCQ8SigMyL
SmZSeGjw8eTMebd2SeGhwWlvpiepW0vhocFb+thrb7eVwkODP6Qv0Xl8QgoP
DV6oWZgUc1YKDw2uijzaJ/2yFB4aLNQOKP9xUwoPDY7WvT/zgbsUHhq8Rv6R
ymZvKTw0WLvbyokKvlJ4aPAD8wtB519K4aHBNWfmXq73l8JDgzdtq7g3/9Nf
Dw127L6s6ET4Xw8NntrqscIj8q+HBvfuXprtGfvXQ4NviTxsHZP+emjw6hWm
3Zam//XQYLOe03zlcv96aHD9h4c6LoV/PTQ4dbXFuU7Svx4avDHs+yeryr8e
Gpx81DPwbd1fDw3+6DP2QGbzXw8NfrRaJ7tU8AcemqyT4VyRIfxD/wNVK4Pg

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
l40iDx5GZPPHhjQokMcIHK0qy1pcJw//B+D4X1w=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
PBQx/UW+c7brU/IYggtOQ/z9pifwf47Tjks=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 4.}, {0, 1.}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.7594719030765953`*^9, 3.759471950000465*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 4.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.759471903082008*^9, 3.759471950022007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Set the phase being \[Pi] and we should drive the ion back original point.\
\>", "Subsection",
 CellChangeTimes->{{3.7594724259282837`*^9, 3.759472472891274*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", "t"}], ")"}]}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "/.", "FirstRotation"}], ")"}]}], ",", 
    "0", ",", "True"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7594719235946074`*^9, 3.75947194951617*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw123c81f8XB3DXda892nupaFCKlso5SVIqVIqI6NumIgrtIZWs0kL2KJnZ
K3umkiJKZWXHta7Nzy/H/aeH3Pt5v8/rebrndu/7LjA+t/cYLw8PzwImD8//
/xy/1XClb3acK4DLk8O2V9lYgI22/mbtDeM/3wEn/RHfLt4CiJ9r26wV7wj9
V5vaigrz6feuoJJZsL3paT64vfh3gwTW3w9olE/394RKzoj/1+X50KL1/7/x
gR3PZNoCuHn0eH/QGBz6EJ2eB0Lf/M5vFgqCix83GzMc8uh6ryEkTK3QXicP
luo7ZXQvCYES1ZLl+xfl0fXDQFz+q9chTi74jz76m18EFKtHq3ol59J6kfB8
7zIlyfu5IP/vFgUyl9b51Wjn0vrRwP2o8ahGMhcyu5eMrhADB2bMlZbk5NB+
4kDW1OOKV0oO7B1bEMrXSIXq2efQ/hJghKNSfEA3B6ps/n/BRLAu+sTnIp1D
+02G9sV9+kLcbDD7//bOp4CP/4KOjKxs2v87mDLnx/fEx9kwppEGUuEs2Q7j
bKonDVYdiB86uTob1P4tkA6FsWuN5vFmU33pwNnXc3pKcRb8f7XRJWHDxnBZ
dd8sqjcTVrdsSkozz4J/5XzLBAGL4EUXt2ZR/VlwmyFrc2ZyFsz7/3bmZsN3
uVnvvf9kUh6j+zRoXzw1LhOO/7uN5uB48Pn7e5mUTy7MSJ65Mv1QJvz/apPD
csFFYwKXK5NJeeXBCnmFXpORDOD+/3LdefDe+hUsLM6g/PKBIRVRMiMgA/7F
s7kAbvfdytC0yqA8C+DT3MuieeoZ8G97tu9BY838lOvzMijfQrALmfrtUmc6
fCj8dwPds+WGEbnplPcHmFHNo7fUIx3+lTv5I6Qs035ffT6d8v8Ijcrv31Zs
S4d/l9P/BF+rNSdOm5VOHkUw/N630YWTRvUUQcynoHW7c9LIpwhuWFn1q3mk
UX1F0Ch7aKWteRp5fYYLXPNixo40qvcz+LKzfr2bl0Z+nyFoL+Ol1d9Uqr8Y
8nD+2i73VPIshsYkfhvOzlTKoxjuHrQ+aNr/jny/gO/puUmng99RPl9gtZGE
c8Ohd+T9BZrfl6TWCb+jvL5CYwOsPpaSQv5f4eSWxMKj51Iov69gmP3ZvHpB
CvVDCfA/tGdXfU2mPEugOMLwpOG9ZOqPEphVybp0eFMy5VsK1V4csR+cJOqX
UrA7Uy9UFpBEeZfCXmk5lf16SdQ/32Co9P4jjQlJlP83ePP67/v83ETqp2/Q
2qyVlXEtkTzKwO6g1B7FtYnkUQb+OwwV5VoTyKMMPjPP6/gHJpBHGYgfm3Lx
qWECeZTDwpp9huwZCeRRDmeYab86i+PJoxwaFK+kGDjEk8d3cOiWz1RViyeP
7xAxRTz2DTOePL7DtuuBhxxS48jjB5QzNSyaL8eRxw9YaTOQlb0+jjx+wDJ1
edHZ3FjyqICr2mIirVGx5FEBWQ9WX99oHkseFXAwX3kh36pY8vgJmWdSo7Zz
YsjjJ4h8yG9iRcSQx09Q7Jh7U+l8DHn8ArPjk1a0y8WQxy8wnvY7aE5HNHn8
As8MWf/MqGjy+A1mvyy/VVtGk8dvYJuXdNmsjyaP3/DORzTMfiCKPCrh4mz7
qMmpUVRPJcjuV4mZcjuKfCqhpDrU2HF7FNVXCd/juaeuiUSRVyW4Hhm89Ofz
W6q3EgzPbF+f+ewt+VXCzFv7tKcZvKX6q0Bnda511aK35FkFtUFXNBa0RFIe
VTB5uuD10qhI8q2CoZa4cJ4rkZRPFcwKeWDnpRJJ3lVgtX9ayFvRSMqrGtq3
bszc8C2C/KvB+WCGmYJPBOVXDec4inq+ZyKoH6ph71D7gttrIyjPaog+MPFE
KSOC+qMadj5f+3ydezjlWwMrqz/XBsiHU7/UQLWzThe3MIzyrgGT2xl8y06E
Uf/UAGx9pqXEG0b518B02+bJ8p6h1E81YHB9ywP+jaHkUQtB35KaE8tCyKMW
ln1dYbbrUgh51ELYy2maSVNDyKMWJm70T2LHvSGPWriqVVsnq/OGPGphSm4K
S64/mDxqocFh7k6Rl8Hk8QfeTEqsScdg8vgDLAVeHs0/r8njD0jlXymIefCa
PP5Aa4nPuQ651+TxBxRzrGexyl6Rxx+I8+7uabn+ijzqoMaiWub1klfkUQeD
AzW/1xcHkUcd7Dhis8b9ShB51MH0yAX7PkkHkUcdVBtX63/9EkgedTBVPsPi
9Y1A8qiHNyuTE3evCCSPetCXK9yVVhFAHvWwdXuMGs/DAPKoh4NOWCiyKYA8
6iFG7UxnbYs/edTDSfWdZXae/uTRAIsCmI+7NP3JowHOzZ+uuIzPnzwagD9o
da10vB95NEDIrIHAFhM/8mgAP9X9Ty9J+pFHAyiqaGfllvmSRwOcylLZUuHk
Sx6NIJ+wY3b0dl/yaASdN3v+28PjSx6NsIMnSSo4wYc8GuFrsOa5nAs+5NEI
/B8Xqfmu8CGPRni25VXCpiZv8miCGNmH710DvcmjCWR3ON55fdSbPJpg/lBd
o/UCb/JoAlaO87Bgmhd5NMHisgiHx0pe5NEE2U/Cbzm+8ySPZhC6a/2zFzzJ
oxlituxwL8p4SR7NMKT8LHbS9pfk0QyVARLSaYUe5NEMpbGOVV/2eZBHM9Rw
X5btqnAnjxbIC3k+uOS4O3m0gJL9uo3H293IowXE6+Kv815zI48WeHXoy9sB
YTfyaIHqy4mJGu4vyKMF/py4fXlw+QvyaIHcnvzSkZTn5PEXXrk0vTmo9Zw8
/sLHeMEyRt0z8vgL5wsE1w5efkYef8F8xUtPlUnPyOMvCBvrN5S9eUoef2Fy
xtv62G1PyaMVAt9LnquofEIerSA3ZaPG9qtPyKMVeNc4Heie+YQ8WkFncpFW
bYIrebRCk+o34YmHXMmjFQ57FO2+MvCYPNog+ZjK7/mej8mjDXSXitwd2vKY
PNpAY1iDLVH/iDza4G9ukuQBh0fk0QbBfe88Pig8Io82UMm+pGDx04U8OJDl
7/dqu50L1cMBDclnsdtWu5APB7Z4qs00+eVM9XFg/69ux3h7Z/LigF74sk9L
FJ2pXg4UbsxeYvnFifw4sMumR/abghPVz4EXLsazLzx3JE8OKB8oO6Iy7EB5
cKA4P+Ok6nEH8uVApc5Tb4uih5QPB4yFFl8o2PSQvDkwyefhjq1v7Cmvdrhr
p2j/fZY9+beD4OEZ3vaODyi/dlD8NtyuxXxA/dAObgodjUts7lOe7RDwp6xN
uPMe9Uc7eMHp01zTe5RvOwQFe6bWNNlRv7TDrd1FOp9O2VHe7fCicYtPdNNd
6p92sJ4VxnQyvUv5t0O+h2yTboct9dPo+jPk3klY25JHB6zcqd0UxrAljw4I
Vvrya+XDO+TRATmBgqJO0++QRwdYb9talxt4mzw6QLIi6EfJ2tvk0QFz7+gZ
ROfdIo8OYE/+WWOgf4s8OsA2WKu+qP0meXRAi0BgLev+TfLogMmyy3X6Ftwk
jw7wz3/4LjD5Bnl0gIRd3BNB3Rvk0QE+KlNyFFuvk0cn7L4reiRJ9jp5dILR
541iD89fI49O8P2yud4v9ip5dI72ozGzf+QKeXTCOiv9W7a7rpBHJzyv5Lpu
9rhMHp1Q1rrBbEabDXl0wpXJHA2JbTbk0Qmn5ziazPC0Jo9OWNsZyJLptyKP
TjCNsjoBulbk0Qnr5VxadiZdIo8uuDmY0rlt/iXy6IKjlVa/pe9dJI8uEPhS
OqWhw5I8ukDWsZD32hFL8ugCPV+5RVVFFuTRBcE+IQxBFQvy6IL7vZ7SfxMu
kEcX7P4+JGW7+gJ5dMHZlL1P8kLNyaMLxLvuTQxfbk4eXXBRqEhDLsSMPLog
VuQCS2WlGXl0Qe1R3faq6PPk0Q1x5W2ljM3nyaMbFkVqj6x1Okce3WD9W99u
9+uz5NENLsu4EuvyTMmjGyK4ry1qmk3IoxuSP4o+V55sQh7dINvnbaqy5Qx5
dIP7xoTeMvPT5NENr/sG9TmvTpFHN1iOpH22qTlJHt1QfdTk5UnJk+TRDV8K
1acEHztBHly4oXvv5crQ4+TBhdhlKpGNvcfIgwsX11XV56kdIw8uXN2o05Ti
8R95cOFUjLN5QtdR8uCCYf4q9RDNo+TBhXtn/9O0izAmDy5wdQStN042Jg8u
yFkUFydcNiIPLqiyZK911h0hDy78ld0WVq59hDy4UDs9VSvJ2ZA8uLAoYZ1L
1RUD8uiB4bl5fILnD5NHDyg/1EidfFqfPHpghuv0ofrTeuTRA6en3ll43PwQ
efTAJpGmNPMbuuTRA8c233nc7qpDHj1govvfvZzwg+TRA9nVavElRQfIowcG
sltOMnu1yaMH1gu9EVFYrE0ePZDZKr11l85+8ugB8bQPP+Vc9pFHL8j6MH/k
fNpLHr3wvV39VOekveTRC+uf2dW7H9Yij15wiH9TGxCiSR69ULNu6YIeHk3y
6IWVtZ2zm6P3kEcvbG/97iFmvps8euGi4RPTxRt2kUcvPLTr9xkUVCePXnD0
KIsyqt1BHr2weufSu5J5auTRC17vZQxFY7aTRy/MDYvkcIJVyaMPNOdFHvJ4
vY08+kCIE7Psd4QKefTBZ7aA/v20reTRB9P3dRw4U6ZMHqP3v5jcpt27hTz6
IDXs5dmZ87eQRx8csMt1eqCB5NEHYhpNrHYRII8+KPyZ9830/mby6INeq/iM
VZM3kUcfbPgZVlUTokgefdA433arzL4N5NEPc/06G6PY68mjH7xPT8hflLuW
PPqhu0ymYKnrGvLoh2edhp/OmiqQRz8MFqnEe++VJ49+iD21xth062ry6IfI
9w+DbsMq8uiHz2uHDB+rypFHP8w6n/fFLWIFefTDz4xO/dwGGfLoh4LsiZsn
rllOHv3Ar738aI3rUvLoh1TlLwX+/EvIYwCkP6y5nfFQijwGwCMtpjh44WLy
GIDjFveWfny/kDwGoMnqyVSvO5LkMQB7HhmoPtq9gDwGwPrSr1tzpeaTxwBs
yj3y3HrWXPIYgIVamzhF/LPJYwC0ZBbMVZKYSR4DkFf1wT5Nfjp5DEBA5q9+
PbOp5DEATnNN7afnTSaPQegur5zFXDeJPAZh6KioimzKBPIYhCBmh3iorgR5
DIL9k7reDdPEyGMQ1A/bt67zFyaPQVjCI9/jpiNIHoOgNKd/KGo1P3kMgvHj
+8o/5VjkMQhOoeskbLSY5DH6882JKdxHDPIYhOVKXbou9SNKYx6DYKoXGvWz
dlBpzGMQju+9eql2Zr/SmMcQZEWZTSu426M05jEEDutMDLIXdyuNeQyB//xF
ZvO6O5TGPIZgoothl3wHR2nMYwheFykN1yq0Ko15DIH4BMVtyaVNSmMeQ9Da
PZ05I7teacxjCDrLyl+oD9QqjXkMwdmaWMd8i2qlMY8h2Ki+33iFbKXSmMcQ
pNYo37+MFUpjHkPguH9aXsbjMqUxj2Gwm3k4WXNXidKYxzB4PD9+x9G4WGnM
YxiU9z22O+L5SWnMYxg6PfxLzk19rzTmMQxTLtv8aZ6XqzTmMQwzDXRfioRl
Ko15DMPpnLnu3tFpSmMewzCSWuQwUzNZacxjGNSUlqh69ccpjXkMg7oKexPv
/milMY/R63ENq1+pRZLHMBzOqs7b8zCUPIbhlQPX4ebF1+QxAvVJiWs+rgwk
jxEoiXfVu+LmRx4jkDh3IHKzuw95jIBhyS3ThTO8yWMEqq2PPNs08JI8RsBy
9vKVQyc9yGMEVmRHX2k86E4eI/BCsN1r2Ws38hi9v+Rv7TBlN/IYgb93PrdJ
iruRxwjMdtUN6hl6QR4jsM/5bpQ+0408eHDA5YOUynQ3qocHpc3vqR1VdCMf
HmyKa+5fbeJG9fHg6uE3LX+j3ciLB0/f4vnkNN+d6uXBMoVky5JUd/LjwZ38
rx9sfOVB9fPgxiTVj6yul+TJg2rnKxmQ4UV58GCRWO2Iziwf8uVBvy7V213J
vpQPD5o9nJ3wtMKfvHkwSmtCmcrjIMqLB2dcWmh/bjCY/HlwSom1eOOacMpv
tJ5vyj2clW+pH3jwtqKvjsWeGMqTB6fPzIntEkig/uBBk5XNEnMupFC+PPh9
ixFvg2Y69QsPJjx/ZuiknUV586BOa/nMRV9yqX94sKtR5G5FyXvKnwf5O94o
bF1TRP3Eg0fyfWZv/1RMHgxsEy9bPZRaQh4MnBi7IiFKrJw8GCidymlkZlaQ
BwNT7r/rOWleSR4M1PZVuSL9rpo8GHhrQ7rasNof8mCg5Q/Zgn3TGsiDgWcW
m3hFyTaTBwOXuZY+/ujcSh4M5Dsy9XCKZDt5MFAuTarj0JJO8mCgd62wf7Fe
N3kwcNd17Zv5qT3kwUC8IzDEPdBPHgwUU1zeumjREHkw8E3T6s5pU3jo+ZKB
0YxSQ75YBj3/M9A4vuWp7sXx508GVu25a+t7kEXzgIEzVUOXXdDjp+dTBhZ8
13hx8rYgzQcGmpUFmS39LEzzjoHB5fZbjquK0bxgoG/CeQ0Tcwmafwz8LiJj
u+DbBJofvHhtStel9Xsn0TzkxfVbzfTcayfTPOFFt3AJxQ1OU2k+8uKZhLpC
1r7pNF948aqin0yf3Eyal7xY4uf5SXzZbJo3vPi1bIr9TphL85MX4+7e1v62
fj7NH15cUWM+a6HRApqnvFi3zOq9+AtJmke8OKB8PFGqaiHNV14U8pMz6Nyw
mOYTL4ZF7tZg+kvRvOXF7OefDtXNW0LzihdTdnnZrghbSvOXFxX+u9xwTmM5
efDiQ7W4EOSTJQ9e3J+8UXTDh/HXF7y4JPdMiLW2HHnw4k6ZyiGWxiry4MVn
xvVxzvtWkwcvTtp5b+rpo/LkwYuTdaZq11xTII/RvFt4w/cEriEPXoyybzMY
KV9LHkx8odXktmPmevJgYpePg9OtExvIg4lzcxQMeDIUyYOJnIrAOTOXbSIP
JobyFn6X9t5MHkyM2CfsfGsRkAcTVWyvS2ToIXkwUXnV09BMmS3kwcSN6k39
F1jjrzeZuPSp1Q5GnTJ5MFEwzcPA7eNW8mCi39WwM2dTVciDibJu0RKh8dvI
Y/T+Jlb6dxNVyYOJ8vUphcuyt5MHE9c+adrzvkyNPJj4Mq5U8UX3DvJg4rwR
w905s8ZffzNRZwdP6B31XeTBxNPW5xvYtrvJg4lxdst7ruftIQ8mnqrM9Jgg
rEkeTHQpL1g3MU6TPJi4JdX3l95JLfJgouR3r68C8/aSBx96pVc7yP/YSx58
uMMvJJzrsY88+PCR1g5x0//2kwcf5gkFh0eu0iYPPnT+vjj7N98B8uDDSj3z
yIm/DpAHH84L8mYeTzlIHnzITrtp1e2rQx58uPKnXG+Foy558KHPvRvu628e
Ig8+rN/c+WqRjR558GFW/VPnFGt98uDDPS92t8y7cZg8+HC/Ts71kw4G5MGH
I4zjG6J9DMmDD5+KZc1xNjhCHnx4tV++obbtCHmM1nNtokL9nfH/n/Lhp+WO
hQFzjMmDD+/aFTitTDQmDz58L/LE4vGho+TBh5YN+g8qh4+SBx+qrcptXxz0
H3mM7pf9uMJ83zHy4EMLmUKHUuZx8mBhyM7Jekfij5MHC9uUC+PmmZ0gDxYm
nlFcvmjFSfJgoUZ9lvrVtpPkwcLIoompijGnyIOFanJLFE2unyYPFnZC470F
e86QBwvDu2KfnF5gQh4svLG8Rfdgnwl5sPDi0YUVPSWm5MHCvROM5PTjzpIH
CxWcZa1dX54jDxYKpP+4rKNynjxYyFGSYBolnycPFpYdEma1rDUjDxZOv6ad
yIg2Iw8W2nHRKFjenDxYKKsZi60x4+/fsHBNUExkieIF8mCN/vvZO+VUxgXy
YOFClu7niF0W5MHCfbcOasaUW5AHC3mVvjOun7IkDxa6sESNpw5akgcLGxv1
h267XCQPNg787v2vaOkl8mDjtV+lsnzZ4+9nsTFvfx5H+qgVebBR1a5IXYXP
mjzYGFJR89folTV5sHF+9yfn+xo25MHGMLZ6e2afDXmw8dHU2o8zgi6TBxsd
3s9peXxw/P08NrLduyduFL5KHmxc77Vw3vSMq+TBRomX19rlr1wjDzbaaSaa
PNtwnTzYOGfY0lK9/zp5sDFAXNNaxvAGebDR7bv6mdqMG+TBxkgZM4m9S26S
BxvPDB9otHYaf3+TjZ0rBC4d6b1JHmyEn2IbhY7eIg82Dp3VjL/86RZ5sDFj
v4NVwubb5MFGSdMYgbzQ2+TBRlGxt91v5t0hDzZKSR8rPPX4Dnnwowg3YQZb
0JY8+NHf44eJ7Y3x93v5cZZx7KGWPlvy4Mceg1grsLxLHvx4uShR73bHXfLg
R5bOvOfJZnbkwY+9vl3pbR125MGPfzKPnF9w8R558KPKPKPNBwbukQc/TtAU
z3h06z558GNApuXTH8IPyIMfty/31Frz7AF58KPgkfUP/BfZkwc/vg9+XC4b
bU8e/Ogq2FdWsu0hefDjJO3p833KH5IHP96KFdvmes6BPPiRP/5yRRS/I3nw
Y26Hnw2fryN58KNz0tXoB0pO5MGP8aHr5qj/dCIPflys0Cq5GJzJgx+b34cb
5Dg7kwc/TttpfM++xpk8Rh/vJ1J3cd345x8CqJLZnfzgoQt5CODiQnGt/Orx
z0MEcFJgd62C4iPyEEA5266ET48ekYcA9l2YK+HR8og8BFD7sZGUx/bH5CGA
gz/kFYv9HpOHABbdPGWHDFfyEMA7BxXVGg1dyUMAU+t2x3xMdSUPAczh92V1
zn9CHgJ4+bzZWZ3bT8hDABeun7mQUf+EPATwSbiEdpv6U/IQQO6MBvnFb5+S
hwDuwQN//Wc8Iw8BFBKvCjl/6xl5CCBTiunxoOUZeQjgyu3C1V0Hn5OHAPLc
mOYfmfWcPATw9Mh8VubqF+QhgDOOVyxe7vuCPASwWdl1UctEN/IQQMmbJ+YI
2LqRhwB6t/cuvdnrRh6C6MBraaRr6k4egig5y7PsUY07eQgiO/WBz0o9D/IQ
ROWSjYWrvnqQhyAmXZE/7r7nJXkI4vUJK23OFrwkD0GMclslEbrdkzwEMfvB
DVndHE/yEMThN+VfLVS9yEMQJxSs5efN8yIPQeyN0zK6udibPEb3Wy5xM/mE
N3kI4tzSHwZRwd7kIYh7ZNZ0H28d/zxWEL11vm4uWz3++a8gXvlqukrAyoc8
BDEtQzS3J8WHPARxceDMriA+X/IQRH8/vZAZu3zJY3S9jxuqd7v6kocg3tBu
sNv205c8Rq8Xv9yRIe1HHqPrDQzV3DLzIw9B9DnherEg2Y88BDEj/viqcoHx
z8+FMLRw20i4tj95CKF+5pcCDT9/8hBCjm3NlYR2f/IQwtdMw8G/GEAeQjhy
dc+KVucA8hBCwZ6J3MSqAPIQwo4k03Xa8oHkIYThRvtLUmwDyUMIr+yLjugu
CyQPIbzdYflqSGb8/IEQLpS986L0ZhB5CCG3PNvw5rcg8hBCGyvRsmHZV+Qh
hFGbnX9q2L4iDyEUDjbYYfnzFXkI4eDH0x3n1r4mDyH8pe4fis6vyUMIJ2vJ
azY0vSYPIVwV+zL8hGoweQjh/lo1r1TfYPIQwuJ9hzmckWDyEMLPFh/NBg+/
IQ8hlHtXw6lOfkMeQsh2kt8UMDuEPIRw+3HrBSpXQ8hDGGcMzjBJ+xVCHsJ4
xEP6z8wtoeQhjGqlJvv2+4eShzDOChy8YioQRh7CaPxKbukJ0zDyEEbTjVZz
lL+EkYcwhlwonT2yIZw8hLF3amO9p084eQijVsrDuRNYEeQhjJWrA/5mbRg/
nyOMbm9jsflsBHkI42oO8+Id/wjyEMaCA85Nzt8jyEMYXxst6peYEEkewrjJ
K2CET238/JAw2nZbHjC9HkkewrjlF+jujIskD2Fcd+aokUdbJHkI469NfTlH
l7wlD2FUeFRe6W00fr5JGG1eGLD2u78lD2Fs6et7cLXkLXkI43S5tpw5ElHk
Mbpf7grRNepR5CGMU9frRWTeHT9/JYJBB6sYBRlR5CGCs/Lb9qqNRJGHCC7Z
MalLaVM0eYjgvZJrCmHW0eQhgg1sYeOncdHkIYKHKhXze7qjyUMEm9yvxhQr
xJCHCIZbfDKTtoghDxFMduzdzo2KIQ8R1P6idwO6xs+bje7Po9+IuSaWPERw
m9GV1coXx8+7ieC7i/fWDsbFkocInhh8F7mqP5Y8RFBZbG9d9aY48hBBwV72
FIkbceQhgoMhilcTMuPIQwQLORz93/zx5CGCuu4dnJu74slDBH0D71j4uMST
hwimO5otUPoWTx6j148Sl9OZk0AeIugSpPqt7WgCeYjgQPOTXaw34+cLR6/X
m575vCOBPEQRyqrPBismkocoMrRcrineTiQPUexc1LxgR2EieYjipTMv7pZO
SSIPUTxm5VpWbZhEHqK4SSpqy9ngJPIQxaVLZJqsupPIQxTFEsJ7ebckk4co
ZnuZPBJxSCYPUfzDFvnxpDyZPESxJZfZ5SmVQh6jj7cKGJS2GD8PKoq1+0In
rspIIQ9RXHV1595EiXfkIYpxOYtKMw3fkYcoZhUujtsd/o48RNG9201YZ+Qd
eYii0MyW+mqNVPIY/b1xo0Grdyp5iOIX/qKbNh2p5CGKExjSEVsl08hDFF31
O24/UE8jD1F0upWZPsFy/PysKD7w2nC23HP8/K0oymxe7FCVl0YeYjiH137B
ss408hBDl61uslFzxs8Di+GRqZveXlFLJw8xLDXcFn73Qjp5iCEzKm7hZ890
8hDD/d8zRfUL0slDDM+2Fp6W5qaThxgaMbeuk5fMIA8x7F28/+z1PRnkIYaK
ITuERC5nkIcYTpF8zlcelEEeYqjRVKVd9zWDPEbXW97bLc+bSR5i2N7p/iN9
ZSZ5iOHvCrtBp8OZ5CGGt8x9dnvaZ5KHGLb59Wa0JIyfzxbDpykFGpcbMslD
DGN1bep2TMsiDzFUzj1hpaOaRR6j9atLcQMtx8+Pi+GrGxc01gRkkYcYJvmv
u8AsySIPMTT9dU9jAiubPMTQusP9s8Ga8fPt4ljlVfun+Vg2eYijSNFMq/in
2eQhjqduzLuQlZtNHuJ4IG4kTbwvmzzE8fJS7k63ZTnkIY5SRpf6jurnkIc4
Jmy2ijZxzCEPcRzQkToanTZ+fn/09xHfmxU7c8hDHB+1zVbgkcolD3GsOB84
n083lzzEsXh3zBPVh+PfFxDHfr5Jl3JTc8lDHKOuxQfd7cwlD3Es8P4geEd6
/PsL4virKuRaql4eeYjj9X6h+vXOeeQhjld3HVvIyRr/PoM4fnrqOOlPXx55
iKNN5YOn01bmk4c45vA+fmD3Xz55iKP11Q0fFNzyyUMctaa1bpxXNP59C3F0
RNsoVXYBeYiPvn4TkHizqYA8JPBFYaLMrgsF8D9Wujdv
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
ybFTb55jPIbg1A7PrfNNxfB/RAx1lg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
xmMEit0rdvfKLoH/AcQwiGc=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
P2E=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4.}, {0, 0.9998910803859097}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 4.}, {0, 0.9998910803859097}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.7594719435845137`*^9, 3.759471955813258*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"2", "t"}], ")"}]}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "/.", "FirstRotation"}], ")"}]}], ",", 
    "0", ",", "True"}], "]"}], ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scan the phase", "Subsection",
 CellChangeTimes->{{3.75947241441525*^9, 3.759472416842716*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PhaseScan", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", "[", "2", "]"}], "/.", "FirstRotation"}], ")"}]}], 
        ",", "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{"Population", "[", 
         RowBox[{
          RowBox[{"DensityMatrix", "[", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "2", "]"}], "/.", 
             RowBox[{"expoteSolution", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "i", ",", 
          "MaxPhononNumber"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{"#", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}],
          ")"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
          "\"\<00\>\""}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], "]"}], "&"}], "@", 
   "PhaseScan"}]}]], "Input",
 CellChangeTimes->{{3.7594720002669477`*^9, 3.759472024351469*^9}, 
   3.759472070663534*^9, {3.759472265139892*^9, 3.759472317993206*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw1U1tIU3EcHgUzfFIa2QVXPmizoFbSQ5ftKzVdJMpmLiFfbEwSwsuDhE5z
SSplJYgrlRB1WrPMVKYZYjVb2HCmNtd0eZtOp+5is6ZoD3XOzt8fHA7n9t1+
3wm7mS2R72KxWFHUQZ93xtoV8nsmYA0KTnu8raAa68E32lINHnLdjNYQWWZM
kAe93FKnuLcdgslHh6wLLvJcC1HxrKkvyYm6Wnrew3Tua2iibIW8/wHmstYO
N98Bl5i+o8NV3eDPLaOdfK+HwN0jMCTMI9CizhEEDqK+OFNwsmKW4BnQJFeE
bT+1IjKtcsDHMyIriPXg75yZ4H9D85HEHmX5GJqpry3qUWhGw32WmCHCN4Zr
XCm8xXpE+ccEsZ3X6G7pJ/zjuFS4XldC+fjs41EMZvxLeJ2+58sroseClKno
O5vSBkj8hBPQm4zH8y5XEX2TsKg6dc8jS2AroAGtiFKt3p8szyJ6p5AoUH3s
HkhGLi0vZxrsMyfu9e3mE/0zEOk3Tgfke4XMNubwvcYYEbu/Tsj4mUMcq0a1
WeQVihgCvL2gqd7H5hN/NgzWyoQt+mTQbGmV8+D/0EbsfZhF/C5A2WH9pDlW
AsbOAvJfGpWSuCri3w72UTe7/noDDtNyuIvob3uz7aX8M3ksIjrVcjtUoUWG
f5ZQWBSc3fmin+TjwN0KZ/gtpR40GqfdAXPXlkgWO0TyWsZF3sHuEWo/GzSc
bxlNQ2flEpuZ5LcC8RJnQvrMCn88glXoxi1JldT+GburGMnhlm1R/fDLK3Xi
irTMzBu2k3xdeHK+SXfglAPDRnpceJcRps2j+sfk7YZyTK6Ypvrpt8vxINPg
efyH6i+TvweN0bnqFKrffri0NWjU8ZvpVP+ZffzCzv/xH5WTmj0=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJw1k31IE2Ecx6cTSsuROCMlpknGDJPUwiD12z+mUPkGhn/oP5qhjZpSs1Aq
k0QK2ywy0gIHSppdEuZovmywTa3hNiuz2VKb2tycc9PRRkFpu/PZD47jubvn
+/J5uAOlwoLyQBaLleK76Lt/FLlBpw8vh6GO25e1UPsYUSUXUidUQrLuQo8p
YXPPjBhyXuNqvrwP9ZMrHXKTlLwfQODw1o1cI4X2NnoGkTrAn5OIZOR7JTb2
edjOSAUc+fQTFW5di291X1GT/aPYNa3aOhs7jhBjZ1V6yHsoXY6mRoGW6Glh
YU8IxiJ0iC+WqD18HXo5QmWSV0/0DbCeP9H/3GlAl2+3sfMjWgsaAgQuA/H7
hBqT2SP+rUcKM1OQXdZk3YvUEf8vGDae+yCs0kLj4fscppFkSasP5vvzGHG7
POYVT6RGAWM4g+OJ849yDylIvm+4mTl4KvaODAu1tKAJHVs97JOrFMk7i7j+
pxTLLkU1Ha9qDssNeVejNv085xGTaLLFbgixfRpmrGvNhbNuNuljRuWZiToB
R4jsbQNUPOE0u8Ri0m8Be4fiBrtVUtBuxZJF9NpGkr+/o0jfJXCqk5uXSmXY
rrOEPH2mtT1IQfr/xPU381RMmRrRdByeBarsopqGiHHCw4KXoS0B3hItLjKz
DGrxWXf3Dh3hY0WiJnhEadWDVuP2WZHGCxvjmA2Elw3hTQlrf31rLy3nsaHy
4ZF/tXY94beCr+67GTt368DgSbfjV/3oMXmZlvC040XbwaGc/eNg4jWuYn1S
FNpySU34OjAa/db6I1wBvY4eB/6sVbT2VssI7zUUPRDdl3+mwNTlOlGYURia
MyMl/J2g3CXs11NiMHLFLnh7Mo9Khv3nsQ7///Efwp6V+w==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJw1UwtIU1EYnj0otaJkDgpTzCwNLUjCdMmHkXMiSkpG5rQXCpKyhQVpFhYt
04oNLMU3Q7EynFg6NcdQ52PapjcspjLFqcupS5u6jUw07zx+cDmce8//vQ7X
8zY/NnkHg8EI2HzodRsHTJbmInMFHjGl4fqst+CYL5lV1yVkXw1/1rXcD9M1
aHEXzse0SLEW9prPbqsn3xtReGwjKbWmCSXFNFrRFlopDU6Xk/MKrBxam12b
6IAphn7TgbgRxwrhu24y34WIIwHcp6w+OGmrBCFOvXAWIz/YV034+nC54O57
WfEAfHmiTouPGnJe3oqDB0X4B7BhVJRnZFOo3pzWVlG4MRqrH0+kiN537Pr3
0pqRO4gAO4ZQe1QhfpamIfo/kHrLMcqc1w+lxWdT4ScivxUH8p17iR8tMu+I
NypOKBFrFxzG50/+p4VnFMTfCGx7e5xtbBn0WTThKPxMqzGCsTriV4d9uiCl
530J7tH2BGPo2Wm1Ja2KiP9xDHP9I87lC7B1GxNoePMxYinTheSZQOurtoNl
ZwXgbgnAQbX/RWe1iOTTQ2XlLofESUCr8USTcGSUWQWyOpJ3CppFcWiYtwxb
cabQzFmvLGUpSP5pTBlsxoLDSnjQdtwNyHqiy7iy3kP6MKDJLZ0T/rgfKXb8
AjMttVF+U0P6mUFD+9XRpexB0GxM6Qyai7QXk+Mp0pcROV2+7OGHFKw0ncWI
L/EPvKLdKNLfLEq9u+FaOAB7PSFzOO6t+nvhpJr0OYd2ti5y0bUPdnvCeTg9
D3RgFXaTfk0o8QpKT5jsgEZNw4SvLkNxkwI56fs3ovZ4+kTXNsEel7mAqPMp
uzmd9aT/BbTzT/ktz9bATsdbhCFhNac8UULu4w+2/4//N0OTYg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.01388888888888889], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw1U3tIU1Ec3kwFRxqiZU2czmVMC7Q0MNE+wlBhUbq/NBboZIpg+Z40YRph
2otRPsDGkJr9YdIikmGvsdQmhhNfbTp7zM3pmps3CyOFMO/d8YPL4dx7ft/r
cPnSKrEsgMVipe4+9LoHjeG2vqhx9GxTpC53SdEJjPZ3dKkE8O/7EM2ffCPM
zcMQr3WtYEgHWeXHJq1JSr4PQijJLwxkN+JRD43XKFO/TD56qJ2cN8Byknv3
WW03vAX0mw8IH9TLb/C0ZH4U49feB6bm68CxaquzOGPwstkrw/16wjeOm5qZ
flW8EYkS1fCmcAKcKGXObIiJ8E/C1vX8qSLEjL7daat2CjsRRdrm9hmiNw1u
cJwniGVFKoNZpLMbBpSzi0R/DikOUXlUrR0jm8Jdhc+I6KVE08FO4seKf73f
Yx53uCBmBOeRwGsxHNnnJv4WYLtUUaqHB0sKmtAGnSWuxpfmJX6/oHm/QJk5
5UMNba/6K2KNjicxARTx/w1imbzFaqDgvw07ts9kdEbvUCSPHVcf1hVXGCnk
+QWg3FquTwmiSL4lHHP2iF/M+UCrSVQOaN5lJz3I8JK8TggSz2fn53jgj+PE
ucPh6jKOm+RfxlZb9Hah2oVY2g7PBdnvsYSBMCfpw4WSTzKW+bodZQxWgK10
Od+xSPpZxcW/C/y6UCtotkjdKow78fqSzhnSlxsNvaJTr2LM+EPTbbpBCeo3
srkm0t8PrHDvTaclG8HUk+WBvritdP6tnvTpQanm4K2qch0Ye61ruC9yVdqS
tKRfL3p+xY9UKrphnqDhheCCSXM8rJ307cOV4suNaoscTNzIdayfaHalSKWk
/3WcrlBsWzZywNBJKGSGHmiLuhNH7uMn9v6P/zdmhvE=
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 0.9998910803859069}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 0.9998910803859069}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.759472280002491*^9, 3.759472325563826*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MS gate simulation", "Chapter",
 CellChangeTimes->{{3.756508266365471*^9, 3.756508268481661*^9}}],

Cell[CellGroupData[{

Cell["Wrong setting", "Section",
 CellChangeTimes->{{3.756510674328961*^9, 3.756510689594831*^9}}],

Cell[CellGroupData[{

Cell["Sideband position is not correct", "Subsection",
 CellChangeTimes->{{3.7565372177232323`*^9, 3.756537226517707*^9}}],

Cell["\<\
If 11 cannot reach 1, means the detuning between RSB and BSB is not equal, \
which means we need to add a compensating term on one of the sideband \
frequency to make the 11 reach 1.\
\>", "Text",
 CellChangeTimes->{{3.756537084947967*^9, 3.756537138189632*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "34"}], "+", 
      RowBox[{"1", "/", "150"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "34"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.756508364491399*^9, 3.756508382343927*^9}, {
  3.7565095883820267`*^9, 3.756509599547564*^9}, {3.7565102956103563`*^9, 
  3.756510329580469*^9}, {3.756510484483986*^9, 3.756510486065921*^9}, {
  3.756510633377884*^9, 3.756510648341579*^9}, {3.756510927249045*^9, 
  3.756510929565124*^9}, {3.756513332030282*^9, 3.7565133618843517`*^9}, {
  3.756513395405932*^9, 3.756513400572497*^9}, {3.75653694489384*^9, 
  3.756537061432186*^9}, {3.756542039248888*^9, 3.756542040483384*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
3zxMHna9/EEpWcGD8Gj8MdWdZCUPU1vTY47PJbfwUDzga7rCnszxQlKA/ZYN
I8hqXmj86DGksY2tR16Ql/a72vURmeuF3Y9C+S1s/YIXto95bHJlC5nnhfpe
Glu3zyHzvXAg8eyDGGdyjBdy14YOjTUky7zQoyBV+0xvckrn7yctKtj4jNbX
bC/cqKlqmZNLLvLC+P17NE3nk+VeeDa3fWOP6WSFF5ZeajrP6UtWemHih2G7
ZippPW/xwsJ614BHZ9n6740C4yEjanaQ1bzRc4isImAhex94o/iDUUqYD5nr
DdNPcrNmC/Z+8IZmzcCSfvpknjeaYpInl/Qn872hWJBq++IvvX9ivDHqrs6F
uC9kmTeKnr4xj31HTvFGhO+f6op6crY3boSnDZnxklzkjfG3u268wyz3xm3t
pmqfN2SFNy4lq2461sTed95okI4YXfiN3OKNMTK/LuYcdv0+uKSvIR3K/l41
H6RtSNs1eQS7fh94eLrnuXHZ9fsg/1V7taM9u34ftBx3GNcWxK7fBzFPxt6e
yu4fv7M9v3rTs43kGB/cvJhjd/kAWeaDi08r/lSVk1N88MF7cvLjZ+RsH/wt
mad27Qe5yAe9tp75nTSYjb8PFLUm2s0mbPx9UFFRO+WvNxv/zv4eA732LCK3
+GCb1ovfZ3aQOb5oDG2S2p0iq/nCLnDsctNHZF1fZA0K+prYSub6QuvkhOFb
+rDn3xdKYZli+TD2/Pti2qy0trUT2fPvC3Mvt5g8K/b8++K+0dMZNZ7s+ffF
yu4tIjUBe/59cSNtV+asRWw/4Yvz36vMYlaTi3wxxq9rkyyV7S98MajrzLtz
DpEVnX9fF+WUEWfYfsMXE3O0KzZeJ7f4IqFx1ezMarb/8MOeJ6syp78lq/nB
0sLGJ6CVzX8/LHvH8aruSusD1w/T/nENzVZn+xM/VIxZK93L1g+eHy6ImlVO
jmf7FT+YXFfOuTqVHOMH690Wgy5as/2LH7LijIuTncgpfjg08svVdk+2n/FD
xwq/jH7+5CI/vD35/eLhYLb++aFP9w9qRWFs/fPD+OTR/TUj2Prnh4VIrLke
ztY/P3zc6T23OJStf/44/aZXdlUgW//8Md74m0VXH7KuP/rNLm/wcmXX749Z
+fpmBTbs+v2hlRexSd2MXb8/XjrFt8UasOv3hyhznM1ztp+L8cf89ScyZvRk
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
zHeAQ0mcLmKIkx3wSuOq1u9IYrkDFmitWxETxsZ3gNvfPjMbXNn4DohNcyj2
NWXjO8JA/PCAwWA2viNqr3rpbfrA5u+I4qapjaVX2PwdoRf/0/19Fpu/I/Qv
hmwWC9j8HXHqku5x/kRihSOsA3KGa39g6++Ii/eFa6+eYOvvhHO9BjzdLSPm
OKFHaXBZDYcYTuicv9cxsYH2l+8Ej/g3/R6uZ/vvhPdT3875ac723wnWi/bn
/nlK8aJwQtzXsUs/byBWOiGvYVjKi8nEKs6Itsm61nibxZ8zlrRnBtVFEcMZ
Vg/qhlzpQ8x3xvrmZu/jByiek52R/rxnyAoLYrkzeq9c1W/iTcoHhTPUzNbX
HwwiVjrD1P7NLOUryicVF/i+fSi4v4iY44I5W25zE76x/HPB/kHIurOcmO+C
R20B4y59YOcdF4QnzXwR+ZLOK3IXON249vTeA3ZecYFQeLLY6jLpgdIFa48V
1/TJZ+dPVzxZVTPieCqdHziuuJSb2XpaRPoCV1w0nKusm830xxXOarot1wex
84ErjDIvx616Qfold0X/xaqxHWdJ3xSu8PSsfuqygfxf6QrLRWEDTgQy/58L
S/2ZS+cZkV5y5mJ9uvWdF73I7zEXVtNW7hl3I5fGn4s6mzFfP2Yyf5+Lxk8v
PVwjyd/lc6GZtpqzIID0WzEXf0vXH8kMIX1XzsXtB3XZPxPI31XcUPc5SuXJ
Oap/OG7gXdC5IhxCfgE3eCbrJRhOID/huyHzYIjK5aXM37u4qvJcr2GpNL4b
VB+UNA9QX0/ju2HBs+6W8QLye6UbviXHRYdprqXx3bFg1Y5oB2PyN447IvdE
ybRPsfOAOxqnmy7WySbmu6Pn8pT21++Ik90xfddvB/Fx6i93R7u9x8mbD+j3
Fe74W7Tl8b4o8kulO24KxwWULWT1oQcUKoNc7BvJPzkeWNaYr3v36GYa3wNr
llm3+jxOp/E9oPvS49Rwtl7JHig0ztA6doLWU+6BCAubiB23ab0VHph9ffRz
/nCqD5UeKHG+rC1LY/WhJ8LH36tWjqL95XjiVODLGy/ukZ/CE4ur+6+z9KH4
4Htia7LL1eobFD/Jnlh0cNSsXm4Ub3JPOCdOMopupHhUeKJiU6H78iiKV6Un
zMykPzP7UHyrcDHFR6Nm1nGKfw0uHo2d7f2ZS/nC4aLo59UT1j8on0y4aJtc
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
ag==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
y0PqJ2O34s7svM+DyuzHPO4bYh4P6ZzD6tNrSA/4PCw74/viD9OTSB5iWp7P
rF3B/JOH6H9Pvz3zJH1K52G4rOvrnRzStzweGq07H3d/S1zS8ffPP1gacJD0
UdnBnQ19OVLS03oeQkLWR/YdyPyOh8W7dKOLLxC38KDUOlMgkzD998SptJQz
dX+IdT0xKzq8Qrae+ZEnhIOqRzbpnqH5e+LQPOlhZSoxPDHJ6srjGz+IeZ6o
XCsxUoaepfl7YuKRdkf/UuJIT+Sl3Fsm0zhH8+/4e49q42/YEad74mXPq9zl
y4jzPHFVplUu2ktc4gmPZZ0zNp4nVnri352H3/XuENd74qTrRWedh8QqT4TX
FqQcbyRu8UTr20um5jXEal64GfO3+mMxsa4XTI59Gqy/lpjjhZp/lUemBhFz
vXDY9HLn9BHE8MKXxN7WB57Q/HheOCOMr/q6hc3fC55+5Zy/1mz+Xlj8T9xr
1mtaL4UX8lePPClaTZzuhbohj14/HkKc5wWPFWM03Q7TfpR4oWFi6hzrGex8
4YVzvlo67lW0f/VeSJI1jNKwY37vhcTSlTs/nGf77wWXjaEvMyyJ1bwh3387
d2EZxY+uN4atOOLV3YiY442M8uCc2t0Ub1xvPJ909krffsyfvbGu6NIJ1xSK
T543DiU6Tlb+oHjmeyP//qv60jnEkd5oXHCdO/cBi39v/F7SuquHK3G6N9xm
RMvOVlK+5HnD2DA7IIvdP5R4o1CjatTBXFaPe6PNye5kuw5xvTcGzTQpXZHA
/NYb0z+2KSa1Uv62eKPZoPrXbzHzXx/o5d6+dvMu5buuDy4vHV28zYnlvw/a
3j/qPXsR+S+3o72yc+E4f9IL+OB7lTLfzYz8l+eDcWOU68oGsfO6D9LnqZaH
/CK/jfRBQ1X8S+sHpE8KH0T+tihNOEXn/3QfTPctG+mWxfTMBxXvQrw+LiX/
LfHB2qnT19b5kf4pfRBhq7tSOI30sd4HJ7MfzvbuT/6r8sGKgW+m+v0kfW3x
wfyKSVpWKua/vnjUWO74fTPpsa4v/nAsk/SjqF7m+IKn/e/h1CCqh7i+EG2x
kyZ7kr7DFwcvqO/aEEj6z/NFQeGt57cXUX3F98UzX+Nu3/ZR/RXpi5Rk3ycb
PpH/Knwx5/fSmaY+5DfpvujVa8KGzsVUP+f5YvNf3cENn8mvSjr6z2w/umU5
+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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxVmnk4lesX90WDZmmuk5CoEyINZPqizMM2b/Oe99ZIg+gctSuVoROVSpqU
BlOFSiJS0jzQQMNRKEMhSoPU0eu93nv9ruvtn67Pde/1fJ/1rHut57nXoiFY
6SFWVFBQ0FBSUPi//////zot/9//lZb9Z9dE7+vtYFxnWexwbnhgD3GL5Yi2
BR98uog7LX8FbODtek/8xTLXlZM3sZa42zLN8HJTv4fEvywV/+KnhVwhVoBa
/+uPnTKIFRFu+zGmYRdxf8QlTP3LOop4ILpz93zcEUysjElTHKc3WhEPwfZz
m/XCphEPw4ahw8VeSsQj4G/lYnW5/iNjFUS9Db1zs5R4FJL3p4afTCVWxfg3
T3ZEryUeDcOE+xbr3IjHYEWKrPXyDOKx+DyiymJZP+Jx2CyJPH7+RTvj8YiK
fehzIY94Anxq3L4lxRFPxIHHZqlL+MSTcEpzyGqeCfFkGEL9U+Io4j8QEdmw
bsyHNsZT8FXoHzOonFgNcWP9ouWHiKfifPK1J8kRxOrYEerZ4evOWK6OS39l
2r7SpXUNcLy5Yv3BtK6BFkOrX8FNrWxdEydGav+MvMFYromRdgsPbUun9Wmo
vy+LS9pC69PwiHe5+bCI1rUg7/x74wVbWteC77O2+89n0vp05J0K1xwxgtan
o+diVrlP1we2rg2lLq2e8y8Yy7VxQPeChfY1WteBnucc0zOZtK6D92E1SvZ7
aH0G3oW9V/oaTeszkLxl3+L8UFqfiTPfnjhF+9D6TOzbmCD0XETrf6L9u1a4
oRGt/wmJhavNmGm0PguDz9cHdo+m9Vkw5syzejmA1nXBqVprU9D9nq3rwvy8
RUVsG2MFPcjlJ0e71tO6HgriYncr1tC6PsZ2J5w5/oDW9RFScrPtzwpan42l
+RP+219C67MhcfY601RA6waYHtU5fEweYxhgToURd0oO/d4AVf3LNBQyGJcZ
wOi7p2HRCbI3xDDbjVcdjpO9IRTcx1icSSN7QwQrtR96e5TsDbHzbM/gNmKF
OQje/GD2Tfo95iDb3+pLOF1PPgdFxcWnOkivbA40PYquW9L9KBhhRGf+ACHd
L4zgqTHIxJ/8kRthXnrqLO1LZG+ELsX1W27R81CYC83Hdw9Z0PPCXIw+3c1L
+N/znItQsxGjzlST/VxUi1ymHq8j+3lor9f7KG0l+3nYsXFlZs83sp+HjC2P
+3srsXiXzQNvSZ5qmArFfz5upDYMt1FjjPkYlxiuV65L+2U+Jmf+2PLWlOzn
wyTuVVWyE9kvQMLHjk0VAWS/AOmdi6L5y8h+AYyupTh40P4uWwCtsp8NG3aS
vTGWHI/7de8o2Rvj3plBjZPzyN4Y7Y99m1yvk70x2i5OX2jzhOxN8OPu1E3P
3pK9CUr3tt2ro/yUm+DUzip1SyWWv2UmGKG87uCdUZTfC/HW+so37lTGWIgP
KWPKK2ZRvi9EeO/y1pb5ZL8QUQM5vQdB9qYIuaV/+rI92ZsisMRaSc2N7E3x
0M9o6GlPsjfF3dDcD3N9yN4MGe/iuVnEMMPD7sTmNi+yN8OeE2ecGzlkb4Y8
+yVpGx3J3hwrwlbsybYie3Po2PVPDaT7lZujJtFrZPwMsjeHZZej3ewJZG+B
N9EGaU4DyN4CJ+vy1zd00POzQNSuw8Y/a+j5W+Du81Fqx0ro+VtiQTPX9G0a
PX9L7P8y3vzpJrK3hDT2p0U8j+wtITq6bLeaOdkDlVryyDPjGasDe+aNafbu
pP0M+ETP+dPkFmMeoDzQ8+z6Q7S/gWijZTsswxinAadi9YLOWlO+AGu21BZ8
HM24Dthg/2nwzHctTN8K242eT9p2nrG6Fe7q3GzU38wYVlBSeDnVmcOYZ4WJ
v3zVBqoxllth8JngJTGtzUzfCtNNxp9uL2RcZoWVi6OspNsY11lh5vcp7mO9
GCtYo8jr6JJJmozVrYHQE+v2dzYxfWvsr045m32VMc8aJ7MH8NYkMpZbo/L2
XNXhPMZp1jCKuG6TaMi4zBr5NXdPqvZnXGeNEPOUZzk1jUzfBuGDr+SE5zBW
t8FvwYGvqzYzhg26z+ffLPNjzLOB/U/vBaFzGMttEJpWXBQ5jHGaDQrqRr36
0fyO6dvg6tquuK83GNfZwCDld/OqdMYKi1AfOW/Lui2M1Rch5Kbr7EFixliE
1h13Z2vZM+YtQrbFNM1Huozli3BSumDcoNGM0xZhYIBZ3J2et0x/EaY33lil
+o5x3SLMXLnf5d+HjBUWI8L4hYZ6MWP1xQi6kbr/WQZjLEbtyo2DuvYz5i3G
hDEtu5bHMpYvxo7WmxYm6xmnLYZZbM1oh+Wkvxj/aHs4JvJJfzH8jp0O/s+H
9G0x8eiVkBgX0rfFmo/zu8YsJn1bzB09p/SoOenb4q6Rn//YBaRvi6a4sU8l
hqRvi6Rry3Zu1SV9Wzzkf3sonEH6tlA0SU/6okX6dkheX66qq0n6dtjjb3b4
91TSt8OQAOWBEjXSt4NNxZKlvlNI3w7rk7akP/iD9O2w8e3ST+XEZXZ4NEDq
vYB+X2eHo3eLoU3XU7DHtH3LriWRnro9HmtOWxCpQfr2mCAZ4v9mGunbo8zm
1Kc72qRvj5jjL4vM/iR9e7zLNFE31yd9ezQv6hlYNYf07RFx0n17Lz0/BQds
uluUdY+er7oDFHdFaVosIn0HqJU3KAY4kb4DHuk5RWh7kr4DGo++l6cHkL4D
WodZnHsiIn0HuAddbStYQfoOUF09S98pivQdkSHIEeyIIX1HfPbm/bEmifQd
scfZPu3HIdJ3xCH7NbtGZZG+I/hmFupnL5G+I8weJpeWVpC+I65d0Ftq8JT0
HREpbYxobyB9J4yft6Gx9hPpO2GV/XunZgXKPyf0nlGybB9J+eeEMcOdOFVq
lH9OCDEM27Jaj/LPCXf2bViab0r574RxwTi21IHy3wmD5jf3/uVD+e+M1xNL
VcsElP/OiHkQvnrMCtJ3xtQTU3R9IknfGf0mfZ4q3ET6zsiNH7RiUhzpO2PI
q6rngYmk74zuxokaw5NJ3xkeu6tEKvtJ3wXNY5XCXVNI3wX2r6TD8mkdLgjI
+mU5cy/puyBtqlHMySTSd8HsZxa/J8eTvgvWXU5M3Er3V+aCkjbF3tcRpO+C
R/cGN85YQvqucJ3y+Yk0gPRdUZLbPe6EI+m7Ym2p6+33C0jfFeOtDTfZTyN9
V5gsVPJ5Moz0XTFok8b6tC8Uf1cc7EnRvvOS4u+KjXk/TEKvUvzdYDSpY+jR
4xR/N7SWilQSaD/CDWbDPh9yE9P+c0N/24I9KlSf5G7ITTip0UX5meaGbZJZ
q6Yokr4b0ooPrCh408D03YDfkZGNVxgrcPCic/WcxwcYq3Cw1fye2YkIxuoc
6F0cP3KLJ2MDDmqv9M/ba8AYHCT8cMpSHMGYw4Hpsbq8jtZ6dr8cZG16XbDp
LuMwDhQ+F2z6N5OxnIP7X8qfacYzTuLgqzhdMWIp4zQOvL4qT/7mwjiXg1lF
neuuGTIu4+Di1VW9X8YxruRgwwCf1Oz/6pi/HLTYRsX3NjLu5OA/y1Wv+lcy
VnDHpV+VeU+KGau449W3LQ+jMxmruyPtzNtHow8wNnCHdVXT7fR4xnCHYrFs
jckGxhx3yC/ubqpdzZjnjvX+f+fuX8o4zB38R09yl4gZy92xYlnUDC6fcZI7
uLpHc4JDGKe5w0aqOXs9ca476rz9Rp2g35e5o6t9p9YTul6lO45lPnzxk/Tq
3LFlyA9LlTXkvzv6HQtwVKD7VfCA9lD3x5fjyH8PSPMPtM3YT/57IHck98uC
U+S/B7xNdZoeFZD/HtA5FBH1/Db574EvqSsjjf8l/z2wpmRm67NO8t8DHPUs
0b6BFH8PdP7+gZApFH8PPOrWaBg7j+LvgSKHdb1H/xd/D2Slye+/lVD8PVC3
vcj/tpzi7wFVneiceQcZ13mg3m666tgCxp0eaCgsWehexVjBE2MT1myubmOs
4gl8k/63W5n2vyfGv1idH6FF+98TRzfqpq8G7X9PDP4R8iE6kPa/J7h3Zt5I
iGTM80RMTUvc3mTGYZ6IKzlfvDeXsdwTpe73qmPvM07yRHJyS8jyFsZpnjhe
P3SvTX+Wz7meKB6wKWK4OuW3J+z+e899aMq40hOmZ66+j/eleuOJOvG0LPvV
jDs9MdTUvXV4ItUfL5gKj5nX0/tMxQsJzl/4d25SPfLCdbXWy/fpfWXghcMR
T3Q/9VJ98sLyIKVTppNZ/eN4wfr67o/n/lcvvbC1Y9AijhfjMC+olYzWnRJO
9dML2YmnZo7dyTjJC09WPd49N5vqqRd25y6XrL3NOLfv+ocj9R41Un33wqsZ
rR3zldj3b6UXTpw6/OdRdcZ1Xjg3sOv1d3PGnV44M2T5Cf0A+v72hl5SzX39
SMYq3pikmr23Ppm+x72hyfP3089jbOANjZl1dT336fvcG4UT36XOamHM8YZM
8nDwCUU6L3gjc218j+0fjMO8wbe4O+j7XDo/eEN/9c97+5wZJ3njQNP2lYOF
dJ7wht2akidzIhnnesNhgrl6dwKdL7yhePx0k+URxpXemH0gIP3zWTpveGPz
VeNXPSWMO72xNyt06+J7jBV8IHjTrnW9mrGKD4rnZo8R1jFW98HG726Hp7Qw
NvBBk/lxjQ/tdD7yQevUbbNvfGLM8UG93oedWV3kvw+mLQ52Okoc5oN3H62z
T9Pv5T44MeqQ/n26XpIPCoQDIiaQXppPX31YaXSQ7ifXB9WOl5QlNeS/D94b
3ZP+c5/894Hz3csrZ5SR/z74Oti9mJNP/vug1jbYSjOd/PfFrKznqsW7yX9f
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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756510654230033*^9, 3.7565109357635393`*^9, {3.756513340243642*^9, 
   3.756513367885779*^9}, 3.756513406650701*^9, {3.7565369529103613`*^9, 
   3.7565370675327873`*^9}, 3.7565420480616083`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "34"}], "+", 
      RowBox[{"1", "/", "300"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "34"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.756537146878067*^9, 3.756537159048354*^9}, {
  3.7565420345077553`*^9, 3.756542036085332*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt2nk8lN8bN/BpFy0qikqNSmklhCI+yL6NfWcWY0Yl2jdlaEFaaCNtU1oo
fdNOqaZdUbQJUdOmtKCiVNLjef2u8/z19E+v9+s4c91nrnPOPfd9Ll1hrLe4
K4fD0e3G4fzf/////yqs23/U5elsDbD6n5XW+29ZLU1Zl0n+YD1s0qGgQScu
k5utrRReJ7YGPiO3WF/uM+a4dsBncpt1SPe6U+YGf8nt1pWnHg3a+VDVmgJi
71fL4weODSZ3xdeB+CT+qUvujl3uiWvuDZhI7omjr+/06kg3Jqugx3WNHs99
LciqiBj5tc/UNFtyH3SsjzhWnOZE7oczy68nrCjzJKtD5LxbPMfUlzwA31xt
t/Dtg8gDkdzgtE1fN4I8CJc/PHzj90lI1sDKxiXadwujyJrI3LL1lmrHbPJg
9DZSX7Pyaix5CNp2Wnf4yxaQtVDaKyt2mnAxWRvPt8+a671+GXkoFi9Xcm2/
rCQPw6tgryTDzATycBi+29beci2RrINTB/vnxlSvIY+A/kb9rpsHrCePhKr+
u42F0SlkLkqjv/yY+GrD/yzj4srM5MoeSzdRuy6yZ1p+Ha2ZTu26kEbk1n2J
z6D2UfCZNanG9dtWah+FkCMeBw4s2k7to9Ft+fqj7t12UvtoHOBohB/fm0nt
YxCbKzDTtNtF7WPQ33Xsvvpv2dSuhysV8ztW5e+hdj286vJioFXsPmofi2Yz
7wFOOnJqHwvzd41633oeoPZxGPVtgnpwC1k2DrM9Jj/Bu4PUro/Rh+qnx1Tn
ULs+0sNLso9VHKL28Vg8dM7+e/cOU/t45ORpi3LuHKH2CWjf7u0x4M5Rap8A
87Di8y0ludQ+EcW6xSeM7+dR+0SItvoHX3h8jNonYcfJwC0xtcepfRL+Fr/Q
c3ifT+2TsahgmalJywlqn4zU8t1FE7udpPYpeJc9ctwA1QJqnwJhN7MT67eR
OQbYNzl5yledU9RugAiDUzUueWSOIcShT502TTv9P8MQsZdXTTt1nSwzxOrJ
L4P+4535nxWGOHg6PX7lSzJnKrJa+6Ff7FnqPxWmo2Pnh/wjy6bC8FTwe//0
c9R/Ku5302n6rnue+huhZFOJt95ZMowQ0/P4lTqHC9TfCPYZGzv615AVRphs
MGzayZhC6m+MHg97+p/sUkT9jWFr2tKvx06yzBg9uzYvPTLhIvU3hsqB87s2
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
7n9Yfnn4XMLfFvmJXMHDg9nyYwHPWb55+CnK6NJ6j9zMQ+WrQbXeF1n+vSDf
1350PZsP6l4wbpzfdCiLzQcvtLWnCa4lkw29MKGv/Y3GJWx+eGHyuwNq1lFk
nheS5vi43fBj88UL6R0PXqXZk+O8kGYX4ZE7jc1fL7wcPzt+3FhyuhdujRCk
DhnC5rMXYg10Bq9XIRd4YTNG9OC00vpQeCEr4mDa6BpyhRcsCrpbbVaQlV6o
2W9f459LbvaCWU3dha1svXG8sZifIfGPJ6t744dRx6BzUrYevaEc9qP7NX+y
oTdie+3WSHNg69Mbl3fd6zvanMzzhjt3DzInkvneuKSvW9jCJcd5wyXhZ4uD
FlnmDdeypX8yB5DTvSF7ZWXa3Ics98a1fnOF/qrkAm+s1BubWd6bjd8b/rNi
tCPU2Pi9UTHHJbFnfzZ+bwhNchNvabDxe+Px+B3c7OFs/D7wSvVKlI1l4/dB
TavF6IVGbPw+aDieVjwbbPw+kNSJF4bz2Ph98NY/otJOyMbvg61/G7v3X8LG
74OlbXnlp9PY+H1QGXythJvDxu+DIWcfpjsXs/H7QHog8v7wZ2z8Psh/fnZ/
6nc2fh+EbtS1u8rmg8IHKluEvxZpsfnvg8LZoep1+mz++2BEjkdd43Q2/30w
Onpt1QFXNv99YbLGqfFLGJv/voDxmLjSODb/fXG+em2w8Vo2/30R8v2T50i2
PuAL9V6+91Lz2fz3xZbTJ0bNu8bmvy+CEu8cKalk898XOauNTuz8zOa/L5JC
VNIqu7L174ueK3qdTtZm698X21Merj1myNa/L2qTBq6EE9vffHElVlzpyidX
+GJB7M/b5cvYfueLyTU3e1ZkkJt94a21q413nO1/fsg/GWEUcIvtf34oXHQt
/f1Ltv/5oX1D9KWef9j+54eP3R7rFw1+TeP3Q6KfXW5XYzLPD983Z/vUe5L5
fuh9/dP4qBhynB/KRhQ0J6WRZX5YpLW+3uIYOd0P+/tv2LX5LlnuB4/6wnNL
GsgFfkjialR/6f2Gxu+Hje1Zqz5NIFf4IWRVn6eRbmSlH+Ji55a6zSM3+6Gy
z8/v29LJHH8s+ZS1T/8MWd0fjh06L348JXP90cjZn/ehjWzoj0Nre3WpH/aW
xu8PbV21QU+tyDx/cCOPJ2YLyHx/xCvL12mvJcf5gxN01MvkCFnmjy6FiZPK
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
wPr/APixoZc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxtmmlYjV3Ux0OoJMkUwilFA5WSEtW/NA+c5rnO0BlMSUTGjscUiQYNpMdB
CKmEzDoRMiVzMkWGkiGhMr+917P2++n1xfW7dvveZ99r+K+99q0rmOcn6q6k
pKTbQ0npf//////VOmSk7l/b1jrA4T9ucLBbF23VvcmSuMnBYK/rEb8AV+JW
B7eKpr9rq/yJvzr8GjVz0fNTUcSdDjlHbWyTfoqIfzlkPJlqm1A2l1gJ+vl/
i31sFxB3B/ekZs+soYnEyhj/Pv/3r9gVxL2A/SMWvM9dRayCb61JHFnRGmI1
LNiWszv+w3pidRy+7FpeH5RCrIERgZx/yxs3E2tCo1fSkZVu6cT9gTp187tG
mcRa+Gv3Dz9ycBbxAMxWvd3/sFoO8UD4nzU7J1LeRjwIBQ8Mpzt0yyMejKQV
lu/6/t1BPAS1X4rcKn/+S6wNSfaFsuNL5cRDoXX2sXBUwi7iYbi69XOjx5zd
xMPxOHNunwXRe4h1sL9ftO17nwLiEbhVcLVZ23ov8UhMsVx+bN6wfcSjEGsf
/jyxgzEHvAc/cmtu7v+PZRz4Bf3MHJ5fSOO6yDHQyB4mOkDjuni2s9Iiy+Ag
jeuhco1pjeAZsUwPC1XPLJVsOUTjoyH0qczLsCmi8dG4lrH1+dNHxEr6+ODW
UOa14DCN60PXKMPzjXIxjRtAN3zZ0PObiWUGWOD0+XGTZgmNj4HT9XB7WQqx
bAzSv6g+k/9h42NhrCsomGhVSuNjofU4LGG5hFjJEE+SBRess9m4IVar3em+
qJKNG2G3jt8012Y2boRdz85sLO97hMaNYeaSPuyeKbHMGK4dq+4e9GbjJhg5
TrfIRcLGTRDb68So4pVsfBwm5xVceZ/BxschX0v4TKWAjY/HpKyzjSplbHw8
gq74TWk7y8ZNYbde7cLVKjZuiifflmzKvMrGzSBdeTPA/zobN8On7ZfD1K+x
cXOcqp+QVXmJGOZ4ljnmaMJ59vfmmPq3prvJMWKFOVJ8szMa97H5E5Ayf0i1
PJvNn4Aez6p3Clez+RPw4mzad5O5bP4EjK9o+9bpz+Zb4EVTvUq1NZtvgScq
DQuytNl8C1wa+2pyeDu9f4UFXn0aW97/NrOPJTxfv8koLiSGJfQKo5cbrGD2
skSttgUk09l8S8gMBm8X6LD5E7EykofeNeQvmIjB3594zYxg/jQRzgUvOGcb
yf8UE1Gh+U9ejZD5pxX+ue1jE/uE/BdWyFBVNp7pw/zZCgvqZlduKSd/V1jB
Y/DvveVDmP9PwowF65tPxlG8YBIKYwzCllayeJoEnwPjO5tViRWTEO98xlfZ
k+JRyRr2Z/i/76+ieIU1Hlye8G7FERbP1rB9k5No9ojiXWGNbg+67Zv4neUH
G3ASbvE+9SeGDTJLNBIej6Z8IrPB7HvZ1ZvNKN8obODicvDjaSuWjybDYPux
geOsKV9hMpw18vSvTaR8JpuMwQ3WO8ZFU75TTMavLJFLsC/Lh7Z4s/B9/iKn
7TTfFnU1j+yGWuXSfFsMtrju2GqSTfNtcbvcUr3GaCvNn4KjD4Zo5k3IoPlT
cOjJJvi7ptH8KXBVL4//en8TzZ+CcymaD01dNtD8qXi8M7czoGEtzZ8KUb/A
m96H/6H5U+GvfnlEnjCJ5k/FmT2jQw68WULz7dASZ75hzMeFNN8Ot9INcy+t
jqP5dnjD2TekjjeT5tvB80vBl8mdAppvD60HbeUbToTTfHuMX36+92fTAJpv
j9mROe7r7k2n+faY91tdXf2zJ813wBWe1/kB1d403wF3PQX3Qiz8aL4DhDZf
nox7FULzHVCSGDC/wpZP8wH7vq1zr8ZK/mMO4LVjQ0lG73n0PMCi5OOE0X9I
n3lAu85yWyVd2r8M8DzhhK+vV/7HcmB4fta1h7vp/SmAvF0xr1R01v3HDcCZ
QW4xuvXs/Tsis1++SFSXSus7Il+k/vydCukxHLF/yH2jnSA95jli6OiJt+Vp
pMcyRxSmiOdNbCc9ljsibVhQXXYs+ZPCEWprnbf07CB/a3DEITv/zAubdtL6
Tnga7O2xeTD5L8cJHfNld07OIv+GE+6nRk/LqyT/5zkhQu/NhF9DKV5kXX//
c82kI/EUX3InWOjoJ+68RvGncEI+f2bUOQ7Fa4MTmqIKm7UWMv2chkX5P3RP
X6T450xDyy6p8LkGyyfTMCXPRaYIoHzDm4ajVxVjD29l+Wkaji85Nas70zP5
NMwf0e/UcCWWb6dhSP4eA34WccM0TI16sSp3TBmt74yf+TpfNx0l5jjDa9jv
vH5Tj9L6zvihvib/WwUxzxk32pw/ajsco/Wd8aTf1ISgU8RyZ3zLP/Jts+lx
Wt8ZcHdYsPdf4gZnrOPMM5SpltP6Lhi6q8Sv9zxijguGCW9xxtwihgviXxR9
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
mw9VO3CCfX89E5/GdPxM71fm8D//K1M4
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxtmnlczdsX97sRmaNQmY6IynRyNSjVpzSPp3muczpjpeSaIsOJkEyVMmU4
ZKiIyBChQ4iIRGQ+hXRNFSHD5el5/dZ+/nruP/f1fm27ffZ3rfVZa+29R8fM
9hOrq6mpje6mpvZ//////6/WLnzM2XFGNnp2/2OVXYn2zuw9U6cTt9hxG47c
dnXyJG6z67k0Rv2mZihxh937nzbumxcIiTvtcgb8jE59Gk/8y0485Uis5/1/
iNVwe7t49jZxMrE6eEXJPaK2LyPuDqWD248/J1YQ98DREb5Xs/iriTVh/PtF
e4tPBnFvvJzyy9I1ZSNxX9zxf75HkJhF3B8HrC7ljT2zmVgLv4wrMp7qbCEe
iMsrB52Zl7aNeBCa0kqPPlfPI9ZGx1xhss6GXcQ60C/pt3CgloJ4MN7p6urk
RuwlHoLCl857Sov2EQ/Fh6vdN+l9zyfWxdoFlVtWOR8g1kPg3e6LqrIOEutj
y4b+OZWPDhEPw79WyUFzRhQSD0fb9r2qZ+FFxCOw+LF9gEnOYeKRsPtr4+IN
V48Qj0L3E9+H+7UWE3MQre916qHWsf+xnAO7qoiF13VKaHw0ov/YnE/dSSwf
jd1n66OEo47TuAFeea9Itd9FLDdATcNIk87BJ2h8DO4qD2fGrSWWj0FN7M/C
Fd/Y+FgM07njz+WX0vhY5Gl9bpFVEqsZIm/o+thxo0/SuCE2vr/eV7qIWG0c
BpfvWzHxFhsfh1EbpMkpeqdofDxW25j2CxcQy8cja9Ve+/v5bNwIMR6Pj7er
2LgROo46fbioe5rGjVFyTk3u6kEsN4ZNu5FZXjIbN8HpeiReUbBxE+QYLw69
W8nGJ+A2Tzv9TiMbn4CJ266Mv/WDjU9E4rC0ivv9z9D4RLwe457ydQSx2iQs
NKhotzVi45Ng4d97U/kkNj4ZF08YOy6ezMYn472kn/5aEzY+BUfG3TrydTQb
n4KrbRfe39Vh41xYZGV6mnQjBhdx07+fGPCB/V4u3sefc8+uI1ZysdRp8oHL
pez3m6KpVGfc8UximOKRvDgwMZbNN4WJoPRjL1s23xTRmpWRm/uz+VMhL3ub
pvuEvj+motTOT3yQ2Uc+FdNTD55xkRErp+L10O/lGsbMfn+jxi3sTvNrsj/+
Rt/NcyNadzN/+Bulc53zOAHEyr9RLjfOW6TB/GcaLnJCQr6eIH/DNPzp9/NB
ZgTzx2kw6a1RAnVi5TSkVgstf+Uz/zVDutWVzWX2xDDDxiqn5rgnLB7MYHbj
8RvNOcRKM1wcMHlUhjqLH3O80Vn+rGUTxRfMoVvbFSV6LN7McTz6XnDKDIpP
pTnaeDkGK22P0nwLDEz8JVlhSfEMC2S+fOlxzITiXW4B4dQVPgGDSQ+UFnAI
nra3rpPphyUuXv69Kb++gOZbYp3+uuKwI6Q3cksUWTgPObiU9EhpCfU7axx5
7kyvpmNqcfonW+39NH864te1rpz3iPROPh2b5dWyfrtJD5XT0XOJXXf7GKaX
Vij8dc+p3Hs3zbdCWNbWjVnPSG/lVtD8tOfF57nbab4V6uaUxHXobKX51sge
dH75+cocmm+No9u3BWSszKb51ji822va/uBMmm8N35rUQ4Wr19P8GTCYdSX6
wuZ0mj8DKXfmOXx8mkbzZ8BwmGfYfFkqzZ+BJOue7TuTl9B8G8wxuVbqcn4B
zbeBd3bM05UH59B8G7yv19+jvyKO5ttAYbxnXrAxy4+2aJ0YqyHaH0bzbVHj
fKb9tLYfzbfFo/ynKYtnudF8Wzz0aN85aLoTzbfDvuFzzv3Od6H5drjzsNXh
QgSP5tthbUGPk2ttQmi+HZRPtQ9/PCOg+YCG+shpXzpk/2MOcMy3dZ/pmyT6
e8BfgYvTDEbQ/viA4dbvGYZDaP9ywHdU84pFYvo+CsDv4AHNXXqraD3gyJ9v
9o8N1v6PVUCxYpk7Z8kGWt8evPcHz/8eQPmZY49D/AuTg9IoP8MeM99uvDdQ
l/Iz3x7P/fWHDLxO+Vluj72Bn9dwsshfFPYosK3Q/DOb/Elpj3Lpt5OlJeRv
Knu0jtB0623K8rEDep0OSRGfoXzMcYDx+/wXkxzIv+GApkuK/Q/ukP/zHWDz
j/rZ51EUL3IHROg1c+9/oHhSOGCs3f6RgSks3hygXSG5ObAHxafKAbndnsXV
rGfxOxPxG/MXTelJ8c6ZCZ6/+duGK0wPZuKT8NCxpmWkF/yZ2G6fVfdgGsun
M3EpvfiyazOxYibuWV5tqc9mejUTyg32I8dakd6pZmKrj29c0xOmf45wPNo4
uGoh6SnHEbMfnMrN7Mf03BF+26tnd9tFzHfEwHnunu8MWT5xhMa0Ea90C4gV
jpi8vNREOKaM1ndEq3b6ogNbiVWOmFTz7YKy+1la3wlv1w3vvSOOmOOEat3E
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
Nq9Ghg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
fr8cqjvuItlSCvc44/z17PwYpLgsOO7LyyW7SvFPklr2zI1kvhTt1xPy7y0i
C6R4p607Ry2KLJTixLEnwp8uZIUUqkU+4qem5FgpHh2blFbGzpvFS9Hd8+TA
F79Y/6VwE8T34tez/kuxIvqj1cxycqYUD+M2fqw8TM6RQmNJ0hXTTHKeFPvm
rHJOXEQulGJybq/OjwJysRS2gypV/9qQS6QI+1kZUTKWneeQImngkaeR7DxH
hRS4ElB8toXu/0opZqvtPN7wiFwjRd/Xi/Q12XkMlRS/nnE8HA+QG6XI61pU
jmeRW6XQPVdsOXcVuUMKP++jo9Jns/MX0fj34pXcv0LI6tGIvDtREuBG1opG
i2iXzihrsk40wuJ6IpOdV+NG4+cI7Wln9clG0djrdrVvzgg2/6MhLg09YT6Y
zf9oVNvq3crox+Z/NLq9e/lnrwab/9F41TjqqaI3m//R8P6yzLymF1kQjfjN
a/QbWFwYjWcrXixdq0lWREOQf6Ektz85tms82Z/OGwwhx0ej+MKY/J667PxK
NJ5cjV43gX3/lK6/31a7bNVEcmY0vqj/nNI4jZwTjdAF88cF2LPzLtFYOvy+
5mFvcmE0Sn7v1HkcRi6OxmzpXsW1WeSSaIxR5ViEx7PzMdHYvzOBl7GBXBGN
eScnHvTYzvofjV/DvKsSWX9rur7/jRv1hiWs/9GwqdW25N1g/Y9G4vFSWfZT
1v9o9H5r7ODBzvt0dF2fTTHP/X+z/svQeq3n8sPsPKS6DA9er5vjp0/WkmFA
tVzdYxpZR4akgJ1RO9zIXBka9i+c4hBBNpKhn+LROp84Mk+GDPO7BdfXkS1l
Xc9fsTnHd7LzSjI8DfMwGVFMdpWh/eKUKM3rZL4MX+s+y9OesfVfhuHVx3QP
tbH1Xwb0Xdx3Xh82/2W4zMHz5/ps/suw69zl2B42bP53jS/C1/VtEDuPKkPH
UKeTqXHklK78QHWnr2ls/Zdhwp3ZnPEH2fovw7s5K5tHXWfrvwzbTGZNrX3F
1n8Zel0uaAjpTudpi7vG3zC8xxY9cokMm8cVidfakZUybAmed2GYmFzRVb9+
5273JHKlDKuu/dzYp4BcI0P2ncQPbuVklQzqj184tjWRG2X4o71nQltfOi/c
2nV9isLjzXjkDhnuvGgU5vqz88RyRP1+s3PIUrK6HAfTBCvW7iRryVH3aOCk
8otkHTn4E4KuV6jIXDkGPn6frlCj889Gcmx7E6WeMo7Mk+ONhsBN3YVsKceX
/KD2G3Iy5Jj3533B0Q1kVznW/lKvyt5P5svxwbVpekQZWSDHmNk96t+pyEI5
DpTnho/+RVbIcaQg5c4TbTrvHSuHlekCC44JOV6OqiMVixY7khPkWDFbsXp0
CDlFjvC9l2a9nEPO7Po+A7T3FKwk58jhe9KlyT+VnCdHZWZcWvV2cqEcQwLe
yYbvJRfLMey/0b01D5FLuj6/RV+5/RhZKUf/rIqrJ0+QK+TQDh9o5nuSXCmH
TvLDmdHHyTVycJ26mb09QlbJ8fIXP7uygNwoh2ypYOKoXHKrHI47J5rcyiB3
yLFy7iPL2gR2Hl4BjXErlvFjyOoKbNjx3zFeGFlLgRzto+7J7HrpKHB95yxZ
kDGZq8CXrOpXpwaQjRRQ+7YtqvgT678ChRdybMKrWP8VaP9cuvNuEeu/Akfv
1jlxN7H+K3DgqM/RuRLWfwUW5cqUVdNZ/xUIj2+oidFi/VfgZXt80qzXdD8q
uv7eNEvy6gw5VoFudp9fq6WQ4xW4cTBpWFswOUEBYX2yz9Px5BQFNhrKv736
QvMpUwHdLwPHWl8l5ygQ/0dD0CeDnKdA2pu+4xPCyIUKGOtvf1RmyOa/Attf
nNfq8YU9/ykwRzxvnVzJnv8UGFr4X96wdPb8p0Dn4En61qHs+a/r+5rP/PHN
kD3/KfDq1t2Ked9o/VMpILc69fryf+RGBdwzZI81t5FbFci+EbJ2lpzcoUDp
1zU72qzY+dFZeHi9+fvFfu9s/wcfHAIk
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756537153067574*^9, 3.75654204234205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "34"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "34"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.756537146878067*^9, 3.756537159048354*^9}, {
  3.7565374323665533`*^9, 3.756537432472969*^9}, {3.7565374656788054`*^9, 
  3.756537467679648*^9}, {3.7565415346154137`*^9, 3.756541536695291*^9}, {
  3.756542057103117*^9, 3.756542060576659*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxtmnk41dv7/kmDBuUo0mjIVMpUhJQbmck2b/Pemz0USZOUfGhQFFIRKlJJ
KhUN0ohGUqJSGpRmkqLTQEpfv+s867/f+edcr2u1rP2813ru516DmmCJh3CA
lJSUmoyU1P/7////v3rL/bxd+w51jrb8j1ssq7cPLg5onUncarnkz9WFHd52
xJ2Wc8wzY5fe8iT+Zikq11smqgom7rasH7l431oZEfFvS0On3oqwqsXEUmgr
1iuSs19OPACc+qsjPs6IIR6Imx5ekedT44gHw0Um8cf0k+uIZVFQ9nJAdu1G
4mGI+5oblDs2iXgEln9Vi8lO20o8EpsHP8iv0d1GLI/7ddlvjVZuJ/4HJRku
JXWCncQKWN9l7uYTmEk8Gvb43+MlIVnEY5DUkxHZsDCHWBEY3tlutXoPsRIu
9HRvzN+aSzwWqxf9T+Ft3j5iZYx9+bY3vSmfeBw+/pugZdeyn3g8llw4+eji
uwPEE5A/1dZteutB4onoHl448O37AuJJWHrj/QS8OkQ8GW2pNZ9OPiokVsH6
4n3LT988TKwKq1R75eclRf9xgiq+zrIyqM04Qu1qKDW+OtZo2VFqV0OvSkJj
vcMxalfHy/a1eSuVi6ldHR2Ns/f3thBLTQFvzFFFpwPHqX0KJg0t0PUMPEHt
GqjyD6hTGHWS2vs58uvR1AvEUpq4wOlpFeuXULsm1gT/++Z7HLGUFs7Mz8n6
Xc3atXDxdtbHZPlSatfGRJkhdse9iBO0ccHJSHFVJmvXwcmU7QHd91m7Dha/
2aBrLXeK2qeCb6u4TDifOGEq9utmCZfFsPZp+JrmmRZzhLVPw3BLBcNNj1m7
Lu6btGUUDThN7boYc+FBVPs0YqnpmD5PKPLjsPbpCDJ9E9u7jLXPwLWjSy89
2cHaZ+D6C+Nbv06ydj3MUbBdF3abtevhWNeQigmvWbs+LqX1dWn8ZO36GLy5
tmPD0DPUboBzDzfGWowjhgFCvvibemgRJxhg46WOnmoD4koDtC7+52qBKetv
iMzIrDdtc1l/QwybVTgoF6y/IX6fWdt3lXGlIfwz7V7x5rH+RjCZZJwSa8b6
GyH9TOzlsUasvxHUdw8IMNNh/Y0QVPsw9c0E1n8mfky7dX+sHOs/E8cMYic/
6mXxzsT0AUl1E1qJK2fCK73g6ZsG9n1moTBW8brmeWLMQqjtwKeNuaz/LNwx
0Xd4G8/6z4J/TdqKuSGsvzGseipca+aw/sZ4bCV3K1yR9TeGxcCAdQM/0Xqo
NIaGS/SiJRVsfZhAMa3t3sZtxDBBIa9cc3wgW08mmJY6PXGAJutvgohZ2ntH
fWTrdzaurKxMUThGjNkYfKJPulnM1vNshH6q4VqrElfOxgihz33lhyx/TKEs
e+qt+QZimGLnJuf4pBksn0wROurxmfpDlI+V/e1nzeJ3vGf5a4b8l+P97CYR
wwzLB45T7XJk+W6GiC7FGSciSA8qzXBt+v2c0kSmH+ZYm6Hz3iGT9AXmuK3t
+uX5HtKfBHNM3fYysiuH9KnSHBVqz9K00pl+zUGy29tps+NJ3zAHhwOcunrE
pH8Jc9BuN2txsDPpY+UcTPl7/sjiaUw/LbA4UWma3WDSV1jg+6bQIRNbSI8T
LCDOTdSTLCO9rrSA2eCffTc1mZ7PxemVxRVjmndT/7nw69M4p7knm/rPRXDe
7vmPBbuo/1z06p74d8TsDOo/D4Fru74fGr+D+s/D8+Jc8Wr5dOo/D8t8I6Nz
TFKo/zx8VYv8khfL6psldu/q6tL8TvUPlrjj7yQzoojqY4IlFls+0Sw3pPpZ
aYlhJ4TjU7JWUX+gonvNyqnJy/5jVeC9n4Hq7vER9PeANQV6vrs9w/5jHlD8
d7bqnLQA+vvAluzhvT96OP9xPnDDc4jh7E9WNB7wY0ndrzMe0//jFsD9ZKuo
0nEIjW8Fsx7FNe5npWh8K1zkJm3wt9Km8a2Qbv72zgixJY1vhdH2Ob7xuQto
/P52FePY7tl+NL4VgnvONayvEtD4VnAa9CcEcotofCuULD+uvd1sKY1vjQ6z
jrovX1fS+NZ4sjNkVqpuLI1vjRHlnGFvFyfQ+NbYGLN3Y13cBhrfGpEtpQd4
VZtofGtUZpdu4c7aQuNbw3bTwSbh/VQa3xpN7tseZ9XS/ErZYGF2wETDCpp/
VRscTLhw6kkVrQ/YIMqtI35VA60fng1GWQyX/9PO1pcN3LYpRkWOIr+Rb4Nr
CQP9XpvR+qy0wbDeT6sSF9L6bbFBgW7XLtc65jfmY33ftcSKVvIbqvNxJFa/
yEOG8gPz0XQ8w951EuUPbz6qCxNHDDBh+TUfaXXxPXUulH/583FmtMyxSXzK
z8r5yKzzKuQvo/xtmQ9J3cczygnMX9hiaOrj69XJlP+qtlh9tWiR1DbSB9ji
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
FzqL
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
3jnfdlYbQ35EZSaUbWtPlZSk2v0PK1I6uQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxV23lUzF/8P/ChkEJTWUIyoWQp7RvpSaK0TfteszUzWbNvRfbCh8gSWSa0
EYok+yCJUIhSIRFlSdYS8vU739f9nvPzj/M4t9fceXbve703A9Fc3+iuHA7H
QIXD+X//////Wp3+9/8Kp/EDHyXu7vxErndq3mv9JKyDucnpoKplh/9X5lan
GyPvBW9qZv7mVBA+dnuPZ8ztTruqe0XW3mP+7TTCXGfugEvMHMwMkdpVZDF3
xamWWqXedmZVDHoyS9h/KXN3ZDfc2VodzqyGwuapSQlOzOr4FBc4yoTH3Av7
7p1K6OxsIfdB5SDj/H51zFw8d/dJ2HmOWQuV4a8mHtjOrA3xOU0f3xnMOli2
b9noJ5OY+2LZzfz703WZ+8HXuq7hwceP5P5I+YAxW64zD0B6+sq8vbuZdWFV
vgUDZzAPxMbp8w8bOzIPQtHY8wavNZkHQ1Q/7I604QNZD0/XV6ncKWAeggC3
FRWGG5n1kaNXG5ccwjwU8oycp/pjmXmwaIjp9rrz/f86gYcZA87s//yAzDFA
2+3H+4MyWLsB9PV3JI1YxtqH4evjw9JoT9Y+DA5Gqo8Mh7H24Sgok/eLbXtH
7cNxdemEcZ73yJwRGN/g8KP4CGsfgbOBf4Y9X87aDXFqcVbsQV/Wbog8w6rj
6mNYuxHemt2oMFJl7UaQPTg59MezZmofiZXm3S1WFJETRuLzwjbdohTWboxr
1kPEJ+eydmMsmnnINcqDtY9Cu9PD/WWjWPso3JSH9/zWg7WPxurnxc3Vb5qo
fTQ8Ll3cubyEzBmDcduuD3uaydrHQF7y8dq3jax9LI76r5l1L4a1j4Xt198Q
e7B2E5TtsTErHMfaTTCnbr9viQ5rN4XKjmW7U9rfUrspXp99qKH/nMwZh2Qv
n7ToYtY+DpYjtzjPOM7azVCtplE/JoUMM4SnJvofW8F+3gyiurKYRglZaQbB
4QWNdV6s3hyrarsmJNuzenPE3Cpr/juC1ZvjuVtZzWgtVm+Olct1emh1vqF6
C6jXmU09/Z4MC6wY+mR5nxpyggX2O9y7a3ibrLSAfc2axPYiVm+Jsd5Oko05
rN4SRfZLwx/tY/WWECpW/Xq2hdVbIrPByjZnFau3wjD3S/m2C1i9FQqD+fu3
yFi9FSLKNJuOh7N6K4TxhGb7fFm9NX4aJlWGu7F6a/BKPN79BKu3RtlogwlL
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
Y8jtclR/bmzz82V/rxCDRz7ql0cvaXH6H3o/vPU=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.756537153067574*^9, 3.756537165059235*^9}, 
   3.756537438386746*^9, 3.756537473901771*^9, 3.756541542704105*^9, 
   3.756542066813089*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Detuning is not correct", "Subsection",
 CellChangeTimes->{{3.7565414958428793`*^9, 3.756541515005924*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "80"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "80"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756541792211043*^9, 3.7565419874961452`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
Akk9Qj5saCZrRMDDV6tveBB7/4vAKMU/vnEl7P0vAgufPUi8aczWhxEovOuy
NySZzI2ATi/L1fo/2XoxAn8//TvKQMLefyNgUDbSL+Q+Wz9GwGbp5YWXp7L3
/wg86rR9zTvE3v8joOodZG2gTuuHvAgct8rX0Epg65sINKvNV7J/S66MwOeI
8svbuS8o/wj0e+5zTfUiuTUCtx4MunLS+CXlHwmruz6aCTvJGpHIOrpp5ay/
ZL1IrM3Z4LdqVh3lH4nI5NDA4sdkRCIxzX6tqkE95R+JXUWt49x4ZH4kjI8b
b9u1jRwbiWdOqfZt18mKSHwzLmyM/ElOisTM6at8aie+ovwjodbxWSCQk/Mi
Mczl9MjvmeTSSPA3d7+97xG5suvvt7/dEtT3NeUficW6319oOZJbI7HCd5tB
6xIyJwoq7ze/fZRH1ojCR9N9aRWNZL0ovP7FuVit+4byj8LfeTfTWoLIiIL5
0EUSra1kbhQ0j29T4V0n86Nw7fDCEUd/kmOj8O13R31P8wbKPwpFfgKlRTPJ
SVFoEfrntu0nZ0WB/2NxQMITcl4U7BpmnOjd/y3lH4Ujb3V2Z7iRK6NQMzj6
i6mCXB+F9bcOHy8sJLdGoW/CpOWTPpE50egneN1rt9E7yj8aUYf6ZdVGkvWi
IYmpCf6UQjaLRmltxOu75WREY2DdqTRp90bKPxqG5zOWHrci87s+P+HRgI0x
5NhomD/SOdB6kKyIxvTdYb/u1pKToiG4N+5WX7Umyj8auQXl3qkg50UjtEXp
cfB8cmk0gi9kLTM/TK6MhkHBrbWDasj10Tie5+ZT3+M95R8Ntx0VGcsmkzl8
THvZcuSegKzCx5cJJu4XtpI1+Ij4nWhjXETW5OP7u99GHfVkPT6ei6f8VVf5
8J9N+DiW8eJPsCnZjA+jGx2aBVyyFR/7v+9p6jWPDD42zvczQjLZjQ/zkIp0
x5NkLh9nNh/b+KuMzONjT25kTvArMp+PW5t9Vtl3kOV85EeZyo+ofqTrzYdP
b7Mby7TJ8Xys8usYc240WcFH9tEJMW5TyIl8NEd0lo+1IyfxcflcxecwJ/Ie
PpLeD9SsciVn8TH67LZeKW7kbD7UHr7VzXIh53Vd3z/jw35NJxfxITq/wyHP
mlzKx6K13u03zMhlfMw6quB4jCJXdrXX7y/zHEyu5SNsV0b8MyVyPR/v75oV
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
+QA7v5Mi5+mvbjXMZVL0eqjvf+UwO8+Tdr2/3+x95Ti5Voqa5phTd9n5YL0U
K72TFC+LyU1S3HjzSdp0g9zald/+2OyXD8mdXZ93/0JowSt2/i/D9EHHd/m3
kVVk8MzhLcpVZuehMjgod3t1XJOsKYN5fWiLxXh2PirDx8F94yydySYyNPg1
HkiOZPdfhtvFA1JNFrP7L8PaZb6/XrDfc0GGryeajyWz81U3GVqDXngZsN9z
cbscu2zSnEZ2/2VIyT96y6cH+z2ADHbSimMHRpLlMpjozPnh6ECOlaH42KAj
agJyvAyi3fP3PV3Jzp9l0OEuxfpMcqIMcXc2rGm+yPajZPiUM0/84Sl5jwyL
Fs8yiupk+1MyBE7acth4MI2vbBkuuV44bjKR7VfJUGfyaLSzF7lIhinzdDJE
UrZ/JcOkbPfxc1aSy2TQSL81wIeN70oZ4kVBx76eYONfhifi5sLga2z8y2DZ
v8cu2WM2/mVQsau3NvjAxr8Mz2u4i9f+ZONfBmHd3JrtfajecOQYfWjqQ3ct
soocUxrfpF9g9UhDjrUTltu1mZM15Wi4Yhb4x46sJ0fv4u/92t3IJnJs+Tn+
3Qc/slnX5418u+x3KNlKjnO3z3DdBWTIEbMuaGmLjOwmx5ojE2TqMWSuHJde
Nc+tnE/mybHs4+B/QpaQ+XKcvZQ2pmIFWS5H953LXILXkmPlMO53b6vuJnK8
HLMcX5Z5J5EVclR7dp/ZN5WcKIdLcavT6kxykhz9D1tp1Rwh75Fj0Ju77qZ5
5Cw5Wvf2n5fD6n22HNNO/tabd5PV/658E89uzKpi9V+Op6uirANes/ovB/98
bePBNlb/5TjceX7CMWWaXyrlMNI9sHiRJrlWjoQ3kqva48n1crhfU8067Exu
6sq3oY+2TjS5VY69PwrPbUggd8rhlTR8UWMq2/+cgdHfnjVZF760/z+8tNn8

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
Z9Xr4eQsMXrOVOuT2oOsEONBxYHaoHcUvwrE8HynF9S7llwixvff3bgx7PdL
5WLU6p6o1thGVorRz2NJ1okF5BoxPP7T7W4WQq4To6/SYrCNFblBjKTzjWN2
67D3KWIcajz6z9gWiq9NYsxdlv3qbA25VQwLi3mnrBXkTjGOp17wT2P7NycW
2RP6ae13J2vGQq9sa+OGQew+NBYJV7JsA5sonuvFwptT29n7JHtfE4vR6eE7
ny5n8T8Wf3+dGfbdncX/WMyZHv4wh0u2jsXTjEYR9wjtH4gF9usOHzGF7B6L
wHWhWWMv0n7Di0XEqAk67d7k0FhUSn+FBN9n74NiMWTL08VOYrI8Fq/HWo44
2Ub7WVwsfJ5XOZ1YSU6MxePfZ7byBpOTY6Hz0mfN3jLaD9Ni8bzoQvuFMHJG
LLRbv4bWdyNnxWJH/vZP78ppP1XE4oWdb5jJQnJBLH5snGySDXJJLA79vP3V
VZdcHouki9c1TL/Rfq2MRW+5xMm2mVwTizuxb+f5MtfF4l/93lNMu8gNsZhy
Z8C9TYPp76li8ZZ7PZTrTW7683mbed8sNrH9PxZy3yGHYl+y/T8WyTqfX7d6
sf1fAvHruK6el8maEnzV369VE0DPhytBh+9AV8N2sp4El76o+n/Mo+dtKEHp
+3jPFhmNj4kEZd33CC/Z0XiaSbD7na/vIm02/hI8Vft2YR67f4cEvjd0L8Vr
03xzl8B5u6q3/h4yT4JrCzyNOs1ovodKMK14elPGNbJAgsIX8wuEM9j6lyD4
/cRJjX3ZfZMEn327ds4/TU6U4Jt6clXqdHb/JMGweXuq/x1C8S7tz/craf68
p57dx0tQU9DQEbGe4mmWBIOW36xQd2X7vwQbXd0vNLH7xQIJ3ncZnxefY/Ff
At1sT51ri9n+L8HSfmNa4q3Y+1kJglJ0dSpb2f4vwS3Hges5h9h9jgQ7h/+Q
50XTftogwQr09O/Vj/2eRYL68/yfeVXkJgl6ZaffaJzO8n0JpO+j52SzfLjz
z/Pmdnu2MYTlf1KsG169ffN+sqYU/K2eL6QfWT4sxQddV8f7lnS/rCfFf0br
Tx9h9+eGUlhul2+uZPfdJlIEBJ9bfruN3ZdLcVV0csNVE3ofbi3FmvwVaokR
ZEjROC03/cxasrsUHw+dvBtfSuZJce2fs31SG8ihUkz7baVf30kWSGHVT7jK
rT+9j5dL8d5Ic1bdGHKcFAZvIjMjbcmJUgwcZDC70Z29v5eih9tmNW8eOU2K
QT8Weu8JIGdIsWRw2fVbfuQsKW7WKsJfu5EVUhzvOcvzqQ25QArjkYsvXTQh
l0gx1C973p5+5HIpwqL0PZZ1sN8HSJE+5eDbhDvkGim6N5Tn7jpCrpNi+PNH
+X1SyQ1/+mv9ZejbIPZ7nj/Pe4rBksBh5CYp0t7+Mlrwlr3vkOLC4vgRy4vJ
nVKsmPtyxd7Z7P2HDDccMgcOGEPWlGGCfex23Rds/GXYsbsm/U0WWU+G6PEh
xje92P2IDL/9w/ljOmm+mcjQ99W3qIHsvspMhvJzjZe12PsBaxlsevdYcZTD
7g9lOHZtit/ZAJrf7jI01TcP+LiPnf9k6CE0OKPWTusjVIan+zbLKkEWyOBn
+mX8q020vuR/vu8Ju74uKpZvy1DvkXM435ycKINu/F8Pa9ew/FuGh60/c9ex
836aDOJcb79sO3b+l2H6afVrp3MpHmTJcGdVYsDBHmSFDDVHP3bnLqB4UvDn
eQ4qUOx6x+7rZTj78+PPZjm5XIbFBRpDN3xkv4+Q4eCub9s02XmkRgbLYVU/
7/Rn9/kytElznCLK2P4vQ65xadFnIdv/ZUh3+N6/eSC5SYYAI7dF8Q1s/5dh
e+ZPz1N5bP//8/lHf828tojt/3I8yoi/cjSc7f9y+E8SZ4e6sv1fjqePHyfu
tyXryZG4hX9ZaMfyfzk8jvex82XnBxM5tvH2pA+MIpvJ0Z7Z4hu5hOV/cuD2
pfdF+8iQQ7dR/XI6+/23uxwJ7/9Lju9J/eHJkXtNb+JNDxb/5eAecBuulsHi
vxyzN9xXyR+T5XKcNAyfEWnKzn9yrLsZ3N90FTv/yfFXW081UxU7/8lh63ih
5bA9jU+aHMYpxwo/57L3MXKErTz2JVKDxjdLjreVgn1T5Oz9hBxZr+tLX/3H
xl+O1uGNbRcs2H2NHNekY92mZpPL5choMzl6/ie7v5HjXmPc+dsCmm81cmjF
ev/VdZ5cJ0eg090lVw3Z+V8O61TjxS+SyCo5/F6N/f7lLrnpz3gFlE5QjmXv
u+Q4kngoRou9H+6U41nVkujDN9jvf6bD4MOB12kDTzv8DydEc7g=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
y/88Iy7m4Vs/7oe08bRfGQ+Djdab7FhGXMGDLCsp+exz4hoebP5JN1orpOev
5+HEiFVTQnuIG3noilspSS2g87fwkLs7IcYumu6rjYcBw72sts+k++zkoXvz
tJhF6nTf3Tyc9HjifG0w+56Aj756RyKCVEhfSnxE5Vt3v9QifarxoTq6Zfdf
VqRvdT4WcZY4ro8me9DmY4vb/qnXsshe9PmYeUWr9ISU7InDx3areV0iZbI/
cz5yLGcU3jxODD6UQp7MHO1L9uvCx6olGne2dhNz+dicwNddsJ/sPZiPYTuM
U345kn/w+HCXZ2TJ3hNL+ZBG/PnknM78jY9bV4x9Cjjkj/F8eMwO9P98h/Xf
fNz3SgjfOZf8OYWPySm2Kp1/WD/OR0L5RP7q7RQPsvno3i3jn9Fk9SkftT9X
3dI5SFzYe39T3zT6TmL1Kh8LC98lvmL9SxkfR4b3t0tUY+9H+Fhsc3Ps3VXE
NXwkrTdckPWM1bN8bLRWDtxrSfGxkQ//1lKt4nT2PoWPz4k9+aebidv4CF9/
RL5lPMXfTj6Of7v4ZGoYcXfvfWauOpW+jdW/Ajh36OVeOU+sJIBL6g2/2ses
HhZgwW6nozXfidUF6DNeoPt4EMsPAlSuj/Q3HEWsL8Dp0Ka6zjGsXhZgzH7r
oeFs3VwA72luD4sGs/5RgBjHikszeuj3XQToP1M1Z/oLlk8EOPho4OgvVcTB
AqwdEz64eT/LLwKkpSbrWS0nlgowoNJp4DJn4jgBIr4amrWOII4X4C/XsEdd
7L5kAnQESYYpyIlTBPjFVbVfymP5qPc+tpjVntUkzhZA0/3lV8NGlp8EyP20
7LN9BnGhAK8q3uWGObF8JcDWSPW1TWz+UtZ7/gNnD0w4yfKXAGbXBibs5BHX
CDArd9TjlOEsn/We59zLm6EsfzUKoJ3dsDd8OetvBWisK899rE/cJsAEs1Nr
Jz5m/a4AFitF95dkEHcLsK/9T7GyE+t/hSiNXDBp7H9k70pCDI8N++veGdYP
C2H9Kul4aByxuhDZ3cVz7xqw/liI/euuHHV+T/6kL8TlF9KGf46xflGIcSE5
w5YuIDYXomDfuGwDE9Y/CuH10evApx/kry5CqBzXuXSqkpgrhFL1YhX/rcTB
Quwtb7pSFsLma0LYTpu77LwesVQIkx9fn0z5TvEgTgiP7bKgxmri+N7nn3Xl
+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
PzICc9I=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.756541808916442*^9, 3.756541993317251*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "50"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "50"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756543247191992*^9, 3.756543249183124*^9}, {
  3.756543527531012*^9, 3.756543565271038*^9}, {3.756543595388373*^9, 
  3.756543597788805*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxt2nk41F3YB/AphXZtIi1DKqUiFFF8SfZlLGNfZjXTjkpaTT0lSVJ6SmnR
iraH9pWpKC2KUiRppERK2tD29Hqv5z7vX2//dH2u47jN3Oec3/md++iLFvpK
u3I4HH01Dud//////5XZbfK/bPFsZ6Dtf1bZ/QmZNlJty05yo93xv84WvlFe
I7faZXW8T3kcXUn+ajfOhTdMc+17cofdv/8o7gvn/Sb/sut5u8jWaFgvOwqI
CbayK+t/apO7YnHN8D7rnQ3I3RDdM2ZU+BFjsjoqzdM39uxvQdZEKd/Vxc1o
OrkndAJPJG4xm0nujRbraaPcN7mS+2JCyJNlPod4ZC1Ex8i1dznxyf3R5ekL
ofJmCHkA0hOE0yQ7BeSBMNv3r95BTwl5EPZ+XD20f6qcPBjLBp/QKxbOJ2uj
avg+zePyGPIQyKt0OHNiF5N1oFpd9qmqfClZF1GxmnGRySvIQ3Eiv6O+5/4E
sh5sz6v2OvVYSx6G9pOzz2cuWkcejnwzTtvKfhvII2BqNbpr/ouN5JHYu6Y6
q7Q2hcyFT7fvPfb0SPvPCi4GeAS83HZtK7Xr462H0Nh7Uzq16yO9v16Xgti/
qd0ABr0dLl5YtJPaDfCK37D+z+Zd1D4Kj+/xVjhdz6T2UchTvEkc32cftRvC
64Gh8V6rLGo3xE+zwOplcQeofTSKPnjovi48SO2jYSu6t3TzoMPUPgZL8OKD
weIj1D4Gn4Knb3SvPUrtY5Gg22x73DeH2sfCT5y4qq4sl9qNEGR5rF9K0HFq
N0IOd8S5WU0nqH0cujdmfMlZe4rax2HVv5Xzxw7Io/bxCIhUe9TYQFaMR3nF
xlppYT61G8P1/cBe8zNPU7sxzj0V3i9dfobaJ2BwhZEiOPwstU8At0VDXO9w
jtonYm/BKzt74/PUPhHC3Kpd7toXqH0SPnZxGVmrdpHaJ2F02LUflV/IHBPE
Nh/qN6zhErWb4Iy9IHxr9WVqN4VBYrPWqPIr/xmmyDk396XyzlX6eVOon5nw
K6Lo2n9WmuLnxasebcoC6j8Zvxt389cVFlL/yQjSLd/eXaCk/pNx1Htrnksd
WTkZ1S1nK9LE16m/GSoOVM9700CGGX6fa0r0nnuD+pvBfM/Ub89ayUozuDv6
Z6YtvUn9zVF0r/6U4g8Z5jDnBt+8kFRE/c3Rt73nJMeBxdTfHI1D5j8130/m
WCCsvU/h9gm3qL8Fouc+O7LoCllhAf7UlLwa99vU3wKmCWotz16QOVPQd/9u
/cUxJdR/CuIe3rLOV79D/aeAc3Cg1d97ycopmJCvOsGdepf6T0Xq++TTPmVk
TIXQn7/dYN496j8V5vvuFCX3uE/9p+KhQ3PRqhwyxxIynceD3ruUUn9LZF4Z
GHXjHVlhie6WsYp3mx9Qf0uUcRNL3MweUn8rtMS8HHi7kgwrJAamOHDtyqi/
FbrX54+5t42stELtnb3NjxrInGnwz2+9PNqmnPpPQ/FAM3n+FrJiGsJGq5Ti
12TlNGS8elU5ftoj6m+NXfs1eN82k2GNK1O75J9+RVZY42PyrVN+lo+pvzV0
si4uv7uJzLHBbxevnr1UZNig3Ns4sJdFBfW3gXTs4OybG8hKG5wcM/afSc/J
nOmI/O5d6zrpCfWfjvzu1iGD15AV0xFsfdBj+2OycjraD986c3/0U+o/AwV2
r/JvLyWj0zHnJm29Q1bMQPDV2LFWepXUfwbsF3wweDCPzLGFy+KIBFkBGbYY
E7mvYKhWFfW3xU3RtgccEVlpi70N3aZanCVz7HCwfqV/ufoz6m+HtjHbl38L
Jivs8LHIaUThSbLSDuOe6DV7dK2m/sChwpWN1wLJXCB69PpU01NkAIKrZ2pu
dH/+nwWAqtulhK0RZAUw5VNB5YWL5CxgDiZYew+qoXjAuWk33y6IIavQ+XnG
LTIuI3PsMXnJxJwdpi8ovj1uhukPL9xGhj1+hJ7sk9dGFtgjPKpWNyasluLb
Y/YWjo56ETnLHovXNnIWTnxJ8e1RYsO/lp1BVtlDd8Gz4RVdVRTfAavjzEea
WZO5DnD9M/GuNJYMB6xXjWyXHCcLHKDoMy9j1BuywgGDQwuOp4+so/gOSHKs
n3MkhKx0QNjNI07OO8gqB8Qte68b9YjMmYmQohLTD31fUfyZnevLk/hb7mTM
xLKyaTuqk8iCmXh2aXqf/rfIipk4OOC5lKdWT/Fn4seMBvfVICtnYk7pdmXC
KrJqJjZrPTeZdpnMccSMdytOpbaRuY7Yz9ncTWL2muI74kiQ+Nue+WSBI855
VmJ4DlnhiAxds08ldeQsR2zR0wlYN/QNxXdEzOcHfha+ZJUjurUvCy1IInNm
4fuIm+c1C8jcWdjZC2t+fCJjFoJkV5tXGDZQ/FkoDDG3juOTFbOQtezIj8fr
yFmzYJM5ruea02TlLGhMcLw6p5asmoXBWrzGBM23FN8JN+/u+pNnSuY6Ycjc
LwatAWQ44VOa7djJK8gCJxycvTN/9l6ywgmyjgDjrdfIWU4ovqz1Kus5WekE
DYHzh/R2ssoJV+qPesn6N1J8Z8ybmnJfdxyZ64xcs9S+J2zJcMZDyzXRXF+y
wBku69OGrBCTFc5IsN94/XosOcsZtx/GPfyZQFY6Y0SlcpDZJrLKGRk/Q54s
2M7iu6De7NTOa5ksvgvuZzwabHyAxXfB9pTYQcWHWXwXjP3Jcdl9lMV3QdHD
F5MvM2e5YM2+lp8WR1h8F/S8Fhqmd5DFd8GWshFzV+9l8V2xa2DrpoU7WXxX
ZL3r5cBJY/Fd4VW9aKTDBhbfFT1OOmc6rWLxXdHlOb/7yP/7/K5Q434R1UhZ
fFdMOtcq3RLE4ruiz6dPvi5uLL4b9s83/qltw+K7wcu39WRPYxbfDd8DNaeY
DWXx3TAs9Gx5piaL74bajzU2/DaWfzecDXfLnVvP8u+GIw38suaHLP9uUFw5
1VZ3hY0/d0Re+6sjOJuNP3eYVA0MjdzGxp870oNlwb9XsvHnjoS7U9psZWz8
uWO8vUU/Ex8W3x2b3h6cXWXN4rvDwv/D/VmGLL47XqQquq/tw+J7YLTab/WM
NpofXA+UNJXUbXtJhgfmD5C9X1XC5p8H2rX/ypXks/nngfSbZu2+u9n880C/
Qw9f+//F5p8HZBcnNcTNY/PPA1d4BruL2fzleKJ6tc8fTzsW3xNTK3dPHD6O
xfdE87fqjRjI4ntC1690SfFvWh8UnriTXp5wqZGc5YlGt+99xlew9ccTG1a/
TDRUsvXHE0kPLH6fO8HWHy9kiv71at7F1h8vDJs/srJsA1t/vPDoe4kiNo4s
8MKtcpt1z6Usvhd49+/N0w5g8b1QOnvumwnOLL4X7F7x88ZOY/G9UGHTkdh3
AovvjXcb+qs1jmTxveFR57P90iAW3xvr81aHbujJ4ntjrrhwqn8XFt8bXMM+
afrf2frrDe3CiwkfP5GV3kiIH5Z2tZms6myv2PB1fQOZw4PjkzuOzq/IWjyE
n4kr/lFL5vKwa9icEbtqyKY8pM+JzNN9zp4PPAz+8dU1tprM4yFT3LB+J7OA
B9H2gLUr2c9H83C94rzDwBfs+cFD6RjufI+X5DQeSqR9jw9hf08WDyOXJUaL
35DzeNhp0BEwvIl9Ph4u+dz6NPkDuYyH3m3xIzezz6/iwe+IU4tuG7mVB/5V
17obP9jn94HYYlZDzB/2+X1gPtYjVasby4cPpvRfMShJk2zqgy8+Ezdd783y
4wNObv2nI1pkng8uDdkTPILlT+CDlAsX1AcNIUf7QNhgnBaty/Lng6MCzR4j
9MhpPhhV8HaExjA2nnww0PjprCHMeT5IKkittmY/r/SByZae7pHs95X5IGZC
HhZps/Hmg+kTHxVGDSC3+mB3/27hxn3Y+PNF3xMeXmfVyVq+kL+dd7LtX5Z/
X/haJcQ1fWP598V2sWPlejae4Iuh1g46t1n+eL4Qir3bjz1i+fdFytW6ZZOL
WP59MeOSm3f4WZZ/X0QOyEoxP8Ty7wvDj/v6X01j+fdF9mt70y6rWP59YdDF
qa+WnOXfF/u83tt0+LD8++Iy51Kv+9Ys/774V7/78CwDln9f3Fa/eWhTD5Z/
P9w5Z/8++yPtf7T8cH948WatJ2w/5IfTs0rfv7pENvWDQ+Y0vu0+MvxQP/p6
wsy1ZJ4fanYd3DYoiizwg/W7vqcqXMnRfmjaWlSRPZGs8MNgE4O1p/uT0/wQ
vdtqtW4b7e+y/PA7eXJCl+fkPD+4+Y1vSVWSlX4YdfbE9jdHyWV+UFerCTJK
Jav8sLLnr7b4OHKrH/Tc+l1tjyRz/KGx56nbTTeylj/cN3wM7ZjK9qP+sIv0
35xvSDb1h8cCySSNQWx/6o8hr07p9OtO5vmj4ITJ5pp22t8K/LFhZZ/Bivfk
aH8UZ6sWadSTFf5wM/yduuo5Oc0fLfGf4t49Yftpf7yf/s3Pj+2X8/xx7pj2
hstlbH/tD1Fm3O6R5eQyfxx1+hif8Jjtt/2xd/FHQUUludUfjferTLRr2f6b
j+hrWwOsG8hafLz4stXCopXM5SPCLqrPt59kUz4urSxfMK8H+/x8OLyePyZJ
h31+PhqiW05ajGP7dT6q1aK44TbkaD6kMVHZzV5s/86H9SuN6Dtichofmwoy
Br5cxvLPR4v64M2DtrL882HxRZDhk8vyz8fmaVG5q26w/PPRZ6RkhqKG5Z+P
xrueT9DO8s9Hzu/NU7IHsP1/AAYnLZZmTmLjPwB9LSqru7uz8R+A7nU8xUMZ
G/8B+Hw7/F7dOjb+AzDwxcu7Yw6y8R+ALbf2j91YyMZ/AOYt+GXztYaN/wD0
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
HXK8/BR2/dy/LP+zwTU1buF/a7L7H6q0qIc=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxtm3lYjV3U/48kZSpEyZQoSVGUMtW3edBwmk+n6ZzOmFIJjwxxzMmUOXMI
FZIpUzgRSoZjThmOsQwNhkiG3n7Xu/b71+/557k+127d+6x7773Wd+11GxKX
HCTR4HA4QzpyOP/v/////1RO1zqO2Wf2pbfT/7Laye7Lxx3+H8cS1zkV7/zT
epfvQdzk9GDbflOju8HE350sqxO3fXkQQ9zidPH5W+8VfaXEf5zC3hxz9H47
jZiDfu8d6qaLZxBr4HJi1v2wqDRiTazreXqM6EE6sRb+7ln0z//VImJtuOzo
9tSr5zLiLjCTfph4fFYGcTf4OL/TndZlNXEPTPcZPg2V64j10Kzz+c+Hp+uJ
eyJ/fXzHVy83EvfC1y366X7Nm4l7QzA4yeuXQTaxPn5m/Nh63H07cR80n54X
6Dd/J3Ff/Mu2sCw8t5vYAJ07DnB8k55DbIh7Jq71vjl7ifthw7+7OkOu7iM2
gkbIs5LZ7/YT98ch64yY/7QOEA9ARUjtigDTg8QDsZVfKHBzPkQ8CBv66Bfm
RuQRD4a8x/o5d6flExvjdvCEUWPTC/6XFcY43/Zhu9+KwzQ+BJEtby2OrDpC
40PAvSwN+LTyKI2b4P5il+riRYU0boK7Xxa/Lk89RuNDMenUIuNZo4pofCgy
2tYsbdlDzBkGwRdBlrr7cRofhoxJqbamacQcU9Ta7zlR9oKNm8IvfXD2FecT
NG4Ggwdze5rvJVaYIdPC9YnGXzY+HB310+ZIQk/S+HBc+B3sIy0g5phDY8G9
7MF/2Lg5bLjKfYU+p2h8BLpM4Z8Zu4VYMQJ7Gvo63HvBxi2Qkq2/+/Cw0zRu
AXvrBevqZMSckShMzrtWmMfGR6JM69kE01o2bgnV9IHfUocW07glwpLWuF2K
JuZY4axQmWG5hY1bwX1/x0WvbrHxUei+cfWvfx3O0Pgo/Du92yfXjpgzGkWd
pv6ql7Hx0Uh/qBfenM3GrbHSLtNSVU4Ma2zW3ZOW9ZP9vTUeckS2bqZn/5eV
1rg9eIxNcyAxxwabbSZo5KcTwwbjHw38LcgjVthAPCXHy+g+s7fB0Z5ndO+0
Mvsx6OxQc2G6yTmyH4MPsd8m/fQiVoyB+b7oNX5JxMoxGKZw6SrcQMwZi8nf
544dcJrZj0Vh2yE9+WNmPxYjT/UfavWD2Y/FUc9Tz4P1z5O9Lfrc4xdesyaG
LfgPhAumTSFW2GL2xGmVDmJipS3WFrkPNpzH7O2Q/jvejJPF7O0wx2pir4/7
mL0dHnTgb3t4ktnbQbfx9biyK8x+HGzeJHYou8vsxyHzk/r8u2pmPw6Gq0dM
c3nL7MdhdPEctH5i9vbokzlSZfuV2dtjauJ3pfFPZm+PXu7vy761Mnt7KAbe
b/zwl9k7YGOXLVJ3zgWyd0CyOGqWnwaxwgHe+j0/+2kSKx1w3f5Y22YtYs54
dJZtjpytw+zH45m+7jO37sx+POYubxYG9mL24xH/QZHWYMjsJ+DY+yd/pw5h
9hMwYOOS8p6WzH4CHL1fTDQfz+wn4O1iLY16L2Y/EfEDBh/cEsnsJ6JDpP9/
QdOZ/US8XNXLyTWT2U/E0A0/JIqDzH4Slh5erda/zuwnYYDhzE3/6pj9JIwP
yt9rpVtC9pNQ0bNCd6kDMWcyum0LXvBITIzJOBMQZlK7kVgxGaXJk+uSrzH7
yQjtd1Jp+IvZO8J3j6l9+qiLZO+Iow84OpYSYoUjnqTYjszbSax0xOtdC/fH
PyTmOGHTC7fGF10vkb0Tvu8+0TvJhVjhhN4yn8D/ZhMrnTAqvzQ6sICYA0x8
K/AJrSY2BvjnRz19pHWZngeo5q+cYzaaWAA8843O3xFErACEtaM/rU4hzgFq
FJ+HhmUQK4G+TSXJEduI1cCv+MxpnP3EHGe8kryuuZhLbOyMz08fl/XYzeZ3
honc6N68tWx+Z+hzl3lvn8Xmd8Zm97u9uwez+Z3Bid+xeJkZm98ZyfMHfL/a
SP6pnbFc2jAtu5D574IIjz7Vr+OY/y5Yua8gZWM39j5d8OjC8w0Fh+l9C1zw
+JOGzniw9XFB7pUd6bE3aT1zXNC2qcN2fx+23i7I7Bhm6qGk/aR2QUKRVbfN
bH9zXOF4vvuI7HV0Ho1dwecfdj3/gcUzVxw4cSEzdSKxwBW5h7ib3Zax+OqK
vt5rsi/doHid44o7f3dOn9ORWOmKX+6dDvQdT/lC7QqH65wZiGf5xw3ai8RF
hzZRPjN2w5cRZa87llA+hBuuoF+nnmrKpwI3DLuTkruuA8u3bhjeOTPXZQjl
5xw3tI13D2p0ovyudMOcFWVzi0tIH6jdoIgskme3kp7guKPL54J13SaS3jB2
R9iZl15bF5I+gTu+SW7nnq4gPSNwh5lmcsUzI9I7Cnesj/3defbMXJrfHfdC
dF++fkL6SemO5nPHzqd4kL5SuyPLcRWuLt5D83tA9Xmfa+VG0mvGHsiO2LDG
9so2mt8DtYOsBL31ttL8HqiX7jwXuHATze8BX2Xq28KeG2h+DyyqddFLW0/6
UukB6xN6heemrKL5PZBVV96aEbKC5vfEh6TMlIajS2h+T0SXD2hcF6Gg+T1x
LlWQNfX4XJrfE6MWnqzP5M2i+T1xaVvC2Oz8FJrfE635pY1vvONpfk8ERzfK
sjfF0fye2Dsy4+OtOD7N74WIHbFqwYQgmt8LBRc/C+74e9P8XnhSsstnqaMr
ze8Fi4kR2TUWLjS/F77qa4uFP91pfi9Y8vqnH1/qT/N7Yf/zx03xVaE0vxeS
1xYFqg+z+sAbC0xO92p4KKb5veE/eJZ8emwCze+N8Zpzm0tnTaf5vbHZRefy
yjPMf29wynTcNFLo/eR4Y3nU9RPDti+k+b1Rmz5r7vzsxTS/N+reK7/c2crq
BR8crHq+5lA51QvGPujGMbtwypzqBfiAt3uXzZnTtJ4CH+huHzOptJjqBYUP
dPBlxb+DVC/k+MAlVXJ3XQHVC0ofLPFPODpHSftH7QMnnzCH8lraX5wpOJFc
hDWD2f6bgsxBPnNfSqlewBRcilr7MiGG6gXBFBxY3ODmlUX7WTEFcdGiYevL
ab/nTMGitl7Ke1p0HpRTsO+rm9kGH6oX1FMg5b87F76R1Qu+WNhwOXefms6X
sS8SJ/3X0GDDzp8veH7nS48vp/pA4IsfOwcbRb6g86rwRX1MtGawA9UDOb5Y
Wb2u5vdGOu9KX7RNijh2rInqAbUvbjwITX91kOl/PxQ3h1o6h1L8MPbD5M59
bxp1pPgCP1z/euN9jyIWf/yQcS8vuiSS6XU//Ng6/8jlThS/cvywWu2w9dRR
YqUfGld/qLALpnin9sP7JWEJL5pZ/PPHClOlts9mio/G/phcLu7U14bpYX/0
W72+4hXTxwJ/LFBN43CjWPz1xyatXm1an4hz/NG61+r68ZlMb7Y/vzRvA+cX
sdofty702ZU/m+mvAHhmdCmLb2LxPwB7jZM6dxIxPRKAK1dMJ3veJRYEILH3
K29NO6YvAnDob859w00s/wQgJ3SB/dTPLP8E4FHlbPvayZSv1AEouXL55IoM
ph+4OLV4raPfLWI9Lh6mPSl00WH5kItanbbN852IrblIfbnsiGEyy49cGNr8
tnTMJuZy8e0u12TgBWIBFwP71R1qeEKcwoX51cYh3xuYPuFixeK3cbM5lK+z
uMieo3xU0Y3lcy7s+8RmuOkTF3Gx9YNZgKcBy+9cVIe/P+7Ql1jFxdvn03WX
9WR6g4u0iGfxu3WIm9r9na259vc/lv8DMbjKocTgK7FeIDIeP3o4/Q3zPxDB
Vc41qx4w/wPx6WeL6ccrzP9AaBYuu9DrBPM/ENtuNi1avZf5Hwh7WePsF+uZ
/4HIN/rzfO0S5n8gLomtAk2YPssKRM8xO2uNphHnBOLprXt2PyXERYG44/KU
Z8P0irL9eZ1nfp3MWBWI6amJA1dJmd4JhNkK9+SFbL2aAqHK7fYkLZ35HwSl
1/ZTlVnM/yB0WPLxYGk+8z8IrS0aFdnlzP8gdL02fu7ieuZ/EEz58rv7DOn9
coMw42GpWNeH6bUgZDYH695dRJwShO1PPW5VXWb6LQh71Fuf62goyf8glIXP
NR45nDgnCOu/qIaPDSAuCkLYGkX8nznEyiAcPTl3aMQhYlUQRhnPRe8nxOog
hFwcUfFZu5T8DwKvLebfnknEnGD8rretfzmdWC8YjpOHXuHlERsHY9Cc7/OK
XhJbB2PFFt//VhhcIf+DERl4ctycAGJuMArCxpgPXEEsCMafiy3zO18iTglG
ubtQ7+Y3YkUw1Pr3w5qHXyX/gxF0wYXXj0+cE4xRBc8PXl9JXBSMkU9EceuK
iZXBuB1baamtJlYFI5xbaVbRqYz8D0b/LglVScOJm4LRvXqB4Q43Yk4I7voM
eNEcRawXgjyfTZ1HpRAbh6DWMVKnNZ3YOgTa8/avNlxOjBB4aFQ0cTOIuSFw
sFp3ccZSYkEI9G+W1PPnEqeEICjggO3HeGJFCPx847vqBhNnheDpptRbSjvi
nBA8ctql4PQiLgrBWKn4UVUt8z8EipUXD0efYf6HYGW5quGwglgdAqNx3T7V
uRI3hWBpy/KuLh2IOaF42n2M5ueztB56oXAI3DrPJIHYOBS/6mr6Djcktg7F
xyO2+s5K2g8Iba8HTHxKRMTcUJxf17u4ToNYEIpjw2SKfrtpP6aEYvt55eJc
O2JFKBrXXlVe2cjiXyh+aG7UCypm5z8U71WravIfUHwuCoWpZVXf9P+L76GY
f6rj8vQOxKpQCHz33eH3ZvVGKBrExZmlJpRfmkJR45Ezm2/N7k/C8HXPv4cV
kyh/6YUhPtj4YqEX5TvjMJyJ/VC6L4Tyo3UYMkKE88cLKX8iDKc0woI5yZRv
uWF4L17ht2AB5WdBGN7Vdv00Novyd0oYvtzv4bIjl93nhWGQYtHD4SWkB7LC
sDDFtXlNIemFnDD4vP/nevkz6YuiMNR9aNY6OJbqB2UYnk15P79lCekTVRiW
l0Tlxr2g+051GGwMZg5a5kr6pikMT82L1/w8ye5PwyH4mWzuaU16SS8cL/7Z
CH6dJT1lHI6xlQdtM/1Jb1mHo4+JT/Pz11Q/IBy9l5T3GeG2i/wPx8TZ539f
LaX7YEE4umznFU6LovvilHDk3q4eUKO/hfwPx/vI5sKTn0g/ZoXj4qddxza/
In2ZE44xQ2dsNWsg/VkUjn0BxUGJEaRPleFwfbzg069OK8n/cDRWLjAr+U76
Vh2OaaU/FavMqL5oCsfzRRoXRu+k+oLDw1bj43PPH5lP/vPgyj/wddphun83
5uFMn30e2+xIb1vzsFyxiDfON5X85+HFypQKK3Uy+c/D7Z7/7bvumkj+81DT
LTXQuozqkRQeklJu1WvFycl/HgJDzUcvGUicxYNDpw0rZ/wgzuFhVP0097Gf
p5L/PPQdNr/b/r/UP1DyMLFEf/pafaoPVO32Qd+SxxVTP0HNQ8H3L32Er/8j
/3mYIsgzD9lK9QInAkIz4y6/7y8g/yNwFZ5vpldQf8E4AjPvHuvXf+pS8j8C
973CCqu8qX5DBAwaHIruSTPJ/wikLLHe8e3SGvI/At3cnHf8PJRF/kdg0onL
j3asonpREQHe7cPTOSupnsyKQMjG1al7dtP+yImAyvh93wc3af8URYArPXP+
Udcd5H8EhmYdG3U1lvafKgIy++B32WW0P9URiL10223AANq/TRFYb9LqYxvF
+gt8PNG31EvcS/0FPT52bRzdtu4jnQdjPk4fTb8rGkf1gjUfLzAnaf8SOk/g
Y3iX2nud7tF54/KR2tLJ3XEgqxf4iLLlzGqTUr2Qwke/p9eH/z3C+gl81Bcb
cBvr6Xxn8dG9Rjxykzk7/3zYpw7d9NSK4kMRH3/+O3ZM9yq7X+DDQjWwW3Qw
xRMVH8kvLMomsH6Bmo8HF7aKRooo/jTxUWdVElnyivUHInGx9r+9yyMoXulF
4v6hHDPrm8TGkRjnZt49cSzFN+tIdPJdqf+H3ZcgEtyn9hFFDSz+RWKC7sCD
clB8FERi7SLVxd6ZxCmRqO/svbiokvUDIjGj5nulbyeKr1mRmOpcFaVlT5wT
ifd3B3F1hMRFkShx9ryXtYRYGYl+Lr9s3+0mVkXiB9c5Jeoku++JxIO5h5vC
S4mbIlEt1HvgVsH6B1Hg7/PetK2SWC8KKbO2dHlczuqhKBQdv6GziNlbRyHv
lq6peTExojD9j0QYfYiYG4WNjVk3ilk9JYjC05cbJt9aRJwShSkFBl/HJbJ+
RhTmDPkyfV0o8z8KNwdq/kx0ZP5HYc3s2ArRcOZ/FGxuL5qv2ZP5H4XCuXdy
q3/T+1RFwUiS1yOxjtV7UVi7ZWuF/RPipvbf3zBOcrqc1X/RCDXt6htykVgv
GretFL3mnSY2joZXa58+K44TW0fj083Ud5WMEY3+pz4YbSwm5kbj2YPSuv5K
tv7tzx92p/uOO2z9o3Hkj++uCa/Z+kdjv2hPaz/2+7OiccZgSY1fP+Z/NEau
rXVST2L+R8N+SlWRSsL8j8b6onUj9Dex9Y/GnQ2pGzbfYOsfjfKoflvtOJTP
m6KRcTafVzmZ9X9iEKzaPnaYglgvBr8V/fdqsvtE45j2/ZHdPLwX6QPrGLhW
CqXOQtbvicEu18Q7v08Sc2PwsNnqVqsOu6+MwaXxtjur44hT2v9eNtXV5hLr
z8RAEsdfu7Y/6ZOsGGh2LZqcPpc4JwbFrVl2S1g/pCgGh0fvzzWZyO7z2/++
ZH589Q5iVQwi1g0ZPfwP0z8x6LfwT+elkaSPmmLQ0LFnesI5dv8ei4C2CeG8
Pqz+jUWtb/Ge60nExrEo6rgo0/YasXUsDPboyoYasvonFqpFidsNZaz+a3/e
i7r03cdZ/ReLxp0LQt1/svovFloT3Q1z7Vn9EwvDibUBEalM/8XiuGP3sq6H
WP0bi5cbXMckPGL1byyGL+vxwPovq39j4ZLT2qCry+qfWER/3dWgMYDVP7Fo
8syZF21K3BTbnu/KNXqOJOYI8LvSPVDfilhbgNIuBukiNq4nwCX3gao2Zm8o
QOcaeWYje76xAKE9rpyerEdsLsA/4cYl39ro91kLYBn9MjOpitihfVznaJNR
AbvfFyD/eZ7Kit3newngajG58NV4Vk8KUG/17cGsFnp/PAGu3Gz6ZPl/71eA
7Qnasb5iYrkAk2N/vzHqxd63AHkB72pfnqf1SxPA89l669cx7P5eAAf7DmGy
f7QfMgSwOcTZdGIbcZYAEocNfE0b4mwBjHp9lG0ro/2VI0DTrzMzCkKI8wR4
2rE+N+EV268CzA4I53dLID4rQI8FJzuf+cLuh9rfx/bzA9bPIi4X4Ma2W1Mu
/KDzpBIgQid1XeAs4ioB0hO4DxK+0PlUC7DZ28RgUAJxnQANW3fFz3nN4r0A
WdaNZqvDiVsE6JV4wkp0k8U/IeZlttp1mUisLcRVh/FD1+RTPtMTwnzJheSW
PsSGQrg+b57HV7D8KER8XZt2WR3lU3Mh/nZXSL0DiK2FqJmu36xxivKxgxBD
DP8Z9DAghhAzll0rXpNG+dxLCOclzy6EHqf8zxVi2JHHiRbJdJ/IE+Jkr6x1
WiNJLwiEeNh6+ozkHekLuRDZnT5cuLeb9EdK+3jGbbwJp/vMNCHKe3UpQU/S
KwohdkUHF+6uJH2TIcSSCeu0Lq2g+iBLCOm/Dy0JHqSHsoXYnhT+caE26aUc
ITK1daqq75C+yhPic+7fVvF2uq8tEqKzSdysflV0n3tWiORsycyMlXTfqxTi
VFu3U20+VC+UC9Hyte852SDSeyohku5V6xzoRHqwSojJqcVNGzVIL6qFGOVs
PVTTgPRknRBlNl9tTruR3mwSYnT/CSf2G5EebRHi5l//5Oq3VC9w4jDGy8ji
z8fltP5xaG2sU54bTXpXLw5JU6/OW3Ca9LBhHEZ3z1BX/yG9bBwHt/IV204a
zqP1j8Nfj5ZTmaWzaf3j8CQPvU//mknrH4cXDS7zn1xh9UMcNuS3Gr0cSPrd
Kw71cyx1O3SlfgY3Dh83uJxM7k31Ba99vkG8t8ttiAVx6BVUoBo5jv5eHge7
6yuDnGPpeSlxOOqdapGrR/VAWhxM+waPcPdg/YM4vElxXTr9N/3ejDgMKIjm
P7Qgf7Laf79y+e9ld8jf7DicazDld06h95EThy6WL3wnHaH6Kq99/u2j+lsY
0vssioOk4+JP745Rf+FsHD5pcIJDk6kfpIzDkbs6rg5Ba2n94zAhIK2tbwGt
nyoOus1BM2MdaH2r4lCXzZ19/B7Vi+o4HEwxnHFtBvUb6uIQWlBmGTKA+g1N
cTB7scCofwXtp5b292sz76l6NvteSYTAxBNGc8xoP2qLcD3pR2rFfaon9ERw
C2u5d2su1ROGIqywvjzWdy3tb2MR/iSV+I+OpP1vLsLeAUGvxg+l+sJahFU3
hjjnvSN2EKFt/whOJas3IELy4t1vO4fT+fISodcM+YoaTTp/XBGenZyqWV1A
zBPhxBJLrSIvOq8CEQ59MbMY+oJYLsImrX8xvRKoPkkRYdDSuz9nNRKnifAi
8p5fbAI7/yJsC7Ff0MLuCzJEUNrp+y7xoXiRJcKWeXoZvELibBFURmkT3neh
+JIjwuEpJ84WCojz2t/PvMeWHkXERSK4Ok+IDWwlPitCybUDlxY7UbxSinAq
0aA2W0FcLoJdURUv8hKxSoTOpx+UZ/8irhLBK1VSMpTdf6hFePf60wlVAnGd
CBkjl75MzSVuEsGnbo5j9XPiFhG23j2WqzJk32+JMams62ODMGJtMZRabf1l
W4j1xPg59eSM+GpiQzGiz4nuXzCheGwsxoLXJxd/YvHZXIz8WaajZ10hthZj
kMW0ZVeNKJ47iGFgtbXH6DnEEOPm4MFWf58Te4nBWzY7qmgY5QOuGM+SDp4q
iSbmifF6l9cai+3EAjG2BN948vMpsVyMqqTTiUYDKb+kiHHfc8kEhYg4TQyr
HsOC9I6y+ycxXCcqAw//Is4Q46xdzUJLb8pfWWKcTvJImLqDOFuM/Tczfts3
EeeIoW2eP0HiSfkwTwzdTafclDnEReL2/FFk2Zd9X3ZWjFWy8+fGRrD+lBhv
jN6Gvj9DXC7GnCNGa/8YsHpGjK8F/Vo85hBXieHw68D07BpW34iRceTTx+us
XqoTw2/WSvnhfSz/i1HjW7nXpDPpgxYxLnRQ3umWyPS/BGZaWd397xFrSxB4
XrPLnXHsPlCCsJpxJmk7iQ0lqDbh/pygQXrFWIIuLyUB2nJicwniv17b8/A2
sbUEO10Tjm0ZS/rHQYKZHi0jPLex75Uk2DJjQlf1P2IvCXLLQjyjxKSnuBLs
K7vW9UwFMU+Ccd5bl30aRXpMIMGxW3+0vrPvbeQSHA0zaqpoIU6RwD8tsUIc
zfSfBHNPxgacL2X6T4KX9zzWXzQlvZghQXa/HgNiV7J+jAQ/Rp8YufozcbYE
e3N8GkYFMH0uAd/w932r48R5EkQLohvsdFi/QoIJ1S1dxOOJz0ow5XnL9x7x
rH/R/ntWQWCSTVwuQQPvskXGdabnJZDlD3M0/05cJcG1nq5n6ozpflktwa5a
i+qjvsR1Evy30XQsfzbrd0gw/DV3+50c4hYJuj/u6/+xnPU/pJgSeFJjVSOx
thST5pf+XK3P7sOlsH84XK/SnthQioxRee8GRbD7cSk+Tkp9L0gjNpfiZGX8
VPlmdl8uxfobDQ+7FhE7SDEwsOCYcTnrn0ixqa5ENe85sZcUUs2ABV8aWT9F
ikdbOu0IbSPmtT+vY8zDeV3p/l4gxf5TJVX2+sRyKVJRnxXdjzhFirEddcWl
RsRpUkTv3DfXwZBY0T5+r0J/W0/iDClulwsenNdi/RgpmmcFDpv9k+bPlmK2
/rbV+W+Ic6Rw21JuaV1JnCdFwshrnT4fJS6S4iin++bSVcRnpeh64FD3bWJi
pRSDFu3XjnUgLpei3s7giGZnYpUUOPhWrlDR+lRJMSP2fpc7m9j6SzE/MHRO
YzBbfykK1p44+rk7W38p+Pe3xD+8QvunRYo3jum9SlJZ/SeDk31cgHIgq//a
OSBnkw77fktPhtslf/3iK2n/G8oQU/eYp6nF+oMybHDq1dPfgc6TuQx9Hs4q
vxFH589ahuO5U6o4y+n8OsjwZfy2fZvZ95GQofi0yHz0OYoXXjLsenqmdtFN
dp8gQ5Je0h/fJxSfeDIs0PR8zlOz+yUZ5q9cYPjfe4qHchmSv436Mu8jxdMU
Geqrf973qKf4myaDhe4SVXEj+35Jhi25V5uOfmXxXwa/qY5ZPX6yfoQMvI9a
UTN+U37KlrVXrDVSI13KbzkyHJzx91aZBeXXPBleFBo6GnJZ/pch28i3rUBB
+uKsDJovUjw4l0ivKNv94U1NWK5D+qa8fRxfgjaKSR+pZHh1wCZdpCJ9VSXD
s0Ddg339SX+pZShT+6XEXiS9VifD3udG24dq0f1wU7t9Q8fPHdKY/pNhTWvZ
GifWf+DIUbp4dt6rGtKT2nL8CbtRk3+X+g96cowec36nrZr6D4ZyHF77eGrt
XOo/GMth/6/VdmYy1RPmctjmVuvHXyT9ay0H99f2qW9FVE84yLHmjzJpq5C+
x4Ec2RnD1qhOUT/CS443uxUbO5whvc2VY+7Qxo2rDlJ/gifHs782T1+PIX0u
aOd9+9eahdF9vlyOs5bdPTp2IU6RY/1yfnmZJ3GaHPFnemrGa5O9Qg7//Nov
RW70/Aw57E4/3D2mmf69QZYcMTscb9nq0O/LloNzavRokQ/T/3KsvNc1JfY8
+ZMnR/7lmz8SQ8nfovb3E79+qNqA3sdZOW4Hv18+5B/1D5Ry/Nji8rJYk/oH
5XLskVesdWXfH6nkeDXafOAGCdUHVXKcexb0rTyK6gN1u33avuVFWbRedXKU
2cVUDr1N9UKTHJdqLlSo9ahebJFDKonULuGzf88Qj7+OmzYcyN/i9D+2T2sA

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
MYUb7Oc3S0VVpNeUbkhY8WmUTctOyu8Orj23uMqN9J6+O97wQo+0niA9CHck
2+R9r3cmvchzR/aWmE3jvpCeTHMH5++Om2qLSG/K3fFn4UxeRWgW5XfH2/Ly
OmXqGsrvjoMNSYmXvqRT/ukI+GMyz+RQGuWfjhF5mwJGz1hC+afjvdGSp4aD
F1L+6Qj/umdWrWgu5Z8OW6/LH98UzaT80zHh844+LsdJfyumo/9llwcj1aMp
/3RYBv4QKgYGUX4PuBrF1bkZeVJ+D1TntzovewfK7wHtRz0cX+63pfweuG+Q
6zdxrz3l94D0e1uPv5enUX4PrPSsFFxc60v5PbCr/2itmRdCKL8HEjOqqvqc
i6X8nnhWGdD+5b6I8ntC3S9haokN+QV4InbLbutaUH95nlDUr55qELCA8nvi
6cqV2nNrFlN+T1QZOG+fVUz+QeGJW44jz834uILye+Lk1Y6n5ytWUX4v+Gzn
HJ9QTOOj7wWHlMg7zqfIT8ALfZZHCnZ9y6b8Xti8ceLA9n05lN8Lna9/9ewm
3kz5vbDh5pPGZ+Y0XxRemH9TFrCiN80npRfGb17k8LV1G+X3hvvA4xHm79j8
80b170Bp+Buan/CG7f3S+sWfCyi/N9IX57oc7Syi/N5QWaO6s2fvYsrvjYHq
oi28YbQeFN6YeHldddMkWi9Kb3j8PGY50X0P5fdBb4/VBZWxtL70fbA2wnFg
j8Vs/fmgzu737eKt+ym/D2rSfSNUK2i9pvmg9mCRX9Et8idyH2x53jj043ta
3wofxP9ceCNAnfyJ0gc9paHT7EZSfeD4QjepKrSnFdUPfV/sOvfJb6gP+RX4
wmTWjFONplRveL6oLpl873glqz++WMK38hxnS/VJ7ovWlrTCd2eJFb4IWnzq
ToEt1TelL2SpN/a1VjJ/4wfVjvozWyZSPdT3wze38kPGxcTwg3bixgipNtVP
nh/0l67p+JXC/I4fWuZrpBQqieV+UHEJkfR0pnqs8MP1vAczf+8kVvqhbamS
4/CNmOOPbjpC9W2geq7vj7Hxi8c/W0sMfxwd0W/j+5us/vujODfvT0FP5of8
IcnPTnntRCz3h3RU27SjCcQKfyRG18d05BMr/fGmUxny71nmr7jYatNabdBA
rM2F1vVxdw2/EOtz0fir5sK7P8RmXJgHG03K7UH7FbgofGK1LaoXMZcLPd+E
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
1ULID3JmoGNjxdx9B/Kc/gcelE0w
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxV2nlcTO0bP/CxJWuDtBAiKWWZlPb0aV+0TPtes8/ksYQnki2EbKkHKVkG
IXuWkkeYRLKWJcqDRpQlS7KV9dfv9b3u3+v184/X+3V3n2uuc2bOOfd13SNF
s4KlXTkczshuHM7//f///9fq/L//a5zb9h5dmvP7A1nt7NIn3zvmO/Mr5yEX
FloGf2Jude46IEW57DXzZ+esukWKtsfM7c4Tz2jfPH6L+afzy1FvI66eY+Zg
+Nj8W94HmLtiwbKN3z2ymLvjRvOMnXfnMWtA56qxVfcYZk3UOOTWf3Rk7o2a
S0v6nDZg7ovz9UuyJd/fk/ujoCB7wvAHzFxMi2zc9PM48wBMcg7RNMhgHohy
WaI4L555EKaHrz6ebcmsjWLBzXGjejIPRod9cpu8/h1ZB+FHHNuXHmLWRazB
o3OrUpn1IO3lH5Drw6yPlRe2dK3RZR6Cc/qrFno3vSUPRcP8tYqhJ5kNYBlo
nSVcwjwM4/t675rkyzwcPidtxu0bzDwCb07uzL+tbiEbYkBmpn7FYXKaIXh1
blu2zGPjI/G2qeVohAsbHwmMMqrU78vGR4E/6EfjmwdvaHwUlh4MfVC3m8wx
gkayH7d1Ohs3wiCjMU8dbNn4aKzfoJxY2Y2Nj8ZhfG/eWv2axo0x4d27zaX5
5DRjuH2YWTtBwcbH4HpjPw3OZDY+Bv3zFhzidWXjJrBfcmTk5epXNG4CKxOt
fud3kDmmSN/aoTlsOhs3xem1qwc02bPxsSjtdc11cG82PhYaBrutj9a/pHEz
hJTm1Rw+SE4zQ0tNWZZWKhs3x6Km1zMe+LJxc6wPUA/5PZSNj8NXP8vWFe+a
aXwcxBK3UdKLZM54DNMZ8u/ObDY+HpvMlpaNl7DxCVD7Bk3UsmHjE7D+s7El
erPxiXCtcR1w4UkTjU+Eiu/gu+oEmcND2o8dB3JWksFDycQLru+i2N/z8Ey+
cXPGBLKKh2MC6xR5NzbfAr4hKZZr6l7QfAvY1N9IeXeUnGaBGxHW4s0ryCoL
6OfLFi6JInMmoax79Z4jE9n8SbgiaRxuqMHmT0JI87akR4+f0/xJGCHyUTw5
ReZYIq142iuzdWRY4u2/B7tdEZHTLGGhuHT4qD2bb4m+p2Y9ah7I5lvhzdaf
E+a0NNJ8K6wd1jIy6DI5zQoTuBu2pO8gq6zQtjpoUL/5ZM5kIHds2Bs+mz8Z
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
fG+UdpJs23m80hszlr4nQ4goxdW/PMyo/+8txML49DkVUjK/07Otil8ryZFC
xHlcn3vgP7JAiAa3zRfeDKb9CAohutd9PqUMJCcJ0SdrvE9xBjlFiHFm+zcN
Kmf7GYTYeMs/f187OUOI9NCVh0In0n6JLCGO6b0a30tKzhUic0NWj8N5ZKUQ
o7fqJY+8RS7s/Hzpo2eH/CEXCTEvRH+3CY/2c5QK0d6SVZCeQFYJcWbDlTFB
G8hVQjR2Oa7391lyjRCGTvn37z8n1wlRFDxwakxf2m+iFuJU7SHL1knkV0LY
TfEatziC3CrEyEt9Pr1dQG4XwqjyZYr5NrZfRQTty1dHjCkla4rQUbn00o17
ZK4Ife5+/9j3HVlPBIOMhC//daP9NYYirL9k2GW8HtlUBIStmvR1LJknwjLL
YWUT7ci2IvhO3Ndwz4MMEZaUiPo2BJK9RZDl1NUHRpD5ncf/enuwSSw5UoQ3
4wPK5fFkgQhDthb202VWiLDftXesI9sflCTCizgvs2dh5BQRdumZaw8IIKeJ
YNLf6GS9GzlDhN/xf23ztSFnidCmfdIq2ZScK0K3nltKp+uSlSI4pjzu8OhO
LhShi0GOUPcDna8iESbkrS1pf0guFeFm+Nb+3S6SVSI8asnN4ReQq0SYNPev
1J+ryTUiCIdXHRs1jVwnwkH+zOoGX3b9RXCKX/WWb8auvwivueUJmzTZ9Rch
clfdjstN9P1pF0HjTFX3rpfY/iIxLpuPOqHYQdYUo9H8lPfgFDJXjNCrR+8a
BZP1xBjXs/eK4+ZkQzFu6GptvtudbCrGoCof3f1P6PvPE+PsxebbLiVkWzGi
Cib1KsskQwzuOHHKWDnZW4zPGbxhO5zJfDG+dTU2MNUjR4qxcsL3f+tb6fcq
EMPio5PlxWvs9y+Gpf+Vy8/3sN+/GB2jI1fxF7Hfvxin2uo39A1nv38xdM0y
VQY89vvvPN6up1rpvclZYmjsD57q1kT3m1wxJtlMmxWlIivFWJi9a2FFPrlQ
DB9eWPWi+eQiMe72XqSxNIRc2nk+YrwTLk0kq8Q4c6On0qkvuUqM7elpS5tf
0f2xRoyr2UNyTlwh14mh77Dq0j97yGox9i3bb7J4KfmVGBE8yWpxLLlVDF/x
A39bO3K7GG8XdDx+N5jtj5Lgnduignlt7P4vwenY2Ogrt9n9X4KIWduH3TrE
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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756543255249172*^9, {3.756543533883512*^9, 3.756543571505748*^9}, 
   3.756543603675153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "35"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "35"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756543771292034*^9, 3.7565437724169064`*^9}, {
  3.7572865824205503`*^9, 3.757286583570261*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
2OGaXXWbcxnlL88OwwtKh0jryJ/E2kGzwq+woZnyXW6HwXEnfWzbSA9K7JAZ
E5I67g/pRYMdLl+KP6CtxPyHPXzK7Iyv/CHWtcfPZ4H7z7aRPsEel5YMeFG5
hPSLZ4+oCUMddr1n+maPdWM6D/8OID2U26PPG0VR422ml/YYueNB6ihT0tcG
e8yf57xi+wGmv/MQkaThMrAb6bnuPDg5LulI4LH9YB6MCkZX1lwi5s3DNh/l
z28Hsf1lHkb94N84ISaWz8PYiwXL+pxn+9U8ZNQIZ/f8S9wwD2s/f6rYY5NP
4zug6KXH9mvriXUdcFdH8HrLNWI44NmCYCOVn8Q8B5T477hvZVBA4zvALdtI
MzCYWO6A4w+G3FuymbjEAaviXAyyzxI3OGCh39iv02uJlRzRbrdzomk7sa4j
wptz2hoHF9L4jrjSK8UvwoiY54h4L2maugNxrCM+3jr283cgsdwROa3du4VF
EJc4Qnmgk/7WtcQNjihz5gzYnUSs5IRvNa+Nz+0l1nWCQ1P9CPWjbHwn2C+I
lVVlsfGdMGXYsCcDz7PxnXCpqProhwtsfCe09A8rC7/KxnfC4ZcjxfuvsfGd
kLfQIyW6lI3vDBNx4uPvjHWd4bXNdFZ3xnCGwQ9vnbgSNr4zZj5dtsfpMhvf
GTVX3DYZF7DxndFpOD6k8wwb3xl3Wy5MWZ7BxndGee35b5xUNv58THO0fWib
wMafj0yF1t5uS9j481HS45CaCft9efPxOGbBgzgrNv58/EkZfSZlDBt/PhZY
Z2YN7GTzPx+r+k1cdOgxm//5GDtuguhtJpt/F9Q8/TNh5zI2/y6IeHL+ssds
Yrigz+SSlue/2fpzgWbxo3hFAXGsC7Y92LPZLYxY7oKp0ZlLK4YQl7jg2+vH
vJnMrza44Ff/ta/X+DP/5got2VC/bV9Y/rkiK/qdizSO5Z8r+lv6lg3uw/LP
Ffwf3ob5W5i/ckV3syWHI3sSy10xd43n/PhVLP9dYbOxcsv0ZtKLBlc0rOM1
Nbix84sbnqs6FrwSkt7ouqE31D4VjWB+yA2txdePeleSfvHcYPk4h9+wnPQt
1g33BgQv26/N9M+ty/8pLXp9nvkdNzSPyqkf50J62uAGr4rnc141Mv3ldPmZ
usEnV5A+q3NQEhCwW6sf6bcuB5UjYj5WHSU/Y8TBEMvqYWtA+g8OTiz1m76l
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
L14wveGhMP9ITzV94mgeTnzb2/xmKavf8iD0cfkwdSnpWSIPebX/3j7STv4k
uat9TemB9GjSwzQeblZ9fr2jjdVbeDB7q/9GZTH5lUwetnhwXq38SPqby8Nn
zh61xaGkz0U8yF8kpoa9Z/rNw9dhb+e9Wkj6Xs5DnLHOQft2qrdU8TDgsJJ6
9820P9TxIHmR2NboQPtHQxdnfeoo3kF+pZmH34P4NVpfyK8oeKhKbjS1DyW/
0s5DvXfJiLjf7H0DH/ovGn4+zSK/ospHtM1q9Q3tdH5X58M1rH1Iex2d77X5
4B5ZHOX2l87/unysCjkXv3YB1Qf0+EhTURpjMJbqB0Z8vPK+mBbhRvUFMz40
xPrJ/t+X0vzzgXE+Q3LmUn3CgY/EU5mWT32ofsHhY805v5WaMVTf4PJx7eTW
U7mffGn++VguWfU5foAbzT8f9X9SQ5zSyX9E8vHx8YG537tRPSWaj1tXU3qr
rDGn+efjcVTImEgXuh9K5ONJTtm792Oo3pLMx9RDTk73tbxp/vmQHHcLemoY
QvPf9fs8EG7Ieyum+efjweladUUkvW/J5aNt4N+tI7TofUsRH3u7Pn51H3rf
UsLHj++7QkySyL+U8xGS67fr2F3yL1V83Et9u3CEJvmXOj6qJ3Tbs3wv+ZcG
PuqGGTg3cMm/NPPhMM562PiJ5F8UfASYf5l8dhb5l3Y+DFN7WT4SsftDAXZp
btGYmkHrQ1UAOefKcsdWWj/qAoTaZ4467EHrS1sA39MfcfAq1ft0u/rHhJ1x
HUrrU0+AU5vfv/3JZfVCAc7v/9Lwey/5GTMBun0tO9r5lNY7BLCuG2uZO4L8
u4MAO0O+BV4PonzhCPBFXzlesY/yiStA2uK2pUqP2H2QAHM+hZwo7UX5KBPg
ifNci2EzyM9ECnBn4IID7f6Uv9ECRKeOb+dFs/OHAIXfyn8s3Er+JlGATYb7
EjmppAfJAuhs+lOf6UR6kSbAerGfY1gZq88IcLrs564pZqQvmV2/34zKKxeO
EecKoHzhnJ5CjfSpSAB/5ZZzRQvZfbwAH5YNau1bTlwuwMuZ/o2KYaRvVQJ4
b69/szqUuE6A5DCBTnUucYMAE/pf6znuK3GzAPUm79OzprLzngAn/37ZnC8k
bhfgZmpc244Udv4TonqKesTBEmJVIZyO1EZaNrN6kBD69d5/X/YlfdYW4pSo
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
ldtsZfnoguuGX11jKihfeS5wuBoUlv+R8jnZBW/3C7fNH075nusCZSWLTI4l
6UGFCzxnC0O0DEkvml3w0KA6YfAZph+zIPpziquRNekNZxZCvZ6GW11kejQL
mT1Hnv+0Ir3izUJbY2alw2nmd2ah7F4D/+FE0rfcWTD/fKTf+iymd7MwP9tz
mb486WXzLIy7O/f3DgnTT1f4n42uO3iDmOOK8ReCvC3GMz12hfr4D6mmS4h5
rtCUteesvM702RWZ6+MmKamSnue64qFhxO1b/kzvXVHdM0dUlkHc7IrBx7/u
rL/F9N8N+a/rOox7iDluWN4bza3VZ/XEDZH2X8/V+RDz3JDY9WO5XyyrT24Q
NecbJKQT57pBP3KbxuxDrF65YdDKUhteKXGzG1ZnVc3JrGT1yx2uNrsVHKqJ
Oe7YYdO/9ngNW98d2VsTt4+qZeu7Y9oF4e76O2x9d5QqT/WbdIOt7459+RFp
oktsfXe8LrildI/5vWZ3lOj/On0ql63vAevnY8xCtrH1PfC37dDB/ZLY+h44
a/x40WcJW98DgroRc6O5bH0PlH5Sqllhxdb3wPlfwl3x49j6HhD2GzN03h9s
fQ+krD6RnPSOPX9PiBN8E8rusefvibEPq6p0TxPDE9NfvBhdtZOY54k323yj
Upew+u6Jpgl6/lEhbP89UZLvuFjfku2/J+pfnrx1dTjbf098XfFVufML89de
UNQ9eSLnHjHHC7Lr5q5zC9n588Is3sZK/WR2/rwQMGCx9sYgdv68sF7BbqOz
AXGuF6Za3tik3Mn8gheyrPI0d/zFzr8XEkKUa9dvYeffG+6Pxzns8Wfn3xtN
ogZO8jBieCN+pWjX5xrKJ14fj0hZfDSV+QtvWFcUbJhtw/LPG5NKN5zqfkP5
WeENi5fFVsYZxM3e6PiQdOL5NOY/fGC2st7kcw3Lfx9U/tIdFSxl+e+DztUb
jAZ1kV7wfOA5SeOe5nr2vuQDWZWtU+Zg4lwfTBtidc9tJNMfH9gnOCb2qJE+
NftA4dC+Fdd62fuZLwYcVJlv+5L0jeOLr7c2TNe7yvTPF1cuDbANySR95Pni
/rsn1lU85k980XFqR3W8AfmTXF/8GRabtuU9019fSE3C652Pkz43++LYYPf1
L2XsfZQLgVXC80o98idqXAxqUOp0fUn6z+HCYqed9l8uB/5jEy5CztdkD75D
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756543778528305*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correct setting", "Subsection",
 CellChangeTimes->{{3.756510674328961*^9, 3.756510678845365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  RowBox[{"40", "*", "45."}]]], "Input",
 CellChangeTimes->{{3.7565435792471237`*^9, 3.7565435807548723`*^9}}],

Cell[BoxData["42.42640687119285`"], "Output",
 CellChangeTimes->{{3.7565435772416887`*^9, 3.756543581429803*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}], "+", 
      RowBox[{"2", "/", "t"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.756508364491399*^9, 3.756508382343927*^9}, {
   3.7565095883820267`*^9, 3.756509599547564*^9}, {3.7565102956103563`*^9, 
   3.756510329580469*^9}, {3.756510484483986*^9, 3.756510486065921*^9}, {
   3.756510633377884*^9, 3.756510648341579*^9}, 3.7569826245843782`*^9, {
   3.757068338117373*^9, 3.7570683425630283`*^9}, {3.757068633313157*^9, 
   3.7570686355457277`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
2F/btZ2s4GLriRcTgpVf/c91XCxqdzY5O5rc2v3587eeTQS5k4sVvasKD0eR
OX543XQqSbqUrOEHh57mc2t2kPX9MP3jgG/PSsimfvA9OoFzo4ncPTu++Ewf
lPmdzPVD+psN/zgMf03j94NBy3Itjh05wQ/1sfMd/+GT5X7YPygxrSGdnOWH
Ii1LS5UT5Dw/HNdU+iNvIBf5Ye6aBYGuv8kKP+ysKV3PH/+Gxu+H+fHlGU3+
5FY/PN05/djJ5eROPyS7the+PEHm+EPLoyJtcTNZwx+WyvNjxP3baPz+uOzI
zzoIsqk/1Fa2ZhkuIMMfhy4q/XxdQOb6wzD11vG7T8k8fxjZz7x8e/BbGr8/
jAefLbvlTZb7Y5a48djZdHKWP+b1Lw6crSDn+SMxJs3p/g9ykT+itqRZ1E19
R+P3R4qGq7pDIrnOH1iZEdH7BLnVH6fOq3h/bSN3+uPKhdXWX8a00/gD4FaU
uPsJj6wRAE+VS7tX7ybrB2DjlAal241k0wCohzU+ytR8T+MPwIuYQ5Z7vMjc
AJh1ubx7uprMC8AbXb6fyRVyQgD8drm/FHwmywPQwyV3AH/CvzT+ANSnmRQp
8ch5ATAYKnlrkU0uCgD/38mb71aSFQH4aMHpUdJFrgvAnzj9xEaDDzT+AAzP
+nNdy5fcGYD8210Pw5LJnEBIVO+7b9lP1gjEFK/wgmNVZP1A3BvdLzCnnWwa
CM5jXg7UO2j8gTAZ0ZyYZ0LmBsJo/qnKox5kXiA64mo1AkTkhEDYrB61cesy
sjwQTU/+cGRbyFmB3fdvu8vV+eS8QFy90nvV2fPkokAcaxm9fNx1siIQhQkZ
Y0fVk+sCceFf9ymHHpFbA3FIWZ55+hm5MxDKfyysvV6TOUGIrvoavriNrBGE
z0ZrVW2Y9YPwJdMsZucrsmkQhFeuh+1pZeMPwv01CU89H7LxB6HUI6LgZC0b
fxAsHA84115j4w9CW2Zm35JiNv4gjNoSrL6AjTcrCH7/XDIakM3GH4THR+L/
zUll4+/+fGervYNlbPxB4K/2Mdvty8YfBJ8WPT+rqWz8Qfjz65bndx02/iBY
qSWM6vjB8h+MhSsDFho/ZvkPhpKz2bayiyz/wQj9+zLxwjaW/2D8q/5w78R5
ZASj7T99bzMvMre7/fsf7sMxZF4wDu2KHmj5i+ZnQjCWz9HawrtHlgfD3KYq
Zs4RNv+DETM0KDduKZv/wXivbNqQ4sPmfzDCImdMOKvP5n8wZsflDx/7ia6n
uu54jhlr26+SW4ORoON4cGQ2uTMYP32XPfpHQOaE4H3a9+smZmSNEKQatGhO
70HWD4GvH0Radez6D8HQdT9sGveSEYKpvISmHXFkbgj0B3ZpLbAl80LgZ5Tg
mqJGTgjBnUuDtG4/ovuRPASO3RfhokJyVggUgcebs5aQ87rjvVWVTfYkF3XH
y3sQIhrB7n8h+BndnocPdH+sC0GmUWj2fXb/bA3BsQvPK4y3kjtDUJWmU+8n
I3NCoZmnKfafQdYIxZiLal/MB5H1Q3E206Hq51t2/w9F0OacyuMV7P4fil9W
OqvcdrL7fygk/d9Nvjmf3f9DkdYYn23qQ04IheCUttYCI7I8FDnbU26u60PO
CsW5J1/WxT6n51FeKGD+tb+KglwUCl6mUMl/L1kRirKKg77TUtjzr/v76B7U
OxjJnn+hyO85yGqVLXv+hWKKao+xlSPY8y8Mby1+LPRiz1ONMKxOmqyq9JSs
H4aarHUeD6+QTcOwZsu2ZSf3kREGN5lVj3g5mRuGsF4/Cjns+c4Lw69f4zt8
HdjzPwwtuy97uI5iz/8wqNx7F1nLYc//MCx79zK4qYXWE3lhePV7YQ/uFXJR
9+dN1x07fjdZEQYtJ6t0bjJb/4Qh1hGOFUFs/ROGafozLiZMYeufMAizk56H
9mPrn3DIThsYLHpN6ymNcGTpp2ZXlZP1w3H00bNbPmx9ZhqOs2c/62gksPVf
OBR/55lrurH1XzjmJZckROuy9V845ltulHH+o/VjQji+qrwbqlTN1q/hKFtx
cc3y3eSscCxaOqw+NYGtZ8MxbNWOGm1nclE4OhYn9OFps/VtOB5XViTGv6P1
cl04DnN3B0VcZuvtcKyYnPnBPovcGY40U2PpNCFbf0dgX9XnpWHTyBoRePDH
VlapwtbjEeg5SbRtSzO9D5hGoEaZs6rlNHs/iIBShpr8RjqZ291+uS5dEMne
VyJwOerugLtm5ITuz7/a/7mBKnt/iYDRpOJPyc/pfScrAkn1IrP2S+x9KgL7
995YtmEbuSgCBoKimEXz2PtVBK5ujx9e6kuui0DQqkWiOZPY+1YEOpa3zN/V
n9wZAdGhEWvPtrL3v0jUpwyVyI6QNSJxoSstPi6RvQ9GQlU2a2wj2y8yjcTn
CnWN8wPY/kgkamtdJ2q/pPdVbiR6dM0T9GL7E7xIxJ45qSbfTk6IREL6zFkb
F7H350hEmJxxNQkjZ0ViT0HR7AB79j4didNjL/r/YPsBRZGIEzcfGTSEvV9H
wiapUW0T20+ri0S0S9+toT/YflskitNM8sM+kju73Thg4eJ2MicKL/XdP+a2
kTWioGu+w203s34Unncuvs9nf28aBf2rKcdvdJIRhS23n+cc/kbmRqHqVfPm
xz3Z+KOQoPXljt0ANv4ohOg2TS/QZeOPwrJphnM6JrLxR2G/Tuy09v83/ij4
fxmzel4AG38UNB6c6IiQsfFHYaPFW3lqKht/FPITl3BP57D9hii43DM2vX2C
3BmFmNn7XI/cYPsP0ei7uPzgcLZ/qBGNfqtanvT8wfYjopH4vT7dUovlPxpf
/EIfbJ3E8h8NRWuPn1/cydxobPsYf9dayPYroqFasX2gXQo5IRr/OHXotWxj
+xfR+Lf0p95vtr+XFY0VprmXk6rZfkY0Qnve95jM5mtRNJ6oxazq/ZXtb0TD
jjMpJFaJzf9oeGleOnNDg83/aAzZ7hCSNozN/2h0ancmZo1m+w8x+P02MPo5
29/QiMHU+uAjs8zZfkQMAiLs1XSsyaYxeLTn0+oWe7Y/EYOCdt2QM2w/hBuD
VE2Z1kp3tl8Sg2nCz2ecPckJMchI2rHvnRfbP4mB9WrubZk3u/5jINJ8e+ss
a8+LQfupVS8UM9n1HwPD/Jvj0t3Y9R+DyY97b/jhyMbf/X1Ly1WHzGDjj4Fy
QfHR+qls/DEIbqzfPX4iGz8PTgcehw1iv0dfHt6mjMrfrM1+Dx46Tl04lqdK
1uEBdZNU5N/Y/YGHJ06btj5rIhvyUBLWrDfnPJsvPPxNKv40ZjPZioeQNwdd
h81i84eHZifneWHs/uLOwz7d/Lz/NNh84sH4he2XX2x+hvLQ69J/putPsuuL
B9OmyTdKk8kyHl4b1ccfYvuRCTzk1vaxk6qQF/MwefNe3dF32f49D3cmFDd/
zyJn8KCYl3K4vz85i4ctSUo90geSc7vHu6G38+paOg/I42H9ft1tZuvJBTxo
p+lHnHMjF/HwbIPAdEpPcgkP7w1SY2ovsfMJHo6eDHpwbgG5moeTfx/uVZpI
ruMhY0bI47aXdN7RxEPNtl5uqbvJrTwElwUbtQWQ23gYssSv00WN3MnD7et3
hhdfpfOWb92fH3eonbuEnb/w4Zo02sPMjNyXj9IrqWvnvqPzHA0+Eg+/CR5x
kKzDR062doZHJFmfj2TOA9U+Q8iGfFTpv6gLq6PzI1M+9i9RvuK7jmzFR6yu
dWG7Kztf4kNqGBs0uRfZnY/6j7GpQxV0XsXl48yn4qf5KeRQPl5L+gfdsSHz
+MjcOrd99Q86D5PxsXPXl0HXLpIT+Bj4eXXpwmTyYj6eRvbZsn46O1/jI6y8
1KzrO53HZfBxvHbKwu2l5Cw+dCKle2KWknP5yHX/VW5hS87jo7/6zO+/f9H5
XwEfhl/uNO2/TC7iwzLO+IBSKrmEj4l2WqWaduw8kY88qe2H47/p/LG6+/f8
vvlpWRm5jo/AvpPdJywlN/Exutcm8XN2ntnKR9aqb5Z3P9N5Zxsf767GP3xy
mtzZ/fvcvl7+J5b8jQ/HxoM/x41n56cCPClJS/BspfPWvgJYmA/4LcolawhQ
MKvh4Fxfso4A5+4f3Dm7D1lfgMHD/iiKFtB5r6EAf5wvS1Ke0HmwqQBpxuMM
vB3JVgLc1LQysjpM58kQoFfA6KuRfcnuApTVON5/KqPzaK4Aamd/bXhTRefX
oQJc+Xi6+dBYMk8AmUVcu3sanX/LBJBPDVqs8pTOyxMEGDYuCHrTyYsFmLZ8
u8/1bHa+3v39Hk90s/pA5/EZAiC3o7LYnZwlwNJlM7OXHqTz/FwBtvkvHFP1
h87/8wTYvb6tsiGcXCCAR5ORZcsFqh8oEmDz9K63I4eQSwToKB5SWbOQ1SMI
sOmjgVizkeoVqgUId55gaGhNrhPgwRj1hdP2Ub1DkwCVV/b8EimRWwXos33N
yMa5VC/RJkDEUc3S0AtUX9EpQJ6x45m/2VR/8U2Anz9zO+oXUn0GRwhDddu2
z5FUv9FXiPSwXaHrPKjeQ0OIdRlDNxXaUD2IjhDnhv1nKzGnehF9IU4Olz+/
aUr1JIZChDuVlbaaU72JqRAfJe32x2ypHsVKiO1ZF7QmeFK9CoRoVvmYGxVD
9S3uQpzeXHjOLpnqX7hCXLn5ZmF1LtXHhArRdedoftdlqp/hCSFcI5pV1kb1
NjIhPmuM3DR0KDlBiOMV03n99p6k/Atxv7Sn708tqt+RCxHWfjP227ZjlH8h
7JYa2P0dTfU/WUJMfnNwp3oZ1QvlCuHb9d/EMTFHKP/d3/9DzCMXdaovKhBi
6o+MzUk3qB6pSIjf1RUN5ZkHKf9CHPN793NsONUvKYR4fqei5bQF1TdVC1H/
YPjx2cOo/qlOiOrSyyknhlB9VJMQS6sVXl39qX6qVYjAt5LkE7pUX9UmxNqK
pW8aHKn+qlMI44DdvJhUqs/6JoS3W7qyZR2r3xLhlap8na1VNuVfhGAz21NO
56n+S0OEozPCPmjNzKL8i5D+dciGhtcbKP8iVC2oTn4upHoyQxEUxycOy1Jd
S/kXIbZ9Wsffh1SPZiWC7qRxrVPrV1H+RZj+OctyREca5V+EL08KR8jNqL6N
K0JS8ovVEy2WU/5FeJJ7c9gX92WUfxHuP5bniPOSKf8iaG+o6R1hSfV0CSLo
8Bc7Z6supPyLkLjkXEPBEKq/k4vQYVfwUzeU6vMyRKgNOyy+vG0u5V+ERWF7
1HMeUj1frgi7VOyqExJnU/5FGNNilsQJofq/AhE2zlp3j7NSQvkXYW6rNdfn
g4jyL0LWy5VLP22m+kFF9+9l9mzFNKmA8i+CRmey2xkpn/IvQsHsxqXRG6j+
sEmEwR2qX93zYyj/Ihh7fbdoEUVT/kXozUlelcyNovyL4Br0tyqQF0n5FyE7
MdJffWME5V+Mk33WbixtoHrHvmL0TnPXUZpC1hBDd5GHh8P+MMq/GF3FrwsW
jCXri5EuGSSIKw+l/Iux+LXyi6vzyKZiFNT9FD5yJluJsVJQ/b3Vlgwx2huc
Kq8Jye5inIEmV7eSzBUj4p/+paNmU7xQMda/3f8rVUjfjydG4I0QtxnlNB6Z
GJxk2YktG2j8CWIUtiUrX2yh32uxGK65xSaPhfT7ysUYPLwobLAJ5SNDjCHp
dZeU/cWUfzEqledHoEVK+Rdj+NRD2jbNLP9ipDUPtHQNiqf8i3H7aK8Lkwxp
PhV1/331lPCMOTTfSsSoUfl169Q3mo8KMfxN5/L97y+m/Itx6YvvsYt/llL+
xfj1Ye2pyhSa/01ihI3+bRp7lK6PVjE+2p7c96Gc6j/bxHjRpq4ztBddb51i
VEx4uyVkPtV/fhNjbojGrDsarP5TAtdHaa5hj+l67iuBNDPkmvssut41JMji
PYl+9YPuBzoSVC8ovaF6gO4X+hLsff/w6ujoHMq/BF9cT49LmbSd8i8Beh21
9NTcQfmXYH1s452jfXdR/iWonRI8+4DGHsq/BH2sZVdMjPZR/iV4Zu6etbOA
7oehEmy9s6zg7jW6X/Ik2NA0cNn+V3Q/lUmwo9MbcnW6/yZI4DMy7fBDa6oH
XSzB+Rc+jiPjWD2oBMfeVkZcO0j38wwJogxmODo9pft9lgTZtT8v6I2g50Gu
BL9tYPw8kp4XeRL03eCxXzeP6kMLJEidrvkk/hU9X4okeGi4oyTFhOpDSyRQ
hGzelWpNzyeFBNHK+ycEt5CrJVAOEfc5toqeb3USVOpcvi4zpudfkwS9PDBm
RR25VYJlJ8e2tC+i52Vbt12mFR/WpedppwTfM7hDiyvJ3ySw+K/TQj+W1Y9K
YTrg1Owvg+j53FeKiWrzxZ5lZA0pkk86JlqK6XmuI4Ven/Adjf3pea8vxUo3
padeF9nzX4qum6f4Zaye1FSKap2CFT4Daf1gJUXpnuEak8vJkOJUaGfg+nha
b7hLMelKC3e7Hq1HuFKoxg88lnaPHCpFy+XMb2lraP3Ck0J61GHXHTta38ik
0FxY1XfHN3KCFK/6TckbXkzrocVS+I2/8NnFmtWXStH6Fxc37SJnSBFio79k
9R9ylhQb50Tsg5DWW7lSDDLtOPmwhpwnRU2ddYXUjNZrBVL4Cg5lc/aQi6Qw
DhL1LVGh9V6JFDfdK6fmLWbrPynKZuz+Wv2WXC2FWo3Hb/soWi/WSXFxwItE
jfvkJincry5Tc/Kk9WarFPPOW95tvk5ukyL8eLLeS0dar3ZKMV5rzeHgq+Rv
UrR7fxCbO7P6Uxmcx88qXVhN7ivDJ/cPS4f40vpYQ4blcY5D+zWRdWQ4FaFa
MVNI62l9GTwWfMup7CQbyiCJ+vF0lpzW46Yy+Hxa722kSet1KxmUX7wz68wn
Q4Yr89XqClk9qrsMw29cWu98n63/Zdi0T+hWEEvvB6EylC2MylQo0/sETwaH
DT3rkw6RZd3ff1L6hRJHeh9JkKErWW9C/HPyYhkaL+RWVziw+tLueN6PYj9t
IWfIcDXzunf5S3KWDJqRdj30LOl9KVeGHK+BCX0zyXkyzMl5WDKvmVwgQ5yd
yDxoCr2fFcnA3e9rf2Q1uUSGgp2fnHiPWD2qDGeDuLFJk+l9sFqGLYe/5b9Y
Ra6T4bsiz3vXI3KTDEpzhpluZfWlrTI8PBZhci2d3CaDa3NP6xHN5E4Zqt8X
KW0xp/fdbzKoLEjvMyST1Y/OQsKMJ71zWx/Y/x8HX5m5
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
YdC+rR9ZvHIgLTeekNNJLOVgql/pIL3+7Pk5KE9uPfFqBHEmB4cv/arfPIn5
w8H86l+3788hlnHQp/mKtsf/4psDv0n8pr0LiOs4eJPx+KRtKltvDnRPN5j+
u5u4jYN87YSQq4Vs/T3x50H1mKxqYlVPbCgpqqp4wPbDE1WfUxUL/iM28kSG
dYn0ejvbH08873S4tOkvMccTR+rS5gj7sXj1RGTh4dAqJWKpJ7LqMrRGsPEU
T0jUlp5o7Gb+e+JwyMLanFbmvycuO1vwnzxh/nti9ZPrr8azeJN7Yo7h/Hyt
fcx/T9gFNuovjmb+e+K2/wfjm2z92jyxdPLjh10sXhS80LDbXHJPzvbfC7vG
lnebxLP998JJ3z+m6kwvGnlh25UI26U1TB96YdXJa9HJ4cQcLzwPdD415yvT
iz1/b/Cq87+WEUu9EBt00KnrL8ufXmhTQdPWZOJMLwxInrjZoI3yb64Xtu/5
E2cSRizzQsvSs0ZGVyl/y71Qo2s4pciAuM4LGTFJZ2zWUv5v9MKGxgTPUZVU
L9q8cDUrtFy8gPSkgjfuZmSuvzqE6ouqN/48CrTdLWP1yBtLrvzMhjvVKyNv
jPL9eWrSe6pv8MaJoqsvKtZQv4bjDYfW4xPCxlI95HojZuu7wAVVVD+l3nhW
vaTGPILqa4o3rAqbHqgNovqb6Q101FjPKKf6nOuNjj4Txhx/Sf0mmTfOJX0t
GxXC9KU3Xjg7lT/9QPqyzhsZS95zX2eSvmz0RlyJc0F/t53kvzcUDbbObtPd
Tv774GkD5+tYNeqPqfrg+/drqp3mm8l/HygeGDg6Yh3114x84Ko3ODZ/KOlN
+MBeMEI/+ynpIY4Pug3LVtQ2M73kA9Vx0cVfA5aR/z5YonV7rygygfz3wdq6
mMDl/WLJfx9cjf8ResB5Mfnvg4StzWFDd5L+lPlAI0m/q+Ejj/z3gXM/y4XR
eUHkvw96l23sm7bGm/z3Qeb7G9Ojf1K/ss0HHuIzG/yUSZ8q+ML96oaOQ9Ps
yH9frNtYeUE/nMZ1fOFx4tLws+lu5L8vXuon9Tt8m/4+fOGckP18QDXZ5/ji
d6K974mb9HxcX2gc5cyeq0vPL/VF3JPZO5uDI8l/XzyVjeuXP4v6oZm+qJed
nBdnuoT890VS19WYJztIj8p8cd5gxnvj4JXkvy9G3NXW9Z5L/dE6X9y7kxOU
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
KxtXnrf+P9rPb3w=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxV2nc81t//P/CrkrY0SEMuZZaQEhEetszLvuxrX5cGSoXmVWm8K6WtpUsT
FdJSGjQ+tNDWUNqalKg0fP1uPc8fv/c/79v9djrO9Xi9znm9zjmvoy9KDJJ2
5nA4+l04nP/3////vyanf/+vccrSOpa+5W8jud6pSe/uoqg25gan5Z++WgU3
Mzc53S3+lp/+jvmb07x5Jwp+PmH+4RTTU5F3/ibzbydOF/3VL0qZOehWZ5w/
5yBzZ7j+uLN5bSazGqblWX51SmFWx6EZho57opi7I8/C+UiVA3NPFOhsf/FM
l7k39KTnbnz59ZmsAdcTncP1a5k1kTdsvs+aYuZ+iBqT85u3mrk/3N4ds1wr
Yh4Af/vDV0S2zAPxuMer3E+9mbWw63X/FL/6T2RtfGtxX6IqZh6E0rS1iWrp
zDoYZCLx3RLCPBjxqpmjZxowD8GLBdsmH2v+SB6KFWf6Hkq+yDwMR0aGBdzI
ZNaFgda56ruxzMMxS++xaq8Zsx4CMuTH/No+kLngBI8qf1NBVnKxqfegL8rN
rFwffbvZjRkjZuX6+CDveb3NkpWPgGjehrff/76n8hFYsKSb1tibZM5IaJn5
nTm6g5WPxJGEv/9bOoWVG6CycPqAooms3AB7foiGOfZg5YZIzbstGP/wHZUb
wtwpxygrj8wxwuC4pDvT57JyIzTdKiwt8WHlxniwo/esebqs3BhVhi2HTjU2
ULkJ7vYRz064SFaaQFJ2drRqMys3xXvTZ4W+8azcFL+8vkUlO7DyUbCsrB47
oD8rH4X/BjQ+HvX2LZWPRtXNxBslZ8nK0TjkruZTuoGVm2H9sF5LLeNZuRks
ztTt0gYrH4PBXV+dnzqIlY/BvVJfU/PGN1Rujh52EtPoCrLSHLLa/9y+7Wbl
FvipkdW3JZWVWyB7zg15TBArt0TNl6IJZmZkWGJce2GxQJ39e0u0n9jbr63+
9T+XWSI98Vv191IyZyx4PkXBEVvJGItWc/+Jw5PJyrGw2fj5nXsAqz8W9kH6
n6pHs/pWcM7Knl3andW3Qv3iolPd3ryi+lZozHRMOnaJXGYF5f5Cp3M5ZM44
cLrPtxipJGMc/PvO6vcyltUfhzXapt3bHFj9DqelvJfosvrjsZ7TeFvvz0uq
Px7zr3usMKojK8fjrNPi/rPOkcvG427VWosu2WSONYZrOn65uZDVt8aWtpvm
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
g/L8S6fPv6h/JoUhsj113WMu9WdlGPKd+61QpFB/zwzDy+Lel8I6z6f8YRh+
ervVissLKX8Yjjw75Ty/nsZTWRimjZweI15A468mDN/eTTTcZEfjsz4Mi08s
GnxyMI3fpjDsVLy8PHcYjW9OOA6krn25w42N/3BEVy71q924hvKHY2aDpeaX
Xusof3jH+92pLOgBPU8QjradLjseOG6g/OEwvOlVEHuOnkeCcITsXnb9VPBm
yh+Ob+GnY3M7b6X84UhOfTq14Ro97zLDUZfc+5LeEXoeqsJh4Gtd+CKPnpdF
4Rjj7mleWJ5N+cNxtWn3xVlz6XlbEw413eTajzk5lD8coVdeaIY8oOdzUzj0
khdVHRmyj/LzEdftqvWHqfR81+TjV4FX0vtr7PnPR8Xpv/tm29D7wZIP4fLq
fS5H8yg/Hx9f31d8taH3C48PpxdNNv2uH6b8fJx0Tr6mPaWA8vNx2fhQyrie
9P5S8pGf3myd94qcyceKXhoavS/T+07Fh2z5Dt9m9j4s4mPXyrUvPq+j92UZ
HwvLrmxfOY/epzV8DH0zt5v7FHrf1vMxMU6j//4oeh838WHXsvaPUQC9rzkR
eNmo4+LlVkL5IzCv1Wjtcjt6v3MjED5B/lA4lr3/I1DVkOEbY0LzA0QgbcyG
5E56NH/gReDPpuLmJwNpfiGIwPqlPS4t70Hzj6QIbLBO3JL9m6yMwKSERLXq
TzRfyYzAlxzvG7IEms+oIoDpbZKCV+SiCJgqZt3ZH8HmPxF40fPQFfub5JoI
vBntVih1ovlTfQS6pQcs4BaRmyIwZ+O5v4l6NP/iRGK/v2xaXAZZMxL6I0x3
c9rI3EhY7+w7dZqU5nOWkfhzelt+eTUZkfBM2ZhgOJHmg7xIBPM/N5TnkAWR
6H2FO/t/PWg+mRSJJ/8bmCibQVZGYmj6lMEPa8mZkehnFprQ0esofyR2CK+8
4+aSiyKxUrFAlKTJ5reRaD7299yyNHJNJLZsPPls90tyfSRKZhz0+eNP8+Wm
SGwqird9XErmREFuq2cwexTNtzWj8LWP10C1HWw+HgXV2KfDz/eh+bplFDy8
H9bfW0JGFFz1Vb/S2si8KNw+d6by7iya/wuikDon4lqvr+SkKKzh+amcZrL1
QxSmi2bGr24hZ0ahq/GpX2rzaf2hisLv+6/Hne1K65WiKJyykSaVbiCXRWGR
aKdsaT9a79REwd9zT6J/FLk+Cn72BZ/OHCA3RSHluo7nxWYyJxpL1stORbrQ
ekszGpyRTW9SNrD1WDQsTn6e0vMV2TIakmHrZnNsaH3XMdsVnHri776azIuG
1U3x4Iv1bL0Yjbjd7z1ibGg9mRQN++5203+tJSujkSJxPbPwLTkzGiVv9e5W
gK1no7G1LJd3Yju5KLrjeeG8w6CFrW87/t6Un8lfAmg9XBONoPG+91rzyfXR
+Gy0a6GGOq23m6Kxur7mTj8hW3/HgKMbM+dhKVkzBgWSdB1HbVrPc2OwdYbI
WCeJbBmD3jYlq3GVjBgcsJPIMvVpv4AXg90Reqefp5IFMZj2rsq6bzU5KQaD
XcOufRtJ+xHKGPzu6bEkMYWcGYN7Jj+/xFxl+xkxuHBEZqoaTPsdRTG4bzbi
9yAFuSwGlzf81yXvOLkmBkHOby7atpPrY7Dv+rOTBZ6039IUg2PTLod9y2D7
L7E4ZT3IouUWWTMWi71uX8weQPs53FhMSuteWB9EtozFQEF20uF1bH8oFovq
7Ne1XCXzYhHYK87vaCe2XxuLEzfMHt6fQE6KxfGAi59i49n+bSw+HLrQ3W0b
OTMWj1ud1Zb8j+1nxWL0dmue9hdyUSzGh8auaddh+6uxsDu9+rKDI7kmFhvi
0/vdZvtl9R3uNvjBeSW5KRa9f5ya0S2b7b/FwcVDa3ZRCVkzDumLjk25UMP2
4+Kg9npWX/s3ZMs4HDm033D0T7Y/F4fn22IKs3rQ/h4vDvynp+5mDGL7hXFI
+rpSR3skOSkOy/7bHuhoxvYP4zCtsuX+wHHkzDh8GxL+X54N20+Mg5xv/62P
HbkoDo/CZ4pDmcviYHvJp3WTLbkmDrWbAs++HM/2G+Og/kRSEmlBboqDV4VX
+0ATtv8pwMJM6zwLPXJ3AYoWt328OpCsKcCZSXPb1Vg+HQG4PUqN1H6z6yNA
5qBbKz6y/UwTAb4qR5i/fsqulwA3o0VXtavJtgJcy5h34NB5dv0EmFXCE1Sz
/XQvAXzW9L5asJPMEyCol8f6FPb9gy9ASs5Zff5cth8qgEmlpcMi9j1EIUD/
x6euD40gJwmwPYAzP3oyOVWA5NzQJYl2bP+0I494uOMStp+6UoDdO/0ay/TI
mQKsVj8qCRtIzhJAb+/b/Kk92X6/AOLbWRXGncm5AjTxh0oLf7H+KkB4yq9d
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

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756510654230033*^9, 3.756987551716373*^9, 3.757068295833099*^9, {
   3.7570683348398123`*^9, 3.757068345285315*^9}, {3.7570684187540894`*^9, 
   3.7570684357671757`*^9}, 3.757068641433659*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Measure the parity (simulate the continuous evolution)", "Subchapter",
 CellChangeTimes->{{3.759444313934607*^9, 3.759444331151845*^9}}],

Cell["\<\
Note that the \[Delta] in at here are the frequency, not the angular \
frequency. The 2\[Pi] phase corresponding 1/t at here. \
\>", "Text",
 CellChangeTimes->{{3.759448520768364*^9, 3.759448573040125*^9}}],

Cell[CellGroupData[{

Cell["Example 1", "Section",
 CellChangeTimes->{{3.759445342508255*^9, 3.759445343835553*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]1", "=", 
   FractionBox["1", 
    RowBox[{"4", "*", "4.482015445737576`"}]]}], ";", 
  RowBox[{"\[CapitalOmega]2", "=", 
   FractionBox["1", 
    RowBox[{"4", "*", "4.0466432386367615`"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.759443263586129*^9, 3.759443264593857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "50"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Total\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7594434616724243`*^9, 3.759443467962531*^9}, {
  3.7594436068118896`*^9, 3.759443610504984*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
cPzRx8vUMvEnMdcflVWe/eYWU/7w/PFvXe3DuIWUb/BHrqe3Ds+T8jHUHw3f
72zo853dF/yxK0w0JrOY8jfaH8kHg5YNjWPvW/zRU7kkvdiP5b8/nt9LWDPt
J3GOPy6Jnwd9LSG9KPTHz0OaQcsD2P3GH9POOZVszSKu8sfcglmfNrWw+44/
bJcOdZePIH1q9MfuFt8zaQXEGgEwz94QO1iL6V8ARqaPWOQ7kelfAIbtKqzy
PM70LwDCf11f9dJk97MArDQb76UaRRwaAP75xcXJ+4gVAQjJ32hwp4E4OgDc
ks5eHt7sfU8Ajs7tPCJlGbEqANN7KZ+duUCcE4BQL+W1nb+Z/wlAdu9zo019
mf4HwGSB8SSHGOZ/AhBdloyTB5j/CcCJk/5phx8SNwZg2Zi7r7p2Zf4nEPba
DptPODH/E4h7T+8YHBpBzA1E19y9zx8vJOYFIsUwf4Z7GjECUfhjn9U/R4hD
A+G1TpFsfZVYEYiSPQUzDzwijg5Er007fAe8Y/UvENcDzPzWNLL6F4gnkets
X31n9S8QeTsmKAN+EBcGwiBruENOC+svBWKju/FZ06/EVYF4X8oLuFlHXBuI
YTOuPrpUw/xfINY83BlrcJ3tPwgNvpfXvCpi+w8CdxKf75fN9h+E4kIbifsa
tv8gmA+df792Ktt/EKa/u7dklJjtPwiXb3L77x/E9h+EnZ/1Br1soecfHYSq
SX+9t/i//lkQfo+pzEzMJlYFQR1uW+cQRZwThKh1OvAMYPU/CI7trVNuaLH4
ByH//vqsgbdZ/Q/CkakWsWPSWf3vmG/hOu7gWOLGIOjfv+wkNGH9Bz56LhF0
DnlG55PDx4ArM4LbdrJ+BB8njXrEzR5PzOMjry3KrtyQnX8+5k9NK3d5QPkR
yodNWGxqmYr1K/iocPtckz+E+X8+/EYb+2qyfFPyIfI5rWoupXxU8ZGu2V+9
N471M/hYrrHvip87cSEf0RO0Jtd/YvnPxzR+gORlLst/Puz7pj0Mmczynw/H
BfevTjUhbuTjhGTi0D2FpCcaQJXFjaiF9sTawMJNBRZpuaQ/HOCfGekZsCI2
BJadKJ54Kpf1S4DMojllVg7EtoA0a/Of0uOkdzzgu21N6tFAYh9Aq/VHJ+4N
0kcA29q2Xw8KJ5YD9Sq9jwHNpK+h6HCYRe4hm4jDACOF1fkCR2IFcKmij3zr
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
+EjxYmqqRRcZi78UpTH8jAIPFn8pDt10KhGZsfh3zJ9t/bmqJ4u/FGsev0u6
1sDyXwrJtLNJlkwPZkhxr8wp+lkqy38prFwbj3IjWf5Lsc783FMjd5b/Upjq
yyY1abD8l4I70aWm8ibrx0gx1zUy58p24kwp+r152qs1kvVnpCgwmq+91IU4
Twrja30GRPwgP1YohfhlSbfLl4hPd3wfs4khxcnE6o7ve2fGxPCRxBVSpAvc
Xzw3Ia6SwilR6D39LfnBailm9G6ocjxCXCtFlM+LFbMWE9dJ8eRcsEW4gLhR
ijtTLJ9JehK3SvHu8wb5xGr2+xsZfIbbDKw5QKwtw/o2n5QvC4g5MlTn3M64
zN6fGcrwavasuDhDYq4MD+dU/3FifthWhqyjWw63XSbmyfCx5KJvK/PPPjI8
3fbZTLCE9c9k8PwZfOzbKGK5DAGv22Pdvdj9T4ZZVws32hmx+58MCrd6w67t
5N8VMmS8XZ/c/J7d/2R4uf1qqNN95v9luLqmW48Xl5n/lyHq0K1bnqyfp5Sh
6PGm66OPECfJ4De1siD8ILFKBm79ns6T84gzZciZV7NnxmHiHBlS//mLG3ec
OE+GvVHcb6rzxIUypA9eqJV/g/i0DJcP7gote8F+HyWDqd7rLs+/E1fI8MV2
UEuzLuvny6Ds99JZ15W4WgaLQ2f8A0ay95syFJ5Yfn7lUuI6GdR9Rxp8ziVu
lOFw2JiydQ+JW2VYo/v15N89WPzlCJ7zsV0uZPGX4/SvtrnhCSz+cjzoJfga
d4HFX47jI294xnem88SV48O+TgO9golt5Zh56XbfFens/i/HtfiYEos37P4v
x5+2q9lfPdnvPeVof9Iz6dwGYrkcd/srNUe/Ig6V40Xac63MAMqvMDn2FUkW
TGL5qJDjfJVFUXIr8Qw5zEddz/g1luW/HE9blp/azOrxEjmWpExt26TL9F8O
/fKzBQESpv9y7Dw69+kp5p9UHZ8/4LlRzRGm/3K0bhP/SXrD9F+OzcKJLZnG
zP/JMdBsbPyrUOb/5MjeGzYrIJH4tBxNiZ+UCefZ79Pk6NRemrDqG3GFHO9n
tHWysmP+X46Hw349l4Qz/9/xeVkaDeVbmf+XY9XGZ5GqMub/5fgd+bli7Q/m
/+UYZqw4scmB+lWtcoxerJmqmsDefw2G6V4cmLfxG/9/AJT+1a4=
      
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0, 1.9870469107507642`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7594434551384277`*^9, 3.759443468212658*^9}, 
   3.759443613748147*^9, 3.759444491178361*^9, 3.75944496552647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}]}], "}"}]}],
   ";", 
  RowBox[{"\[Nu]", "=", "1.45"}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "82"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "82"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.051"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", "0", ",", "True"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MSEvolution", "=", 
  RowBox[{"expoteSolution", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.759443274076364*^9, 3.7594433006105824`*^9}, {
  3.7594441796207247`*^9, 3.7594441799865627`*^9}, {3.759448805820479*^9, 
  3.759448830856206*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
GHrm7df/NN5Y/x8eNNqa
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
YvFtYOpU579GQvZqNkD9vWMXfrD8bfB6SJy+jJ0fzwY5ZtH6deps/22w7JDu
9BXuLL4NxpZmZJels/23gdiWey3lLItvg3sJuQ/6BbD9t4Vf/OpV/f+x/G0h
W+vb60oUi2+Lw9EisbYC239bhO1KnNXizOLbYuvJ5ccS2O8l0xYeCy14i3az
+LZ4FJbL9WL702ALs5V9zlwawOLbweT9A5P+4Sy+HT6IjlZ8f8bi22H7lQV/
1rJ4PDs0lh5ZaHKc7b8dUNvZt+dKFt8OYxpqtZZPZftvh4/Rl5t2Dmbx7fDq
SVzjCjHbf3tYKCY4qxez+PbI+hkQ1z6Xnb89nDY8KDvI9o9nj6ra+R8U2e83
xh6yjkMmFRy2//bgjo0VyIew+PYQfl5yO9+X7b897ix99a2LnSfHATsW8J3b
JrHz7+apnD4ReSx/Bxglb9K4PovFd4BrjWbo/fssvgNqHmVfUGffl0wHlO42
n/LLjO2/A468sB1y3Z7Fd8CkN+F1+5tZfEesL/9dPSCR5e+I0W/fGq5uZ/ev
I5429ChtXcbiO+JGyc6+C0pYfEdEtSvX53FYfEe4JEtsXf7ffe+I4zKHjLNx
LL4j4pIu7JliyuI7YWDvIP9Biez+d0KyzdU9bm0svhPeOTulmrDPz3PC9pOa
w/6ksPu3W3/48a+bHbv/nXBv2H0v8yYW3wny5kNt0YXEDU4YOvNz56m37Pnp
DE//oEqPSSy+M/J0Ah/H7GLxnbHbYeixPU/JnueMfyKtW9Yi9nx0xnlfmymd
HcSZzjCvWux3uo49b53hu2pDs4jVEw3OGPXj/Ybn/Vl8FyzQLDeQbyBWc8G3
wtiKX49YPeKC1e1uZjt0iHkuWB7tUS44yeoTFzzL2XS+8gRxpguML8+OWX2C
1VsuUNKbVtKUTNzgAq/0vtsXjGb1iyse/l796V8E6WquGPbdoO7FQVaPucLl
v06fsL6k81yRvUY/+Kkqq89cca1ofO/8gWSf6Yrm4ts+L1k9WuoKn1zTH6lO
pDe44i7mGpy7zOpXLkJwotD3AtW3ylykt0tvRfQkXY2L9qpXtTwTYj0u/Icf
3Bo5ntXbXOgaflQSHKD6msvFn1yl8FB90nlceBWHHdpZRHoEF5lRj2+WqLD+
gItlq4ZpvAolTuLiiKc5NimRfSYXroIp5sEt1F/IuUBqaer5JdR/lHIx8r7M
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
YEz2HTK0v70xpWYdm3+FItm436TE7vP8P9Q0aHo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxtmnk81O33/yd1l7orEy1KamiTFmulbC9L1jD2nRkzZrQxpZAkadMi2pWW
oYXiLm1on6RFSpSENhWREi1K+9fv8TnXfz//eDwf51zXeZ/3uZZzzry1wqI8
wpU4HI5WTw7n//3///9VWhZpRq6R911s+T9usFwaOllR47aCuMVy78c8p1c9
Q4k7LJN03tq1ynyJv1i+/XDtb1Yp0++yfDbJ/n5XVhzxL0vHMMsF5QO8iTkY
aSdd4ftqCbES+u8a4m9xL5m4F+4WVJ9TPh5N3Bsph05tjuYvIFaG79teXUUJ
q4n7oTE+1Ll26Bri/tCLTOmz8ASbfyCcrh0XHlmbRMzFxRdPm40GbCIeBItZ
d9y3h7Dxqtg999fKfgOZvhoM9Dye/DHYTDwYwVqXps+qSiMegux5yrc1MtYR
D8Xl1d9jj7/eSDwMrjf750+N3k6sDr+Lo2rHibcSD0e/YcfGb5udSjwCi8yj
7dMsdxBrYIEPr/pW2G7ikUjeOXFymxObTxOlv8Wny5Yw/VGY8HSg6tPqvcSj
URTcw9llKGMe+NHpgvZPu/7HSTzMLcnv+7A2k+RaaF5e6+DYW05yLSzYUjGv
Z94+kmtjT8zCVZ2viJO04TR0RC/jQ1kkH4ObRfUjlRqJk8bAcphW7Xxzmo8z
FsaLB6jut8gm+ViMH9zn48/zh0k+Dvt7j19fGH2I5OOws19t+9kxxJzxWGUV
1zZf7yjJx2NnwudtUX+IORNQuPrGkpKgIySfAJXQ1JjiBibXQYt4utnVncdI
rgOuzrrYTYpckk/Ey4zQDTuGEidNRIlQr+740+Mk18WGKUWcUO18kuvCf0b5
qrq9TD4J13Y5jY49mEfySVheZfNv7twTJJ+M8q0pLx/3JE6aDN+rJbdjB/9H
8ilI6/2+Z1PiSZJPQf3F03lj0wtIPhV3TYY2FV5n8qnI+R3aPG0Ck+tBU8/p
Wsm6UyTXg+ik/N+4FGKOPhanDOtv0kX60MfZD6ffbe5i+vo48CE9Pbz19P9Y
oQ/XmuS8Nh9ijgEqTFsfbhcTwwArvt1Rdzx9hsYb4JSBS6+Hr4gVBph36fPO
vzbEHEPM+qvantL/LI03xItW9bdZqudofLf8/lZPnwMkVxhim11FAWc5MccI
a0728t2QT/owgu+EEdYvehfSeCMMfBHULBeSXGGEce+3DS74SMwxxpbXgl5i
pSIab4zr7bxU5xNsvDFyY2fXPRASK4yxZyvnocoi0udMQ9alzp2b2tj4aTCK
uqe5xYk4aRoON8q0xh4mVkzDh54VxnfPFtP46Vi0ISMvcTUxpmNFY/M5myHE
SdPBGbHxvt8vYsV0qG4cqv1813kaPwNf/v2dLfnJxs+A7KTzDJkWyZNmoKZz
wadRky/Q+BkIu7L5fLQGMccECzb0Hh+yg/RhgsIe77cucCd5kgkyPY0rgnpc
pPEmqI8PSV23lI2fCfmonBCdBcSYibxLOblXpKSfNBOujz5HWcWz8TMxOEj6
YGsDGz8LeyYMiFotIzlmof6s3skgo0s0fhZmLhin4J1n42fB82FcXM5aYo4p
dE/Jdn+JJH2YQngxbyQOsvGmGF+pteDtLzbeFKektyqtBCTnmGHzmweDX0+6
TOPNMO9jgyixnI03g+7ntcFzFxMrzBCzd/NyJSvS55jjzct0AWcbG2+Ohd+y
U8ta2XhzdKxobVLwSK4wx9yE8ivPP7PxFvhitbuOm8fGW+DP/HstSsbESRbI
OWh/ZvUbNt4CEZ/+xHxzvULjLVE/ONHo939svCWGvexfb1bMxltC6YX6977r
SV9hiV2uSrM9Qth4wKd4RdHuu6TPAwZfb/hyKpDkADZ/PCd685xYAJx4X/P1
H1viJOD8+oyWjLHEckC57PDBpx+YPUDVVMVg8AviBiC+3xPlR2bMvhUuTV1j
vjiXmGeFnakahqdmXiX7VlAOeB7leIrZt8KRjW0nH81l9q3gejVEG2NIX26F
x4NWtWycRqywwjLenuWy1cy+FSZ6lJoducnsWyPcpbD/oHmkz7NGguticWI7
898ayyx+e+5fy+xbo2f4wagReqSfZI3k7Xo5E/yYfWtYuy2t9DjE/LfGpp0J
iceuMPvWkHGqaw6Hkz7HBnN3bneb3YfZt0FQednkNcuZfZvuF3btxYe+JBfY
IPPmpStWXsy+DaK2WSz028vevw1G37tkk7aZ2bfBjdSyyolmpN9gg0LzAVtz
PjL/bZFqk37HgK0nni363UoN+FDC7NviTtri2iges28Lr2GrNDcsZu/fFj+S
WvI7TZl9WxiKDkb+bWT2bdHWukVgdpX5b4tXXitL5vRk9mfjJs88I8+b2Z8N
kfyHtbyK2Z+N91qV8ue67P3PhqJ+60H+fba+Z+PbXy1JUAyzPxuNx1b/qGXr
QzEbI+69eO58hPQbZmNps7mnWg3bf3bot2XZ+rpQZt8OiZ39tfQesf1kh5nv
zw/e7EUssEO7YItlbCuzb4fD72e5XlRm9u0QMHUQYmay/WqHhvhbHc02zL4d
blf8DK9pZPbtodd8Xlc3ku0/e+gf69G67wE7z+zx0Mle/5o/s2+P3tM0Frex
8ybJHqrvDF2v3iN9uT2cPXTdSk6x88oeSbbtJ0J9mH17pPBHPvHuy+w7oCwo
boiSB+nzHDD+kEH23UvMvgPG1q0YMXk0s+8AjbiNT1+HsPPNAdv+C5mwUJPZ
d0D6Lq0ljXeYfQd0PTtUensPcYMDVMPCK6Q17Px2xOF531M+jWX2HaEw/Fke
ncnsO+KnQ++hPzpJX+CI+N1Tn/bfwu4XR0RPdapo12P2HWFnNHDVicnMviPs
eS6Wuf6k3+CIrHO9HhxLZvadEGpSfdx0KLPvhOEOB6+mJ7H7yAk5eoknnnfR
fSVwgo3CVKUyndl3wurXD+O25hDLu8c/bDfMrWH3rVN3fiMqeFpL3OAEtxIN
5QGLmX1nxB6t72f0l+Q8Z7Q+vrxwkxe7T51h12uZmWEVs++M4qaEQy8HMvvO
2LHGZe/BGSSXd3Olr0aUCrPvjGqX/OgFZ5h9Z8QvqtjN9WT37xzMKlBuW5dG
9z9vDiL3tO2t6mD5wBz8OiA8v8WS2Z+Di2LbosbFLL+YgzY1rXmemsTyOWjs
0HCOLyJWzIFJSUHhsWXEDd322t8PvrWL5T8uiNuPTR2VxDwXlOksS9AwZfZd
0JFxfk/0QpILXGAx0doo4R3Lr1zwdC/XU7CS5HIXzAs+8P6sJ8uXXPDuwYrH
wcGk3+AC7YflG7MiWf7mirdnpvX5/pKY59q94tqU14xl+ZwrSouU4ocsovxP
4Irowns7YttZfuiKvId/iuqaiOWueNCkGPWnmuWbrtDRVr2wsJC4wRWFqTUN
Lmakz3HDcK7lyinrSM5zw/VZqre4R1k+7Ab1k2G/1bgkF7ih0U4nykOT5cdu
2Jx6PnJBD9KXu8GucOOw9hMs33bDO3Ons3qzSN7gBqMrjcVLD7L8mw+tkTfK
lm2h/J3Lx8AdD6KO1hLz+LgVdyHwRH/S1+dDlWen8uU11QfgI//jtJjsAGI+
H42n2ma/7iAW8CHdUfr3chSxjA9bqb/2GhOqN5L4sOFeCJSHEqfzkXhx07/c
s8RyPjK/fPHNm0D1TQEf/914r5V3kOojBR9mJoH9p5ZT/VTJR7xF5PVZE4gb
+Kiqa5ozbBHVXx18PDtrljpPQsxxR3WW0U91CdVvXHd8HFDeU2ZL9RvPHS8P
BWqsdqH6T98di6bddNRcQvUi3LGiLOCDxJiY745/knJWqwZRfSlwx/r/pmhU
vaf6U+aOJf4zeD+Nc8h/d1wYMmtQtYjk6e44esyi1lOJ6lu5O8QhjXuG9KN6
uMAdT7YNTLZyI1a4Q+v1mTtqC6m+rnSH/eW0VZe3UH3d4I5P3oOHvhxN9XWH
O7yaxnsuKGL1twd+RJVbvOlD9TvXA8tXLHDwLNxP/nsgpTxv5CLng+S/B6yW
7Qn9+2gP+e8BC5MV7+4YUD+C74FHd3ZG2pyh/oLAAx9+zSkw7k36Mg/06jfq
SN/J1K9I8kBHxbVBOXbUr0j3QH3saaF6J/Uj5B4Yn6/79PewbeS/B0riTu5V
NqD+iMIDqnXN2wa4kLzSA6WX+p+e+4b6KQ0emLZt3NR/ataT/93zqXoUj9iT
Qv57ImdQvPqlV9S/4Xpizc0ZqVIuyXmeeKWpZGqqvZL890RHnyvckY+pvwNP
zB/RI9iwhvT5nkj/5OmjHBNP/nvi8l+4Hcyl/pfME7tSPPXKjNaS/56YYtYU
EbmZ5k/3hJvjsOXqpyPIf0/wV1YP+XRwGfnviaW/Lu9wTllF/nviyvaxXy3e
zyf/PeGh+32OoVBI/nuiLzd31fCkBPLfEy6vd34dZRxL/nsh+bWA12FqR/57
4e6fxWvWHqH5eF6wLfZq7DWLxut7QUNj7e/7T8Tkvxc4Xa/kvxTm5L8XTtzT
KRevjiH/vbDD+mqs/0CyJ/NCinjlst/zbcl/L+y+YNwVbBlO/nth1PN/S10G
U/9Q7oVEXUGaZGwU+d/NR89OPZvPJ/+751/aWXZbRO+30guX14VsDT2USP57
4Upom0hNIiH/vVC0+kevY3k0H8cbjfnOba27qN/I9Uai/PQ/K3eRvzxvbDsx
pnPtqEjy3xtdmr+rR9ZSPxDeaP8w8EfARloPfG/8tGp5xLm+nPz3xsHLvvnO
VTSfzBs7Ry2qe/J0A/nvjT3NQ28tmkTrJ90bWe2BzXOu0/xyb5w4mLjI8y7J
C7yh/qhq2UXPdPLfG3mj9G5VLaX5Kr1xP2RX/j070m/wxvu0xLFXOmg/dHhj
x9Xjw8cE0n7h+CAmbvO21Vq0n7g+OF3du27abdLn+eBm2+lSwSraj/o+qD+w
5UZnBe1f+CBVeWZh2lKaj++DGtX9bQN7Z5D/PkiIPzzrnJztfx/Ifi4XO3/e
Sf774FNSYqe+Lemn++Bw9gMHnfV0/si7+cKKN+NvUz+ywAenonnO6dU0n8IH
JqcDtq1oP0D++4Anz1674To7/3zgv7n901w9knf4YOa5i19Td9F5xvEFLyzc
+u16Oh+5vnh5oP3rX11ini9CnVS+vf9G8+n74tG8E5weenQ+wxdlT8VvOC10
HvN9gYp1JcpLSS7wxQiXyduXFBPLfLF10A0vtRjWr/SF/at1Nz23EKf7wvz1
0KnTzek+kPtiY4+XUVtU6b4o8MWnB5XaBmp03yh8sfmLMBgdJK/0RdfMXg1+
FcQNvtDKzlYESOk+6/DF3umtzc5fWX/SD9/Wvkww2k3zcf0wfELRzIl/2P3n
hz7iq/9en073rb4faiwTMj8J6L5Et37PWNPOVrpP+X7Yq+k5WeJO96/AD4uO
VE8cM5Pub5kfvuQOj/zTQvMl+eGw/rzr5a9JP90PkTmhb3V3svvfD3qTlaNu
+BMX+GFDofzJza80n8IPQ/2np33rTflFpR/Gv9ML+3KUuMEPS+dO1LZUJu7w
w7LzcQXtbqz/6Y+Dn4b0vbSU5T/+8Gh9v9ojlOU//vjx367yU29JX98fa/Xf
labdZf1Of5y8NzpZew3lR3x//L6WXyX+RXKBP34Nb752SJXkMn8UuQ3++Hk8
5WNJ/nD5EW5da0ac7o82mxlHxp4hfbk/5hab2W4Sk7zAH7ImvXM1xiy/9MdP
5UuJRy6TvNIf1mckfT/nsHzPH0qHNTpaj5N+hz92i763ej9h/c8ARF1xHzfc
mZgbgIov9uM+3mP5aABc/6T0L5VTvqofgATfNovPdsQIwIMluv0zlYn5AfA5
8KF4ZCvLlwPQp9psx3hzyqdlAbh2v+GXyyGWPwegc0XWxfgvxOkBmH6qc9f2
CtKXB+CpwiH45BriggCk7kjMOz+e9VMDMP6LtP1LK3FlADz4c0oanCn/bwjA
z+t/mrSKSN4RgCNe8k0e9Sz/D0R0RPLW2zmkzw3EhI0dg8YmsHokEEW9ypYM
+0P6+oFI5pUXDNjL+q2BGDCvcqP1YKpX+IEI37QscDQbLwgEX/n5iK7FxLJA
9DG3XzfRjNVP3fMNeXcteBRxeiA8Vjtk7djM6plANHhHvrz0D8kLAlFTW5W9
dS2rrwIxYt+qUTWs/1sZCInWr7oet5n/gagau3Hz7QTS7wjEnVTnH7cTWf84
CA6i6Y98HjH/gzDL7Iy6yThWDwbB73RIPOc8sX4QvoqH+Q82YvVZEFIeJXwt
r6fx/CD8HNs0rd8akguCYJKs3Pf6TmJZEHIWjrl7vYn1t4Pwyrp83L9c5n8Q
BrRnuQ84yurJIEiGJduqz2L+ByE1qDn8ziVW3wUhMNFD39yF5JVB6DVyeMaL
ZFZvBuFP5tGDnrdIvyMIbUNGKj8sY/VnMByHZ2wMjCJ9bjCWVZ97XqLK/O8+
WqN2/payeOoHY7Gd85dn31n8g2Fj7COMs2HxD0a+kdF5xTYW/2CIa3oNKo1k
8Q9G1Uy5URqbPykYTwojL81/RvL0bt4hqOmazOIfjMjWSbwbbD0UdM9fuO/I
RxZvRTCuH5NcVXNn8Q/G0mM2jQP6sfgHY6/xbW979ntDRzC0OFGmFWz9ckJw
/n7hZL9XtL65IVj7+lTj6vFs/YdA6WunoeAY8z8EpZkb6wdoMv9D0NqxaEH2
GRrPD0HMuDMGOqz+FoSgJWrPut9zmf8hmPqzoqcil9XvIfjt6ravTzlxegh6
T10bOnUB8z8EqvmKzOPf2P4PgaP/hZbXS9n+D0GQTu+PIwcw/0Nw4WXtMIUt
8z8ED4Km99BNZ/s/BG7GmrrfGHNC8TNLxcfIjK3/ULxTmrWw8wvrB4QicXCg
fUcg2/+h0ODdnT79KesPhGJ/XI25ixVb/6FQG7Z1T4/dJBeEInVAwOqEGHb+
heLD24kadVPZ+g/FZsGBK+l9WfxD8fQcLHpGsPMvFLkGN8PyK5n/obj+qGJf
ohuLfyhy+rwq/VXCzr9QGDwJu/hyFet3hGK3yrnOVCMW/1DE+tmXNpuz+Atw
9UnX2E/bSV9ZgKrcfkWvn7D1IEBma//G3XGkry5Afkjp2u9KbH0IsHJk8kW9
HNLXEeCA7LKogs/WiwANaksSzeOJTQS4802tcm8Ne38CrO7krPv7i9hBgK3W
fYN2ZLP32S3PNnb6xObzE4Bv6GTTyM5vgQBvgqaq/WTrJUKAbxvqH/y4wNab
AKonB17vPYI4ToB6k6o0pZHs/Qsw40JlbB47D1IEmC3hrW1KY/EQoPCyC29z
H+IMAdaouBVpJrH1KcD3LxO2qTcQ5wqgyLVeGTuH7VcBBNrcaPFE4mIBNFNG
eqfeY/ET4EWyqbb+aeLbAqzoHeYnYr//VQrQYnh6k8l84loBNmmlaC59zta3
AEky4XV79n5aBIidVzlAia2nDgHG8EvCgtn77BJgXnqA+cndLP5CZGxQVuvB
fr9UFqIt26Q4fxTbD0Jc3rXon9adLP5C8Hu6eCgNZvEXwmS4cNzyoyz+QmT2
436UM3/1hdCt3DipvzGLvxD7fH8MPcP2A4R43Kx6PXMli78Qsb1eGRxl64Ev
xEeNS497MbmfEH6feBqd71l+IYSyi+viRH+SRwjx1v/Ig7gott+EaLmRDdcj
pB8nxNPRz4KMVrP8Q4i5w9pl/X4TpwhRcs+pB38Ty0eEaPUsvLKwivKhDCGO
WqtN2cBj/b7u97Wu6Md9B+JcIc5YqreURZJ+gRD65Z/RNoq4WIgx197vS8tg
+Vu3fg+uo1Sf+LYQSX3RX82D5XNCDDm84vvoZOJaIfa4dI06eZ7ld0I0iszK
59ZRvtjS7c+/nxyS/Yg7uuWJVb65d4m7hLCXGRhox7P+Xxj0U1WsBsVSvqoc
hh2P3XVdklk+HIbVAfG7PaqI1cPgaNXW3vSB8mFeGFZ23vseaUasEwatZTyl
+DyWL4dhNtc7eEw0sUkY7hv+SZJ5se8NwlCftUKROZ3YIQwDrFRiovcR88PQ
keZ+4FAa5ft+3c9j31btd5PqB0EYVE63juibSvVDRBiWPTyc4bqAWBaGIT/8
bR/1pnolLgwBy9Se5Uay7zHCUPRq3535USRP6Z5fMMVzYRfVP+ndz1sarpT1
iPp/GWEIvOp2RBxP9ZI8DGM7Pg/9fJY4NwwxT3rdb3Zg9Vr3859Mc0ibQ/Vd
cRjMx3nP2BRHckUYnm3ru9XNj+S3w5AiszuU/5bqxcowfNVryr3jT/VlbRi2
3RyZGf+XuCEMW7aYarrmUb3aEob08bdF7Q7UD+wIwzRXjT45O0ne1f0+Qlti
+rLvcTgiLHtRfGPrBqqPlUVY77thmeI5MVeEtdp725FI9a+6CJoXml3OVVO/
kCfCi7rkD6ecqR7XEWFj803TM11Ur+uLYDdF5XLZIWITEWr/3vuwxJL6CRBh
6LtBRzpaqB/gIMLbgcfPycupH8AXIXv6m2g7Ccn9RBBEh9hnGlN/QiDC+el+
qSGl1I+IEOFSkPa9Y2nUT5SJkDLGmFectYXiL4Jey468U4vp+60kEdpjtX3H
FdF8KSL0dPNPMcwh/XQRTl+qVm61oX5dhghti8+de3qe+i1yEYz++zil307q
n+SKsKlReWvcJ/oerUCE2AX7Xd8aUT+nWAQn/7pclV/Uj1SIUNhpfzlmA81/
WwTnoHUTvk+hflmlCH83bOeNUqJ+Vq0IUzWWVo77QN+nNYjg61DluUZK/cEW
EVqdiv6+b1pI8e9+PiO7t0vVqb/YJYJkXtdV9xnEHDH+TLTtuUJE/TFlMfrE
vFprkUX9Lq4YK/t9ra3PJvvqYkxbNcM3s2kRxV+MqpWCE067PCn+YuzLmHLw
ym763k5fDJXFjtpdhfR8JmJ4rc1S84kLoPiL8fHHp0N79odQ/MUoPZ7vfWsd
6fPFsBo1wnDjFLLnJ8Yiowz9uFnWFH8x3KJLdPW2yCj+Yvh9t9970Zf6r7Ju
+32f9U0MDKP4d9svbJ3WTz2I4i+G2sbGJ1/EpJ8iRlDS37jQB9S/TBcjoWbP
4DDfQIq/GJvnhdfeeEnfR8rFOOD7o84hkOKbK8agD07FFSEkLxCj6ZvGiCOh
8yj+Ysz+dlhxP570FWK0zd/VfGE09XNvi3Ez5sNmWzUaXymGwueHyso51E+s
FeMfpaSFnEnUb2wQI6dK9N+kazRfixiP+s5tnn6W3l+HGMekgsD6eaTfJYbM
qbO6SEjrlxOOviczB2ofI/vK4UhaN1qCU7S+uOHo53h1/xk+7Qf1cBRlNe4/
1ETfM/LC0TC6LP3KD1q/OuH466Oyq38J6euHY9L73hMrmml/mYRjSMKNps3P
af8hHL1zvhbutyd9h3DYvoq6m2VB+5cfjh19jfyrt9P+9gvHg+ROt193qP8p
CIfWTLPtszJJPyIcDquiagb+pd8jZOEoiTWcsVKdzo+47vEJmxVZfVj/MRwr
AnQeJ06k3ytSwrHzmX8+dz1xejjc5Mb+OXtpvoxwfA19t3D0OZLLw2GefvlQ
7jU6L3PDwY1ambJwE52PBeGYdnbvtn/u0vlXHI7CEdxv9UF0nirCcYA3t9Cx
F53Ht8NxJcm3/bcO9Scru8cvfFb29jLp14ZDI8YqX+M7necN4fhdpr8oHuz8
737++UHpdRns/A/Hz+vLQ9Pq6T7pCkf90UZr2Tv2faUEyfXcWuOdJFeWYE9Y
iOYgP5JzJeiVNPWefx7dT+oSDPz27WQPb2KeBGs4jYUXY6lfqSOBQpszR2MR
3W/6Ejx78L2u7SHdnyYSGJw+lfUqh+SQwNBbJnjZh+QOEgxJ3Os80ZvuX74E
TrO5wphgYj8JVHTr26IC6b4VSKDZ/E3z+G+SR0hQamH5WGMf3ecyCfym6W9y
yqb7Pk4C4dW8Ot0cdv9LsH2AZeLUx5RPpEggl6W0exqwfmT38xYVHemlQfIM
CYLis1eohJJcLkF7Wr+udSqUr+RKsDDerv5mEPu9UoK1G34NTuASF0vQ9tog
ctx60ldI0DurRFxbQ3xbgmkVL4Zb2xNXSlDyKCz8RDFxrQSuPU3jRx9k/U0J
vlc9LMvzI27pfn65PydGhfU7JZjBtdpxhOVrXRIc3lS68Iof+35Tihk6ig3p
ZSRXloKjfeGQ/r8s/5NixJZxJ5d/YPmfFH2uGF1YdI31R6V4MXdlMy+AWEcK
1+kZ3LeD2e/FUuwoOjz59zZiEyne1ngs1+1DDCl6TlYaXDuC2EGKkQesly34
wvqpUpRMPvSo+jmxnxSfvx8xHRRCLJCiQ5Y1aMQn4ggpYpN/mGqvpPxYJkWC
bvAg5+8kj5Mi6mcPlfSX7PtUKe5bHinT/Y/0U6QwCMrud4txuhS7sveeClEn
zpBCJ2yF7Pka9nt7tzxgzfrR7Pf4XCkWqpgY8rNYv1aKpl0qQ/oIiYulUEvW
mjxJg+X/3e/D2+r+YyOW/0vRFm2r6b6F5f9SnPz35dTLD1j+L8Wt9Yb5X5ey
7wmkaB3/2fFaH+IWKVI5zUfas0m/Q4rAlcnv0pxI3iVFdObiUS+Ws/5vBCpb
yk/PqiB95Qi8ERWvH/uOmBsBtd4vdqTuIn31CEw8midtsWD94QjU/3E8m8Pq
EZ0IZNebjp3E+sn6Edgk8145MZPYJAKHzqxLesvmRwTiBjze9/YlsUME7vFu
Ly9n9vgRePBXf11gALFfBP55u72lB+t3CyIQPXLVbJ8ZJI+IwJiRSQl1h4ll
EThgsSivoQdxXARM3DJ9TrP3mRQB64rvA85sJHlKRHc9PHQjN4Y4PQKtHUvP
zLzF4h+Bfn5bLBaNI7k8AqP+RuZ/P8fiH4HXazULbMez+q/7/RlLHljVsPhH
wPTS2omT01n8u9//gT7vDx1i8Y+AxUAB9/NHFv8I2HueycgxJHltBH5dG7ks
5RmLf3e81Gxlsxez+EegveJwZfQ/rN8fgdyEd0oN7Pm6IvDdrfRvyU8W/7l4
crLumbLrOcv/A1afb5Y=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
sswBiRUG/Y/nk+scEBHpcuRHHJkzB0ZjZ9gnrmX956D33l5eF7ew/j1+8rwq
QsL6z8HSqKBagT3rPwebbvWZ+daL9Z+DKJ/pY1/OZf3n4MGvxJRtaqz/HAiT
TGN5I1h/RwgKHjppTGD9HeFt/HWDVT/W3xEbwuYMbX/9lvo7wuPOBUXNz+Q4
Ryw4uy/uZyM5xxEOSZzU5hKyzBGVtU4j5p0i1zkiaUvNs6mlZI4Tng9Vv7Xo
MFnDCR+OfT8ZvpoMJ9j9e1DtdBzr7wTBqqHvHiaw/k6QX+/R+TGI9XfC0ZLg
9AP2rL8Tqo1l6fE+rL8T9u1s37PflvV3hpLfs+DE0ay/M+z2TVIrHMP6O+PQ
F6+Y3PGsvzO+Xp/z4MGfOurvjAyDjp9a78k5zlDX+GZW8ZUsc8aC+9MtFzSQ
65zxUrVm0+MrZI4LMh817TG8RNZwQaFB7sjnN8lwQUbgfku1PDKv5/MK7UXC
ZNbfBfFnbk1XSmf9XcCtPJczOJX1d4FBmfvw61LW3wWLTz08rs9n/efC1kDy
53sE6z8XJhmxsWN9Wf+52L5h2u46E9Z/Lsrt30yutWb958J4bdeBYbas/1xM
7fd6xlt11n8uRJMnKliNYP3n4t26ZqeGCay/Kw6FBZf/Hsb6u6J+wft2+49v
qL8rCsbeMR/YSea54nVVZMHHPqy/K45ryc+5dJfWc1xhnPFJyfwsWeaKmu6I
W8eekutcER5g7z/zCpnjhuh5Z3eWridruGH1pP0WW1JZfzdwPBN3R55g/d3w
+dWETf1XkOPcMFC6amytH+vvBtXID6+72fFkbriqOmrp1ZWsvxteRyo/TrZi
/d1RGp812sKN9XfHIFef+p9RrL87Gmad/DzVkfV3h3zt0m2Ouqy/Owb3brWS
+LL+7ljV/CsjO5j1d8fPZyf3lE9k/d0x+0SMXo0R68/FK51rY8oFZEUuLkqM
z++1ZefDxd3I/QrpGmRDLgzufwhY6MnOj4uNMze5hYaTuVyoHCit6JjGzpeL
2Zv2qP2wJEdyMfVxQr5WDDt/LgpnG+ySisipXATbfTlTO5vNw0WIZmeKzxJy
Phd/KnY41aSz+bgQX1018pmEXMHFkC2brndK2bxc/Pv69LmTZ8itXNQenDuu
+yib3wNjgowdT65h83tgnu/G4Rz2+9HwwMjMIzUb3rH5PXDea/6NuRfZ/B4Q
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
r70p/+QQ+nsHZx4+LH/jcPnoVav/A/gMqxU=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.759448756630712*^9, {3.759448812336836*^9, 3.759448836175653*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 200.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.759443305642541*^9, 3.75944449625698*^9, 3.7594452478616343`*^9, 
   3.759448756659677*^9, {3.759448812366129*^9, 3.759448836201221*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[CapitalOmega]1", ",", "\[CapitalOmega]2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.45"}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", "+", 
          RowBox[{"phi", "/", "t"}]}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.051"}], ";", 
      RowBox[{"SimulationTime", "=", "4"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", "[", "82", "]"}], "/.", "MSEvolution"}], ")"}]}], ",",
         "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"4.11", "/", "2"}], "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"4.11", "/", "2"}], "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"4.11", "/", "2"}], "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", 
               RowBox[{"4.11", "/", "2"}], "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{{3.759443378572589*^9, 3.759443444129274*^9}, {
  3.759443474517812*^9, 3.759443495503895*^9}, {3.7594435316805*^9, 
  3.759443545379024*^9}, {3.759443629160747*^9, 3.7594436292616577`*^9}, {
  3.759443784845179*^9, 3.759443811900432*^9}, {3.759443862942761*^9, 
  3.759444066104019*^9}, {3.759444215670992*^9, 3.759444217745722*^9}, {
  3.759444470477887*^9, 3.7594444761642723`*^9}, {3.7594449729454517`*^9, 
  3.759444974357606*^9}, {3.759445022581369*^9, 3.759445022684948*^9}, {
  3.759448581857798*^9, 3.759448582995681*^9}, {3.759448744540629*^9, 
  3.759448745515874*^9}, {3.759448815954616*^9, 3.759448834871789*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw1k31IU1EYxqf0gdIH6fyjkpWopdkfoZkircc+UAMp/EgENWFkEWTaMAX7
UCILK9GWBiqapJKWLmz9MaN5pmliOpu4nJpONzc3r3d3VkxEjfLuXl84XM65
9zzP8/5erp8kJzHLXSAQhG0s9rlZxfMRGmHIc9wRymONhZV4uqM5SvVKy++b
cMn35HH1kRkoRSWLCUo5qiSfdqWZLfz7j0hqdg/sGqNQU81WJ0IV1X+TfRn+
+y6k7HWO6YocoBPYk27EK0zSSIrh7/diVVETGH6Fhqe+MVfs2Y+COmVZh4+N
1xvAurTxScxZE4LTy3ucQUP4+iBFZHkxxusPo1hRWe//7TOaNm7rG7UIXbPv
l13oJpzfCPwbil43r+lJmKtGEZaW3CKlTITz18GHOUc/fmsjX5xBGw4/8DNA
1Wcx0oTLo0fr9ySPlXgHSXQZjqPopu20W5+DcPkmkO3dc6L0DEOMhazgJJZn
/gzopinC5Z2CeFFcl6mxkFtsvNxpaEsrYmd7DYTLb4BSInVb3a4l3DRmEX2e
anPuyyNcP7OoaDi1tWFwGHGcAdp2jycuiww8TyMS9EupTQUWsG7p5SZY7e0y
+iEFrt85/M4QmD7M28G1Mwd55lBn1DUHz9+MKVnwGw8HgwNsHJEF7dmyyMuP
aHA8LKAuelW1JNtw1VXzGDi8JWFnvYmflxXrISPHwu/rwaoJ5VbE3212H61V
g+NlQ6Tnnl+4pyLLrJzTho7M1ojoZ2M8vwXIa0euO/xMxIVHTKH95bZ3GTor
z5PCvxvvD912o4krXskiglZzggezGJ4vDfVRkqeaZIhmiC0aXobJ2NlUO8/b
jkajt1f+ygJxtStkENdvDlhwmHn+DHokEk/1wWnikkt3wDaRH1PmruHnsYTN
/+M/ap+sFw==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw1k31IU1EYxqf0gdIH6fyjkpWopdkfoZkircc+UAMp/EgENWFkEWTaMAX7
UCILK9GWBiqapJKWLmz9MaN5pmliOpu4nJpONzc3r3d3VkxEjfLuXl84XM65
9zzP8/5erp8kJzHLXSAQhG0s9rlZxfMRGmHIc9wRymONhZV4uqM5SvVKy++b
cMn35HH1kRkoRSWLCUo5qiSfdqWZLfz7j0hqdg/sGqNQU81WJ0IV1X+TfRn+
+y6k7HWO6YocoBPYk27EK0zSSIrh7/diVVETGH6Fhqe+MVfs2Y+COmVZh4+N
1xvAurTxScxZE4LTy3ucQUP4+iBFZHkxxusPo1hRWe//7TOaNm7rG7UIXbPv
l13oJpzfCPwbil43r+lJmKtGEZaW3CKlTITz18GHOUc/fmsjX5xBGw4/8DNA
1Wcx0oTLo0fr9ySPlXgHSXQZjqPopu20W5+DcPkmkO3dc6L0DEOMhazgJJZn
/gzopinC5Z2CeFFcl6mxkFtsvNxpaEsrYmd7DYTLb4BSInVb3a4l3DRmEX2e
anPuyyNcP7OoaDi1tWFwGHGcAdp2jycuiww8TyMS9EupTQUWsG7p5SZY7e0y
+iEFrt85/M4QmD7M28G1Mwd55lBn1DUHz9+MKVnwGw8HgwNsHJEF7dmyyMuP
aHA8LKAuelW1JNtw1VXzGDi8JWFnvYmflxXrISPHwu/rwaoJ5VbE3212H61V
g+NlQ6Tnnl+4pyLLrJzTho7M1ojoZ2M8vwXIa0euO/xMxIVHTKH95bZ3GTor
z5PCvxvvD912o4krXskiglZzggezGJ4vDfVRkqeaZIhmiC0aXobJ2NlUO8/b
jkajt1f+ygJxtStkENdvDlhwmHn+DHokEk/1wWnikkt3wDaRH1PmruHnsYTN
/+M/ap+sFw==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-0.9927984511627556, 0.9843544195544307}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.759443430970475*^9, 3.759443447122446*^9}, 
   3.759443478249834*^9, {3.759443536411583*^9, 3.759443549008589*^9}, 
   3.759443632935082*^9, {3.759443794869265*^9, 3.7594438155490303`*^9}, {
   3.759443867972344*^9, 3.759443877674178*^9}, 3.759444195732122*^9, 
   3.759444348751457*^9, 3.759444578615399*^9, {3.7594449952047377`*^9, 
   3.759445027060755*^9}, 3.75944858556911*^9, 3.7594487614564543`*^9, {
   3.75944881859122*^9, 3.759448840491468*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example 2", "Section",
 CellChangeTimes->{{3.759445351223205*^9, 3.75944535246047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "5"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.759445356812018*^9, 3.759445364776965*^9}, {
  3.759446936906406*^9, 3.7594470001730556`*^9}, {3.7594477185756903`*^9, 
  3.7594477237519827`*^9}, {3.759448010546667*^9, 3.759448010995008*^9}, {
  3.759448719086033*^9, 3.759448722109838*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxd2Hc81X38//Hj2BycIUU7oaEl7fF+tRWKaEhDEUIDaV9CRKKSskrDLCmh
rGTvlb333nvPr+/X6/zx+/nnunXrnPt5nof3dT6f0/IrN09epVIolOWcFMr/
/vf///Fw/9+f++T//fMz8kj5/vWQZZS9m//vx5mESjSql2qt3Dv39+5EcfRI
hc582Dv3rE/kj0WEUJmXGj7em8RoK6e6nNPZq/t/P36kyHgz83OZCT7/K+F0
uBt2gWWxNzvrf38CSdIhSf/omGfo/SRuFWW+3p7O+PhgstFaqcgj7D36ocT9
wonuZeo++PxfZGlw+Is909/w9cLIjxOajrvzQ9CLIOu1qX3pmRHoRZLYCzQX
e8E49P6QYkdL7nXGSehFk52Fu7u1gtLRiyGiQo9619T+Qy+O8Nc0L7R6WYCP
jyMTxb+9jZJK0I8nHrxR6ygfKvH5CcQmp8RNRKwOXy+RfBcXXhJCGtFLIg16
b3a+KGxBL4mcOeCy1aeqA71kYvifgb+MXC96KYQ7elHq8sh+9FLJPzHrYyl2
Q+ilkVM+zL9H/EbRSyM7TgZUcc2fRC+dPEjpu2RbO4NeBmlg+uvu56KSOS+T
tGrd2nfzGBeeiyzC7cvckJvMQ+a8LHLlIpeTxX1+MudlE1VdyuVgfRqZ83KI
uE1J8hcXEfT+kf4r5aNaTxjo5ZKLm8+923qRhY/PJevkVnK4XZiHfi5JVZve
f/LJfHx+Hnl1VIeyJ08cXy+P2Gtckd15dBF6+WRlAwfX1q4l6OWTtGRbK+ea
Zejlk3j6A3FbrRXoFZBbKqMqD8cl0Ssg5/N1fz/4IYVeIZGsLhp8858MeoWE
6VpLrdFfjV4hUZTNjDAxXoteEanhz8m+4bYOvSJSeFJq4Uj1BvSKSWVS81UJ
yU3oFRO+A3tbAvTk0CsmV11XXE35uxm9ktn/394n8ElvQa+E+ETfe0P/vBW9
UmLHFRNnvmE7eqXk3aF9d4bzdqBXSuL1U24ufrYLvTIinaUi+f7UHvTKSIq7
45HF2wl65cSFs6Pezw3QKyddoSrm3Z/2oVdO7Bbsc9v7ez96FeSbl9DNvqID
6FUQ88bkE1c4D6FXSZY6HHvXtecwepVk6ybuBX02R9CrJBeTu6szKxTQqyLP
652Fqskx9KqIURd3kl2IInrV5ISA6c718sroVZOzJV8k5ZKPo1dNliQ+D5iU
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxdmnk8Ve/39s0cDs6g0EQpKUlSiYZ7pY8iGikpRSqkQhHNqMhYhmSoJFMp
mWWeUkhKJaLBUCLzcMzj4/uz9j/P+cfL6+z93te5zn32vte11kIzm30nebi4
uBbycnH97+///woN+d/rEpFJqbmdsOzr5pn/PUj1jreprsv6N6v+3yuAqG3X
bLaIFyAz74eQdsn2g3UKEmSGEk6+cVeESDrJkJnjI4ni4eX8hXHyxPz/XjHk
0PO66KofK/H8WCIgx5HaKr+GfCj/3yuOXMn2CdF0UkdeIonyrDmZe5Hg8Ulk
SdZx4y20rchPIXLJ8mYrY7bh+alkm/wvS6GAHXi9V6RLbig/oWIX8jJITYSs
NHf8XuRlkhNXHsd3zjVAXjbx7ZFY65l0AHk55J/3e5nX1kbIyyPqMUUtTvrG
yCsg1vqPiuNMTPD4AvI4We1EsM4x5BeSzF+yYSODZnj+a+KTmKTYmX4Cr1dE
xMeveZz0NkfeG1Jp3PbZwN4SeW/I7ZvpCXE2Vsh7Sx6e8FE+ev0M8oqJSNjU
qFG4NfJKiMHPNWqlVrbIKyU+HSdjhu+cQ14pubzzfG9aznnkvSOeYZHPhzh2
yCsjWjRe2bQ1F5D3nvzNuHPo73UH5JWTO1LChk5fHJFXTkp8P9dfUr6EvA+k
T2bk3PvAy8j7SPa9TbO34r+KvArie7xl+87r15D3iQy+L+S24nLC4z8R5vZQ
tR9azsj/RGo+payUYLjg+Z+JGWf9++91Lni9z+RK5J0Py5JvIO8LSVTo/zzm
cRN5X4iQU6ijrvkt5H0hZXrPTdnbXZFXScJy9UV2rXBDXiUp+577eWDWbeR9
JU8dbzL5+dyR95VEX5RSdhh0R95X8iUr//TWTg/kVZFQt4om83+eyKsiGTSv
rO8tXsirJnf7bs4OafdGXjWxEamcesDxQV41yezLM/o1dQd530iWrs0tRSFf
5H0jpqIS1138fZFXQyRZps6dC/yQV0NSO4VMz7z0Q14NSRaW7R3d5I+8WjKs
lUW//8kfebVkgd+uKxonA5D3nYz3aHGaxgKQ953smtsg73/vHvK+k7C0h582
Kwci7weZl5//oOV9IPJ+EF73uws9rO4j7yeh7yxolxEJQt5PctTe2PPZyyDk
/SSiPgqeMvuCkfeLbLmyx9xlOBh5v8juoh3uZeEhyKsjn2ljO4d2hCKvjpyv
4JnLNxSKvDpSvZm2vTPqAfLqSeLy9VIJBg+RV09+HHQt0hJ4hLwGwscv7Pgy
8xEe30CO82eb/LYOQ34DeZeUGtqw5DGe30AOWgyrRtU9xus1kHyjkoB7euHI
ayQnSo+9SnsejrxGYqc3cjGF9gR5jSSYfabM69QT5DWS9aXafhvLniCvkbQL
iL0sUoxA3m/yKkpwdMGdCOT9JsGpd3fq9UYg7zdJCfxnr7M/Enm/yfFHBmsl
siKR95vId9TtfC4Thbw/RH6O1UWaWxTy/hCb1LUWyp1RyPtDjj/IfSO9Pxp5
f0ioVJdqcW408v6Q/qDne1cvjUFeE0l7r5162C8GeU3kaF1sGxmPQV4TsbTW
vfrT4inymsg13sDWlV+fIq+J/Cx/FbdmyzPk/SWdESLq7fHPkPeXnDr7e3T3
/Fjk/SUGjABDU+9Y5P0lQPv8Uno8Fnl/SYjuvgOXzjxHXjPhhBpEXv31HHnN
pGboUoPs7hfIayaeXxv2HS98gbxmMnzmlfqWNXHIayZOAYyK9KdxyGshB44M
b3sz9yXyWkhBxN6K474vkddCeMQn7wbwxyOvhdgbX47bcyUeeS1E5bv0f8G9
8cj7R4zOONlaWCYg7x+pvRSplV2fgLx/5GjcilOlionI+0f+Vhb59VkkIu8f
+dkq/eRQVCLyWkm4H116qiERea3ktWLDxbr5SchrJd322zYPHUpCXisR1pZs
2R6chLxWwrkzv/tjVRLy2oi6YUaFJzsZeW1EdtHk1KW9ychrIx5p64ZC7yYj
r40czpin1PEhGXltRHCXruQZegry2sn8xwrLpHVTkNdORAJvfO31SEFeOxn/
ZebTX5qCvHZyMSutREYoFXntZG74oYFz21OR10Eu6Cm7tbqlIq+DxG8ca71V
nIq8DtLaMxKgKZCGvA7C72s9KLstDXkdpMg4y2WBWxryOskKT88o9eI05HWS
cKWKCluBV8jrJEFRHo6vt71CXifxMgMxpduvkNdJND8W8CWUvEJeF7lh+bts
m1A68rqIdRpPVZ92OvK6yFUJkZAkj3TkdZHsGF0vl7J05HURZbbLgmMiGcjr
JskjE2936WUgr5sESLmNavtkIK+brE8sXrPrYwbyusmVU53txuKZyOsmbkEV
gXZ7MpHXQ+TaZr3w9cucOV66h3z8WPYs+Usm8nuIcNOocA07a+Z8vR4yZ98+
vSmDLLxeD1l1I69Z/n7WDM+5h4x9/3Vw57csvH4P0d10T+6cVPYML6WH2C1x
LfY1ykY9PeQmL7vgeWj2DK+5h4jeFb+b+yMb9fUSpxrr9JJ5Oaivl0w1Xswt
OZKD+nqJpdX2xTlhOaivlyw1bjgbWZ+D+nrJmoJ9C67K5qK+6fPbb+T+dywX
9fUSbnb8l7EnuaivlxTS+Jse/85Ffb2kcpaYo7JcHurrJfr5VyVij+ehvj6i
te/PNpGoPNTXR14I9wQZNOWhvj7Stea0783F+aivj6SqL8+8fyIf9fWRAxtJ
mHdUPurrI80DIuXHm/JRXx+xps+yEGUVoL4+EnQyT7JGpQD19ZFjXO2b/PYW
oL4+Yjr6RHb9uQLUxyEKYnkC5b4FqI9DFnA+rNNLRJ4qh+Q4Kw6lVyBPj0P+
S+28I9aNPHMOqUlN0totVoj6OGR+d6PZJaVC1MchySXpSt56haiPQ/Ywz3a6
nS5EfRwS/HC01dKzEPVxyLIIl9Mqscjj6icNzrSs+hLkSfcT3Ui3+XbNyFPt
J0/GFOra+F6jvn6SwHn13za516ivn3x/KBx6a8tr1NdPTgnyLY02eY36+klG
QsCap9deo75+cveSJN3zAfLK+8nzJvMhvUzkNfeTzjon6K5GHtcAKXp/W8W2
H3nSA8Tf85dEBbMI9Q2Q0ZJra0WUi1DfAPEwrq+T0ytCfQPEZ0mesdSpItQ3
QOYyZcdaXItQ3wBZNOAo4B+BvJQBMmYlUT4rH3nlA0Qs8n3I+R/Iax4g6/S+
5z4dQh7XIPnObHNLZb9BfYOkOu7Yf8HKb1DfILHYXbhtn+4b1DdIXMtl6hvN
36C+QXJnfK7JthtvUN8gecJqk3J6hLyQQbKZNmDilYG8lEHiS2twt6pEXvkg
iaoa/De3C3nNg0RNUak6TOgt6hsix1J1n/Yteov6hohNS33q7E1vUd8Qadkc
cVDY8C3qGyLF50Q6y23for4hwp9t9OGIJ/Kch0in9uwDOZHICxkisn2df1ty
kJcyRLoPhvysr0Je+RAxUHsRGtmFvOZpnsNjl9WCxahvmGzY19HvJVOM+oZJ
ron8oQS1YtQ3TN4cqZN8uLsY9Q2TW7mBgXstilHfMBFTHtlQcR15zsMk0t7Y
QeI+8kKGif7pX0myL5GXMkyy5oQac4qQVz5MlDem/vX6jrzmYfLi0GBuaw+l
b4SI6sga0QVLUN8IIYKHVnDmlaC+EbLcufblo9UlqG+E6Av0GIhol6C+EWLw
SfvBhiMlqG+EuFhunVA6j7yQEXLnju1woxvyUkbIskeXRQwfIK98hGwLOPTK
OwF5zSOE7/TIlRtFyOMaJTl7jzWqfaP0jZKCqtwzcW2UvlHSLnwkun6C0jdK
5kdvkvjMKEV9o2Sbg4OWs1wp6hslu/8mFXesLUV9o2SOXr78bO1S1DdKrks9
HBgzKkV9o+RI5pW3j04jr3mULM7Zrjh2FXlcY8Rsh0ou+w7ypMdI/eMAVksY
8lTHSGzg7Df2CcjTm/6/b+xMTj6lb4ycehf2PLeC0jdGHFw85l6sp/SNEbnF
F0zauyh9Y2TH2QhJyUlK3xjZ4DjSMkp/h/rGSBJn4ML9ue9Q3ziR0tlq2brs
HeobJ8trC805au9Q3zjxd1k+N1XrHeobJ+yzPiqK+sgzHyc2prqGB02R5zxO
6JtHNTacRV7IONFUcfCuvIS8lHGi7JY8IeuGvPJxwn3OW1POn9I3ThIUZBjf
H1H6Jsiyt4XztGIpfRPE3EZV9kQqpW+CWPeafF2XT+mbIM8YJf057yh9E0RF
cfnmwUpK3wTZrnzX+vcvSt8EqbwarOXSQumbIGU3uV2/9FD6JsjF4q7uqhFK
3wSZuv1phxdPGeqbJGs2WR3uEy5DfZOkTOZwqzC7DPVNksnuNXlf55Shvkly
ifdf1O5FZahvksRZ5py6sgx5zpMkc9Lyu+Eq5IVMEs2+wuKmdchLmSRmfSe5
Fm1CXvkkuSh68JD4VuQ1T5KddlyxcdqUvimi+M7q9chOSt8UWVM4cH1wH6Vv
iuh8eJoRYUjpmyLrRUd2TB6m9E0RvfpqFs2U0jdFguat7H59nNI3RQy/6hUq
WlD6pq83OuvMVitK3xTJq+uopJ2l9E2RujUldddtKH1ccKmBcSHiHB5P5wIT
XUcXeztKLxe4DKr39Nvj+fJc8HFUPkHOgdLPBTqJP15yOSIPuOCoX2WdlyP1
ebggbP+ddW8dkWfEBTXn5F/EOVKfjwuiv+1bo+mIPDsuEGoSLnd1oD4vF9y/
tdnG8QLyvLlg9uDLeZL21OfngvypvK8nziMvhgt2BXmHmNpSfnDB0qYpG2Fr
5BVwgX9GtonZacqf6ffN5py3tEReLRecj5dLnneS8osLni9+v8LpGPI4XKBb
v7Hv7hHKP27gSuiV2G1E+ccNNz5LxOYYUP5xA2/DzTc1uyn/uOH8tdNOkTso
/7jhG5/qwDwtyj9ueGOvslWLUP5xQ62Orfs8dco/blArTPsbsZryjxscEj2u
1yhS/nEDydh+KXcx5d+0vuu0yb3zKf+4ofBA0Lr7syj/uOHM/nu7PEUp/7hh
/v1o+5X8lH/T7/ek194Yx99vATd8fm+aeJtD/T65QU/z54pNbfh7ruWGtO0X
XSMbqN8rNzDcTnCyqvH3zeEG5axnSTfLqfsLD2hr/hufKEQenQf2/jjJXp5O
3W94gDcmfq1QHPLkeeC0REFMcDh1/+EBVyPVFz/uIQ94oOqBksdnd+p+xAOr
Q+3dL19FnhEPXNmwlFNtQ92feGD9HsNZLWbIs+MBtkbAxhf7qfsVD0Rk/k6X
00aeNw/4+A5/26NB3b94YM7zjO7VK5AXwwOxLQ/1y+ZT9zMeqGhzNZIUp/zj
gfOKWQfncFH+8YBKjtrzyh58ntTygN+LP8+2NlLPMx44Mo8vyeozPl84PDD8
W1lWp5B6vvHCFTv9/fWJ+Lyh80K8ulSSUjj1vOOF/+RLA9fcRZ48L4Bbp3n/
Ner5xwuJbXoeZ88gD3jhMQybhR+inoe8cPzEm8M+2sgz4oVGm86fa9ZRz0de
OCH5bU+QHPLseKFClyaXxqCel7xwttW84A71/PfmhedNj4IWt1H7D15ImPSX
cqzG/UUML6Sc3pTq9praj/DCUtOYn/rxuN8o4AUFkdP89SHU/oQXPIJaIxVc
kVfLC/XSvitVbKn9Ci+8r3o/b+QQ8ji8sMFsXouzFrV/4QMd3jHBd8rIo/OB
xBG7sc/S1H6GD1q4XTc/5EWePB/k2c3frdBJ7Q/54E2OTZxDNe7XgA/ErBk1
t/Op/SIflB2rMTB+hvtBIz5o1r4Z0+9L7R/54MSb+L17LyHPjg+CSt7/PH+M
2k/ygd9owScjHeR588HjYvt0ARVqf8kHGesj516WQl4MH/xKGHNPnaL2w3wQ
n1fu86oZ988FfHAQbmU5f6D2x3zQLWkezk7F/XQtH3jbOn+2CaX2y3ygaqXU
GOiMPA4fmAgzzd3Mqf09PxRlGw5v0UMenR8SL/ateqdC7ff5QUU7MHaeJPLk
+SFFW2hy4zhVn/CD8qqTH5Y3Yv0B/HClsiK9+S1Vr/AD00X+6LnnWI8YTf//
dqHZ+ztU/cIPvhs9LQfOI8+OH6JNa6R6DlD1DD9olejMzdFAnjc/aGwtlzq0
gKpv+EE25VZ2GTfyYvihJNQgSewvVY/xQ/b+xlj5Uqy3CvjB+dzl/ewXVH3G
D7qzZp+s8sF6rpYfApeGeZ21peo1fvDaHOD0cx/yOPzgNs9peNFaqn4TAE+P
2/FbJJFHF4CUHbcOqY9Q9aYAtD+RyBD+gfWpvADUPPByfZWD9ayqAFxWaHLZ
FIb1KgjAj+9RZ8KdqHpZAKaStwg0mCLPSACMMo6yJrZQ9bMAeFzZeGB4EfLs
BKCLGRr0hZeqpwVgiWLCQ+8mrOe9BUDRlq209C1V/wsAWafKjozG+j5GAA77
a8/hdqPyAAEYDuSIappjvV8gAL/dNbPMt1H5wPTnyxDrtJFHXq0ARI9LORwV
oPICAXDRub1EtRnzCo4AaBqUve96S+UbglAqX67uH435BV0Q6sp3aC5wpfIO
Qdg6MZQRcALzDHlBqPbMOMfZSuUfglAW8Ag2yyEPBMF1kd6oPQ+VhwhCe8f9
1lVFmMcYCYK0bBNd34XKbwQhMH6nyD6Sj/4JgtHvPD/lCcyHnAVhp+DhXZ1Z
eeifIEBdXI/3RcyLQgQhqVFdgbEO86UYQbD3MYm6yKHyKEGYrWohUZqI+VWB
INBknBS4rKl8ShAGXRf6LVLEPKtWEIS8Tkyu+of5V7MgHFNtl1GKxryMIwgl
c9nRUmY56J8QzF8XsmlgAeZndCGQaKkNfvMjG/0TAkM+p5PuwZjPyQvBnDG7
vZr7Mc9TFQKfWBXhfibmdSAEJhmKmx5/pPJCIXBRogVpeWEeaCQE1aPniv5t
p/JDITi6V/CsJ18W+icEISpcm1cUYj7pPH3+Q6OGimuYX3oLgZhjy7iDBuaV
IUIg6752g9wQ5p8xQpCbEbSlOgXz0RQhSAq2e+Vni/lpgRAwfF4QQ6UM9E8I
DlyMdlFow/y1VghORGjICD7FfLZZCDZHq2f1H8f8liMER57sGuiTTUf/aHCO
W/I8bx3mv3QanMi2/bT0AebD0jTI9D0ff+wg5sfyNKgQX/k8edYr9I8GZXO6
zOZVYv4MNHi69LBDuC/m03o02JO12Bl2YX5tRIOaKY05kyJp6B8N1mkcbvj+
DvNvOxr84x60rrmN+bgzDZImTpsOa2F+7k2DP/V9ehv5UtE/GkytL3wf/Rrz
9xgaXPd96bjOBfP5lOnrRfG2dxPM7wtoINxZlFs5SeX7NDie/dj1Ty7m/7U0
SHi4t1b2GvYHmmngr/BA32cj9g84NHh43ctn+TjVXxAGo6i8+aPZ2H+gC8Or
7xnBE1ewPyEtDGXRDffXbcT+hbwwqLfqpsSMU/0NYdhvEe+2Oxf7HyAMf+zl
n66+jv0RPWGIMf8Uu5dg/8RIGAZDepfFcyWif8LQ0W/iFnAL+y92wmB5hDVf
TygB/ROG+dEh/3l4Y//GWxgimWYrdjGp/o4w9M5aywi7j/2fGGGw2pWrcHUe
9odShGHDHYnY9gjsHxUIw40Oq/zuZVR/afr8k6kRXknYf6oVhjNCr/xeq2N/
qlkYZhkJFQe9xv4VRxhI+AU7MT2qvyUC2k3lZcuqsf9FF4Ffey7ROk2xPyYt
AgWzLKwPdzxD/0Sg4Yff6osXqf6aCKzv7XDfxo/9NxCBk6v3R7/zx/6cnggs
UVtQwrcQ+3dGIqC5R3X5WALV35vmzQG+RIL9PzsR6F3AdJX/FI3+icC+uTGN
x45h/9BbBCr/9Rmc5EShfyLwk82WWOOG/ccYEfD28t/5WRr7kykisDJ+pSLE
R6J/IkDkE3/d3Er1N0XAyMgy8HFtBPonAiucfl+5b4v90WYRcHZ4k3JaCPun
HBFo+9NkvOjJE/SPDnWOIw9yNbD/SqdD5MNkX6gKR//oUOh5Vz/eNhz9o8PA
69EBmijV36VDN38Q46XBY/SPDqFtrmtX+oWhf3RokxI9+6jiEfpHhwj2liwu
xiP0jw5hemaso/seon90IE6zLLPvP0D/6GCufCVqwS/sb3vTwTa6KtxnSSj6
R4e8bYbyYrYh6B8dvHUmeqJzsJ+eQgfrYY+0QyLB6B8dHh0Ik15tTPXf6RBg
w05WSbiP/tFhvVM7jwnfffRv+vj65Bv5h7Hfz6FDnF5p6MG0e+ifKCgVqEQq
M3E+gC4KDse2/9axCUD/RGHS8I93XIU/+icKCZ6epcarqXkEUaj7VBZrEuSH
/onCwcqvq7MmfdE/UahR3Kd/zhLnH4xE4Umbzmd27F30TxQ69lVeY7rhvISd
KPjYPJT5a+GD/onC3I0xvMG7vNE/UdBINtijquGF/onCrZAe/oLlnuifKJhu
/sO9XRbnOVJE4d7hfWOf5rijf6IwXnXLxXzObfRPFEoXxIyJy+D8SK0oFK2U
jqtScEX/RCHItzg1X+0W+icKXo33xKt1b6J/YvDi3BYf2ZM30D8xOFr7rCrm
Js63SIvBRs95drZPndE/MZgtGRxOe+KE/onBidiVxtUTOE8DYiDbq7tt/8mr
6J8YZE8/e+99u4z+iUHx7Xj+JwaX0D8xmOtwXNzjpyP6JwYKe+WuG9ngvI+z
GNx2kZkvI3oB/RODtoPXXJrT7NA/MVi38oVizqnz6J8YCPp468UpnEP/xKZ/
EauuuP61Qf/EoETfmTbb9yz6JwaLpa+rLtx7Gv0TgzOPtqfmKpxC/8SAZrcg
lFvSAv0TA41oPU2eeSfRP3GoPPXY5avacfRPHC6ns4/7WOH8lbQ4zOpSkrlp
aYL+iUN29/sx2nJj9E8cTO0i/lZJG6F/4nD8XWcPfT3Of+mJg0uTR3XVLX30
TxxKTt1WOsC1F/0Th9Tdu3RP7N+J/onD+4yWjdJCOuifODAWPy1kSmuhf+Kg
sPPyxD33LeifOBSt+/nu48uN6J84JK6qVQ0UUkP/xCGPE2U7vnA1+icOZKHp
DcaAIvonDuWbp/wvLFmC/olDx9e2uZpxMujf9PUXSWzkZkihf+KQe8ZbftKR
jf4xADIPDy9sZs4cL8CASy/ln2gZs9FPBvSWbtdR/Ck5cz6bAXe0lng6Wcig
vwz4aGS8f2xq8QxPlgHOtDuaTysV0W8GvG3e2PVecvUMbwUDPKKTp3YI4+dT
ZUBItsevxMKNMzz16fdDrv1c9XgLfh8MYB2YrW0KWjO8bQw4O2xlEPifDn4/
DPhCX/hm7AX6r8+AP0ecGSYbcL7PiAHKZResbn3Rn+GZMkBx97KFNx8cwO+P
ATYvDDnW941meGcY0BewdP2hIlwfdgxofCH9UJFpOsO7xIDmMW2NnNpj+P0y
oIb+y8Mi+/gMz40BwkpXjq99dRK/bwb4lntOrCjD9RvAALXD7jH7h07h98+A
UM+gI682nZnhhTPgZuZyi/2PrHE9MEBDeGLJPC/bGV7ctD7nC0Krv1K/r+nv
T8S0tmsZ/h4zGRDbI1Vm4G2P64UBF4sDX54cuzDDK2aA1xmrkUWO1PweAww3
WXb5TF2c4VVO8/jmRz69h/eLWgbUFW36Yrvu6gyvgQFTuf7fWpuu4fpiwCIN
+1RWuNMMr4MBvH8ehAykOON6Y4DZEPOUehjez0YY4Na44ODXO9S8HhPcbRKL
37rivJ4AEzSSFrfSb+K8Hp0JVb2NFc/ccF6PzYSx54XGwb54v5Vmgv3ukS3f
w3FeT5YJh921ec6m47yePBNUi937d331wPXHBMMuac3rQ564/pjgydZvGpb1
xvXHhFVHuaNz9uDzA5hQIF2+oGT6+TKz/phww3VZ7qyiu7j+mBC4eO2vLzd8
cf0xwe5BCkNjqR+uPyZMJv9szvuIzzdTJgSXf04zuYTPQ3MmxK0bzpqzNADX
HxNmP/s+t+tbAK4/JoR5+zd/87qH648J9+xqmNWagbj+pv3KvnK1eTwQ1x8T
vH1YXQJZ93H9MeFD8wXJtZeDcP0x4WTKXn/rTdR8HRPkOCsaE3lxvi6cCReO
tdiMlFP7CSakjgff1wrB/UccE2J0uIL8LXG+LoUJVm+EH/7SwPm6TCZ4ZfRk
yjFwvq6ACdmdHX3H/uF+p5gJy5y71QKLcH9UzoTOfyHHs548xvXHBLrK7PkW
W3D/VcsEwRj3NPMUnK9rmPbXIWznd3mcp2tmglOAoHLBA9y/dUx/viNng2ez
qP0eE3473sj94YH7wxEmWER4lYny4n6SiwXX5O1bn1+LxPXHgo3Z1zSSRnB/
SWfBa6cFlQsccT/KZsFEvG1e7wDuX6VZYChry6/ggPtdWRZ8Cv8Snz8UjeuP
BYmv+dJfXY7B9ccC3ba/4iJT1LwcC4KiuyOybuH+Wp0FcafXHSkSofbjLPjq
Kr5U7h7u37ex4E+0bd23+bjf12NB4Do+w/pnsbj+WHB9UaKp2trnuP6mP1+w
z+dfr7FeMGUB+7zIxU97qfk3Fqwl1lKiv1/g+mNBS+yps352cbj+WLAlPH/N
YYGXuP5YoGEkv8oy9CWuPxYsNeaReqUcj+uPBekDb0M1i6l6iQUHKt1NRI5i
fRXAAqGww7PFhhJw/bFAIIquFqWN9Vs4Czj7O/mN72N9FsOCNXuctV42YT0X
x4I9mtKv76sm4fpjQV6tyk7Jm1gvZrLAWXxzmlIl1pcF0+/Tmopq5LAeLWbB
wAuNzZIXqPqVBTzpwu0txVifVrIga9nSezrSOH9Wy4I5tgunNM5g/dvAAj7L
bx1Z+VgvN7Ng4ROHOaVsrK87pr+/89w6xyyxHuewoNVlq7prLtbbIyx4/PPc
09Vsat6MDfzpy3UtT2E9L8CGXTBZu7gA6386G+qDFUUtJDEvYLNB6LzUAyUb
Kl9gA1GMWetIzZvJsuG8mqGnpizmF/JsUPl0c9udSzhPtoINV15+kTKqpObR
2HBDsunFEyWcF1Nnw23T/mhzd8xLgA2W1yxjY/5gvrKNDdU7DhiZEsxj9NhA
P7bf0P8Bzovps+HC9yzYMIz5jBEbfgU8ijfaj/NhpmxIlBFW60im8h82lD0d
s+ll4DzYGTac+Durw8IG8yU7NmyGn+q7PmIedYkN1neK/0QoYX7lzIZZxzvO
nfDBvMuNDWrXrlv5dWKe5c0GLenS3Qq7ME8LYINB3aLwpQnU/BcblBOXV/sw
MK8LZ4OXysgpo/NUHseG3516n9y/Yn4XN613tsTlOWqY96WwQVXX+Ss9FPPB
TDbULtPTOTqB81wFbNhz4/xjt1WYPxZPXy+tT8TbjJrfmj4/80VI3j3MIyvZ
UCVk5jC/BPPLWjaMrJH4+HQE88kGNjDMqsqMV1D5KBvuek3c22CCeWoHG/6L
VNff6o/5K2dav/7B5XZUXjvChoFD+zaVDVPzVxKwKNHj5fYVr8n/Ayx3wjE=

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxdmnk8Vev7/ve2zTb2QKWRCg1OA41Kz42OkuFUpFRUyGkuKaVUFKlwohnJ
FE3IXBKZ53nMFBEh8zaPP5+ve/3z2/94ee213uta17qevZ7nvh85s/N7j/PR
aDQ5Bo32v7///8fL838fW2J8xuZpqmPVtpn/75O8qME/jxxHtqn83+cxaXOc
3ZkdzSQz33uSO9HeKkV3ZMgMxY+Il2xOute1hMwcH0h+2Cb110UqEcv/+wST
/Q+Weu11VsHz3xH3QXtalv1mkp/3v08IMeKt4RYvBuSFkx49hbGKdk08PoJo
tqgcM56zE/lRxKH6B33zB108P5oEBYQ3vCvejdeLJUFhRic17A2Q95nw/gtU
23vMCHlxRGN2KKRdMkZePIn4Xt3q8OUw8r6SA3HuHzfLHEVeIrE7xflOuo4h
L4l8rbZQ1ao1x+OTyI3Knf3bmo4jP5ncj8qMn8c4geenkBLzZ6/zt5zC66US
uudm0b/dziAvjawQfFFjNXQOeWnk/r3BNLmEC8hLJ54Hxy3LRC8iL4Oc1d46
kmlhjbxM4ixUd4WXcwl5WSQmP9BJT80GeVlkXQj3dl78FeRlk0SFpC+WWrbI
yyGO9GOrOHXXkJdLdo4nu6TdskNeHhF3d7W1XnUTeXnk+0uapVTbLeTlk7pR
a+WCSnvkFRBaUZ4qLdkBeYUkbUlYztzw28grIgcMvq6fE3QHjy8i7+dXvO7z
dUR+EXl98972135OeH4xWeE8rKH45i5er5isW3Al8HKUM/JKSCR3Prmffg95
JWQb2Th4qO4+8krIxrsG4b9HHyCvlCiEDaxQWOiKvFKy0ObWCGuHG/LKiGyp
3Cf/y/8hr4xMli8VK3n3EHll5Pevurh8K3fklRO3+fcCrrM9kFdOIqOVz3ZH
eSCvgiw15RTKGz9CXgVRtFc/OY/+GHkVJHVTY2beh8fIqySXfr6w3WD8BHmV
pGufuvQ+kafI+05MdzMWyn99irzvZEfgXL5Aq2fI+07an3utyV3+HHlVZMsB
F1mvX8+RV0XsErzXMwNeIK+axC/UT1xg5om8apKTfEcgd6kX8qrJtUKuGavd
C3k1RPnrBpn2CG/k1ZBdwaKHDO1eIq+WuL569beOtg/yasn+ESda7pxXyJv+
/sXb8ML2V8irIxd1dlvu++aLvDqySd9eQknHD3k/SMSK5z/bPvkh7wc5fr5T
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxV13c41X/8//FzjGM7S0VD02qXVBSvZ9HwiSSVqCRKpCFKS6VhtDSkrWSV
0UASFZkZ2VnZe2/HHl/f73m+f9f188/ncn2O+3m4eb1fMdfi1M4jAjQaba4g
jfa///3/P7rIi+f/+3GBaJsnKDdPdOLnt0jsOg8//8nPVf/vw5NwA3pOr/x/
//858UxwefJovJPwOz7EMr5eJnmMer0fuZMe2Z022kms/u8jkByc8Wbl2xHq
64OIr6lBxX/DnSTzz/9+hJJTzBOjKYNU7zNZYvbOa8oA9fowYpf4MmI1j+pH
kJjOOvOFvdTXfyFOT9lBXV3U+30lasmez251UL1vJOVg6XpeK9WLJqpfFPxV
m6ned/IjJaBcp4Hq/SBd+tZDyrVUL5b4GaiIVlVSvV/EXevtjGNl1Ot/kZdL
Tm/+XUz148kjWuDLgb/U1ycQmdlzlo3kUO+XSA4sjJmS94fqJRFR7aTDTqlU
L4kULZi3cjiR6iUTzqKIx9viqF4K8RrK8rOLoXq/yYotU87ZRFK9VHLUXlZp
9Weql0qi1zIzC4OpXhp5cF7x+rYAqpdODLxNzB+/oXoZ5O9ex+thz6neH3J4
qrygnyfV+0MeTbMfs75H9TLJ3+i79wTdqF4WKdZ1z7Z3pnrZpDBMs/LrBaqX
Q3Q/25Vk21OvzyHb1bJKf9pS/RyS3e8jeO0w9fW5pGd15Qm5A9T75ZJWl2Nr
3XZTvTwy8Vriero+1csjdx6wbGo3Ub08wj39n0SeJtXLJ3/ST7s9UaN6+WTH
F6Wx5Uuo3l9ybpbHnbcLqN5f8qNM0bBpBtX7SzRc9pwQ5lK9AjLb35Y2JEb1
CkjFHY2FiTSqV0iO+1SJHR7owF4hEftlElfa3oG9QjJz+z3bhXUd2CsiMrYD
S3f868BeEclM3qmin9OBvWKyKHPVpbkpVK+YbJ8xZ3Pmd6pXTORX6oTsCKN6
JaTXmp0REkj1SkjJ9+yUipdU7x9J8I/51fyA6v0jLXpj//64UL1/5KFt0mr3
i1SvlMS6j/JmnKJ6pURG022duyXVKyO01dKLMo2pXhnZ1GrR2LKN6pWRed9X
eFYTqldOch9P2xmmSvXKiZuf/1ZTJapXQXRkm16WTad6FcRYeY7dWmmqV0Fi
Q5gtJ+hUr5KMLD2+7HJfO/YqCTOu2MqqsR17VSRvqXyUyr92fH0VGZgetfn3
n3bsVxHO8t71JI76+iri+4md8DCsHd+vikTlLJqI9aN61eSLhPGs315Ur5p8
/c3bFOxG9arJJ99dftYXqF41oa0IMRewpXrV5OOs1qBz+6leDRFftiAkVZ/q
1RD1xhkPeVpUr4ZM3XX11vgyqldDJsIrE2rnUL0aMmxgezyATfVqiZR6QqS2
ANWrJe+umGXH9rRhr5YkVb1omVrbhr1acqgnWF0vvw17tcQv36zTLLENe3XE
gadBDCLasFdH1B++PjDLj+rVEYUD8VfTHlG9OkITfl9qdJ3q1ZFPy0Te/zhN
9eqJ9ROzmUKHqF49edc3YbdwB9WrJ4eaJSqXEapXTy6bW/vILKV6k69fGNFZ
PJPqNZB19gailyWoXgOJ+2atSB9uxV4DcTLqdD3S1Iq9BmJgd+9ocGEr9hrI
nW0PGDlJrdhrJK0/aX6F4a3YayTvIwKcYn2oXiNZE0776+ZB9RqJ13WFlpVO
VK+R7BT6SPtlQ/WaiLpPk8kyY6rXREJmF629pkP1mki9yrzqyBVUr4mM/Pv6
JFOe6jWR168nvFMlqF4zUU7jrn832IK9ZmKr8OWrTX0L9prJwJjULlZeC/aa
ScigtunL2BbsNZMX3+ksiZAW7LWQkDtPfhx8SvVaiH5M27vnN6heC4k4WycX
fYrqtZDrReqmsfuo3uTn1zXDgrZQvVaiw/t39JIq1Wsl+Qp2v1VnU71WMq70
XTZfnOq1kv2qV/xN+pux10rutLO//K5uxl4bAbbFw1mZzdhrI4W2R1z3fWvG
Xhv5eohZds2vGXttpGnZq9IHHlSvjcjWFWe5X6B67WT506m0Y4epXjsxKaBF
rzKgeu0k0HL3xmZ1qtdO0lbo1rstoHrt5PjtV60sJtXrIKs1Ld7cHGrCXgcp
q9uhW1vbhL0Ocm124IolWU3Y6yAhL5TeWnxrwl4H2e08t/qGbxP2OolRw0+N
h3epXidZknuGd9uR6nUSB9HMvafNqV4n2TDvb6jOf1Svk1z24WgIr6J6XSRf
a+3WiFn4erkucu3O/VkGIlS/i3R8SKSVdDXyv16vi5jRBNUN/zXi+3WRs20Z
Ut8SG/k95y7ivnhustSHRnz/LvIra7v/zieN/F5EF3kuO7vb9Sr2/ky+3qW0
O9gaew2Tv4d+im2LNcQerZuYbzVWTNTAnlw3cf9PpTZqPvZUu0nTvzXW3pLU
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
Ds/f5M/HtWjFf7an8fzJQIJLecopjj35H5mm7sk=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 5.}, {0, 1.}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 5.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, ImageSize -> {\
20, 10}, PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.759446942161215*^9, 3.759446968411899*^9}, 
   3.7594470030119267`*^9, 3.759447727345098*^9, 3.7594480150362663`*^9, 
   3.7594487259254227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
           "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
    "]"}], ",", "0", ",", "True"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MSEvolution", "=", 
  RowBox[{"expoteSolution", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.759445290122073*^9, 3.759445314075569*^9}, 
   3.7594453767032623`*^9, {3.759445574572*^9, 3.7594455900894403`*^9}, {
   3.759446202161208*^9, 3.7594462144829903`*^9}, {3.759446643202779*^9, 
   3.759446643352573*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
2F/btZ2s4GLriRcTgpVf/c91XCxqdzY5O5rc2v3587eeTQS5k4sVvasKD0eR
OX543XQqSbqUrOEHh57mc2t2kPX9MP3jgG/PSsimfvA9OoFzo4ncPTu++Ewf
lPmdzPVD+psN/zgMf03j94NBy3Itjh05wQ/1sfMd/+GT5X7YPygxrSGdnOWH
Ii1LS5UT5Dw/HNdU+iNvIBf5Ye6aBYGuv8kKP+ysKV3PH/+Gxu+H+fHlGU3+
5FY/PN05/djJ5eROPyS7the+PEHm+EPLoyJtcTNZwx+WyvNjxP3baPz+uOzI
zzoIsqk/1Fa2ZhkuIMMfhy4q/XxdQOb6wzD11vG7T8k8fxjZz7x8e/BbGr8/
jAefLbvlTZb7Y5a48djZdHKWP+b1Lw6crSDn+SMxJs3p/g9ykT+itqRZ1E19
R+P3R4qGq7pDIrnOH1iZEdH7BLnVH6fOq3h/bSN3+uPKhdXWX8a00/gD4FaU
uPsJj6wRAE+VS7tX7ybrB2DjlAal241k0wCohzU+ytR8T+MPwIuYQ5Z7vMjc
AJh1ubx7uprMC8AbXb6fyRVyQgD8drm/FHwmywPQwyV3AH/CvzT+ANSnmRQp
8ch5ATAYKnlrkU0uCgD/38mb71aSFQH4aMHpUdJFrgvAnzj9xEaDDzT+AAzP
+nNdy5fcGYD8210Pw5LJnEBIVO+7b9lP1gjEFK/wgmNVZP1A3BvdLzCnnWwa
CM5jXg7UO2j8gTAZ0ZyYZ0LmBsJo/qnKox5kXiA64mo1AkTkhEDYrB61cesy
sjwQTU/+cGRbyFmB3fdvu8vV+eS8QFy90nvV2fPkokAcaxm9fNx1siIQhQkZ
Y0fVk+sCceFf9ymHHpFbA3FIWZ55+hm5MxDKfyysvV6TOUGIrvoavriNrBGE
z0ZrVW2Y9YPwJdMsZucrsmkQhFeuh+1pZeMPwv01CU89H7LxB6HUI6LgZC0b
fxAsHA84115j4w9CW2Zm35JiNv4gjNoSrL6AjTcrCH7/XDIakM3GH4THR+L/
zUll4+/+fGervYNlbPxB4K/2Mdvty8YfBJ8WPT+rqWz8Qfjz65bndx02/iBY
qSWM6vjB8h+MhSsDFho/ZvkPhpKz2bayiyz/wQj9+zLxwjaW/2D8q/5w78R5
ZASj7T99bzMvMre7/fsf7sMxZF4wDu2KHmj5i+ZnQjCWz9HawrtHlgfD3KYq
Zs4RNv+DETM0KDduKZv/wXivbNqQ4sPmfzDCImdMOKvP5n8wZsflDx/7ia6n
uu54jhlr26+SW4ORoON4cGQ2uTMYP32XPfpHQOaE4H3a9+smZmSNEKQatGhO
70HWD4GvH0Radez6D8HQdT9sGveSEYKpvISmHXFkbgj0B3ZpLbAl80LgZ5Tg
mqJGTgjBnUuDtG4/ovuRPASO3RfhokJyVggUgcebs5aQ87rjvVWVTfYkF3XH
y3sQIhrB7n8h+BndnocPdH+sC0GmUWj2fXb/bA3BsQvPK4y3kjtDUJWmU+8n
I3NCoZmnKfafQdYIxZiLal/MB5H1Q3E206Hq51t2/w9F0OacyuMV7P4fil9W
OqvcdrL7fygk/d9Nvjmf3f9DkdYYn23qQ04IheCUttYCI7I8FDnbU26u60PO
CsW5J1/WxT6n51FeKGD+tb+KglwUCl6mUMl/L1kRirKKg77TUtjzr/v76B7U
OxjJnn+hyO85yGqVLXv+hWKKao+xlSPY8y8Mby1+LPRiz1ONMKxOmqyq9JSs
H4aarHUeD6+QTcOwZsu2ZSf3kREGN5lVj3g5mRuGsF4/Cjns+c4Lw69f4zt8
HdjzPwwtuy97uI5iz/8wqNx7F1nLYc//MCx79zK4qYXWE3lhePV7YQ/uFXJR
9+dN1x07fjdZEQYtJ6t0bjJb/4Qh1hGOFUFs/ROGafozLiZMYeufMAizk56H
9mPrn3DIThsYLHpN6ymNcGTpp2ZXlZP1w3H00bNbPmx9ZhqOs2c/62gksPVf
OBR/55lrurH1XzjmJZckROuy9V845ltulHH+o/VjQji+qrwbqlTN1q/hKFtx
cc3y3eSscCxaOqw+NYGtZ8MxbNWOGm1nclE4OhYn9OFps/VtOB5XViTGv6P1
cl04DnN3B0VcZuvtcKyYnPnBPovcGY40U2PpNCFbf0dgX9XnpWHTyBoRePDH
VlapwtbjEeg5SbRtSzO9D5hGoEaZs6rlNHs/iIBShpr8RjqZ291+uS5dEMne
VyJwOerugLtm5ITuz7/a/7mBKnt/iYDRpOJPyc/pfScrAkn1IrP2S+x9KgL7
995YtmEbuSgCBoKimEXz2PtVBK5ujx9e6kuui0DQqkWiOZPY+1YEOpa3zN/V
n9wZAdGhEWvPtrL3v0jUpwyVyI6QNSJxoSstPi6RvQ9GQlU2a2wj2y8yjcTn
CnWN8wPY/kgkamtdJ2q/pPdVbiR6dM0T9GL7E7xIxJ45qSbfTk6IREL6zFkb
F7H350hEmJxxNQkjZ0ViT0HR7AB79j4didNjL/r/YPsBRZGIEzcfGTSEvV9H
wiapUW0T20+ri0S0S9+toT/YflskitNM8sM+kju73Thg4eJ2MicKL/XdP+a2
kTWioGu+w203s34Unncuvs9nf28aBf2rKcdvdJIRhS23n+cc/kbmRqHqVfPm
xz3Z+KOQoPXljt0ANv4ohOg2TS/QZeOPwrJphnM6JrLxR2G/Tuy09v83/ij4
fxmzel4AG38UNB6c6IiQsfFHYaPFW3lqKht/FPITl3BP57D9hii43DM2vX2C
3BmFmNn7XI/cYPsP0ei7uPzgcLZ/qBGNfqtanvT8wfYjopH4vT7dUovlPxpf
/EIfbJ3E8h8NRWuPn1/cydxobPsYf9dayPYroqFasX2gXQo5IRr/OHXotWxj
+xfR+Lf0p95vtr+XFY0VprmXk6rZfkY0Qnve95jM5mtRNJ6oxazq/ZXtb0TD
jjMpJFaJzf9oeGleOnNDg83/aAzZ7hCSNozN/2h0ancmZo1m+w8x+P02MPo5
29/QiMHU+uAjs8zZfkQMAiLs1XSsyaYxeLTn0+oWe7Y/EYOCdt2QM2w/hBuD
VE2Z1kp3tl8Sg2nCz2ecPckJMchI2rHvnRfbP4mB9WrubZk3u/5jINJ8e+ss
a8+LQfupVS8UM9n1HwPD/Jvj0t3Y9R+DyY97b/jhyMbf/X1Ly1WHzGDjj4Fy
QfHR+qls/DEIbqzfPX4iGz8PTgcehw1iv0dfHt6mjMrfrM1+Dx46Tl04lqdK
1uEBdZNU5N/Y/YGHJ06btj5rIhvyUBLWrDfnPJsvPPxNKv40ZjPZioeQNwdd
h81i84eHZifneWHs/uLOwz7d/Lz/NNh84sH4he2XX2x+hvLQ69J/putPsuuL
B9OmyTdKk8kyHl4b1ccfYvuRCTzk1vaxk6qQF/MwefNe3dF32f49D3cmFDd/
zyJn8KCYl3K4vz85i4ctSUo90geSc7vHu6G38+paOg/I42H9ft1tZuvJBTxo
p+lHnHMjF/HwbIPAdEpPcgkP7w1SY2ovsfMJHo6eDHpwbgG5moeTfx/uVZpI
ruMhY0bI47aXdN7RxEPNtl5uqbvJrTwElwUbtQWQ23gYssSv00WN3MnD7et3
hhdfpfOWb92fH3eonbuEnb/w4Zo02sPMjNyXj9IrqWvnvqPzHA0+Eg+/CR5x
kKzDR062doZHJFmfj2TOA9U+Q8iGfFTpv6gLq6PzI1M+9i9RvuK7jmzFR6yu
dWG7Kztf4kNqGBs0uRfZnY/6j7GpQxV0XsXl48yn4qf5KeRQPl5L+gfdsSHz
+MjcOrd99Q86D5PxsXPXl0HXLpIT+Bj4eXXpwmTyYj6eRvbZsn46O1/jI6y8
1KzrO53HZfBxvHbKwu2l5Cw+dCKle2KWknP5yHX/VW5hS87jo7/6zO+/f9H5
XwEfhl/uNO2/TC7iwzLO+IBSKrmEj4l2WqWaduw8kY88qe2H47/p/LG6+/f8
vvlpWRm5jo/AvpPdJywlN/Exutcm8XN2ntnKR9aqb5Z3P9N5Zxsf767GP3xy
mtzZ/fvcvl7+J5b8jQ/HxoM/x41n56cCPClJS/BspfPWvgJYmA/4LcolawhQ
MKvh4Fxfso4A5+4f3Dm7D1lfgMHD/iiKFtB5r6EAf5wvS1Ke0HmwqQBpxuMM
vB3JVgLc1LQysjpM58kQoFfA6KuRfcnuApTVON5/KqPzaK4Aamd/bXhTRefX
oQJc+Xi6+dBYMk8AmUVcu3sanX/LBJBPDVqs8pTOyxMEGDYuCHrTyYsFmLZ8
u8/1bHa+3v39Hk90s/pA5/EZAiC3o7LYnZwlwNJlM7OXHqTz/FwBtvkvHFP1
h87/8wTYvb6tsiGcXCCAR5ORZcsFqh8oEmDz9K63I4eQSwToKB5SWbOQ1SMI
sOmjgVizkeoVqgUId55gaGhNrhPgwRj1hdP2Ub1DkwCVV/b8EimRWwXos33N
yMa5VC/RJkDEUc3S0AtUX9EpQJ6x45m/2VR/8U2Anz9zO+oXUn0GRwhDddu2
z5FUv9FXiPSwXaHrPKjeQ0OIdRlDNxXaUD2IjhDnhv1nKzGnehF9IU4Olz+/
aUr1JIZChDuVlbaaU72JqRAfJe32x2ypHsVKiO1ZF7QmeFK9CoRoVvmYGxVD
9S3uQpzeXHjOLpnqX7hCXLn5ZmF1LtXHhArRdedoftdlqp/hCSFcI5pV1kb1
NjIhPmuM3DR0KDlBiOMV03n99p6k/Atxv7Sn708tqt+RCxHWfjP227ZjlH8h
7JYa2P0dTfU/WUJMfnNwp3oZ1QvlCuHb9d/EMTFHKP/d3/9DzCMXdaovKhBi
6o+MzUk3qB6pSIjf1RUN5ZkHKf9CHPN793NsONUvKYR4fqei5bQF1TdVC1H/
YPjx2cOo/qlOiOrSyyknhlB9VJMQS6sVXl39qX6qVYjAt5LkE7pUX9UmxNqK
pW8aHKn+qlMI44DdvJhUqs/6JoS3W7qyZR2r3xLhlap8na1VNuVfhGAz21NO
56n+S0OEozPCPmjNzKL8i5D+dciGhtcbKP8iVC2oTn4upHoyQxEUxycOy1Jd
S/kXIbZ9Wsffh1SPZiWC7qRxrVPrV1H+RZj+OctyREca5V+EL08KR8jNqL6N
K0JS8ovVEy2WU/5FeJJ7c9gX92WUfxHuP5bniPOSKf8iaG+o6R1hSfV0CSLo
8Bc7Z6supPyLkLjkXEPBEKq/k4vQYVfwUzeU6vMyRKgNOyy+vG0u5V+ERWF7
1HMeUj1frgi7VOyqExJnU/5FGNNilsQJofq/AhE2zlp3j7NSQvkXYW6rNdfn
g4jyL0LWy5VLP22m+kFF9+9l9mzFNKmA8i+CRmey2xkpn/IvQsHsxqXRG6j+
sEmEwR2qX93zYyj/Ihh7fbdoEUVT/kXozUlelcyNovyL4Br0tyqQF0n5FyE7
MdJffWME5V+Mk33WbixtoHrHvmL0TnPXUZpC1hBDd5GHh8P+MMq/GF3FrwsW
jCXri5EuGSSIKw+l/Iux+LXyi6vzyKZiFNT9FD5yJluJsVJQ/b3Vlgwx2huc
Kq8Jye5inIEmV7eSzBUj4p/+paNmU7xQMda/3f8rVUjfjydG4I0QtxnlNB6Z
GJxk2YktG2j8CWIUtiUrX2yh32uxGK65xSaPhfT7ysUYPLwobLAJ5SNDjCHp
dZeU/cWUfzEqledHoEVK+Rdj+NRD2jbNLP9ipDUPtHQNiqf8i3H7aK8Lkwxp
PhV1/331lPCMOTTfSsSoUfl169Q3mo8KMfxN5/L97y+m/Itx6YvvsYt/llL+
xfj1Ye2pyhSa/01ihI3+bRp7lK6PVjE+2p7c96Gc6j/bxHjRpq4ztBddb51i
VEx4uyVkPtV/fhNjbojGrDsarP5TAtdHaa5hj+l67iuBNDPkmvssut41JMji
PYl+9YPuBzoSVC8ovaF6gO4X+hLsff/w6ujoHMq/BF9cT49LmbSd8i8Beh21
9NTcQfmXYH1s452jfXdR/iWonRI8+4DGHsq/BH2sZVdMjPZR/iV4Zu6etbOA
7oehEmy9s6zg7jW6X/Ik2NA0cNn+V3Q/lUmwo9MbcnW6/yZI4DMy7fBDa6oH
XSzB+Rc+jiPjWD2oBMfeVkZcO0j38wwJogxmODo9pft9lgTZtT8v6I2g50Gu
BL9tYPw8kp4XeRL03eCxXzeP6kMLJEidrvkk/hU9X4okeGi4oyTFhOpDSyRQ
hGzelWpNzyeFBNHK+ycEt5CrJVAOEfc5toqeb3USVOpcvi4zpudfkwS9PDBm
RR25VYJlJ8e2tC+i52Vbt12mFR/WpedppwTfM7hDiyvJ3ySw+K/TQj+W1Y9K
YTrg1Owvg+j53FeKiWrzxZ5lZA0pkk86JlqK6XmuI4Ven/Adjf3pea8vxUo3
padeF9nzX4qum6f4Zaye1FSKap2CFT4Daf1gJUXpnuEak8vJkOJUaGfg+nha
b7hLMelKC3e7Hq1HuFKoxg88lnaPHCpFy+XMb2lraP3Ck0J61GHXHTta38ik
0FxY1XfHN3KCFK/6TckbXkzrocVS+I2/8NnFmtWXStH6Fxc37SJnSBFio79k
9R9ylhQb50Tsg5DWW7lSDDLtOPmwhpwnRU2ddYXUjNZrBVL4Cg5lc/aQi6Qw
DhL1LVGh9V6JFDfdK6fmLWbrPynKZuz+Wv2WXC2FWo3Hb/soWi/WSXFxwItE
jfvkJincry5Tc/Kk9WarFPPOW95tvk5ukyL8eLLeS0dar3ZKMV5rzeHgq+Rv
UrR7fxCbO7P6Uxmcx88qXVhN7ivDJ/cPS4f40vpYQ4blcY5D+zWRdWQ4FaFa
MVNI62l9GTwWfMup7CQbyiCJ+vF0lpzW46Yy+Hxa722kSet1KxmUX7wz68wn
Q4Yr89XqClk9qrsMw29cWu98n63/Zdi0T+hWEEvvB6EylC2MylQo0/sETwaH
DT3rkw6RZd3ff1L6hRJHeh9JkKErWW9C/HPyYhkaL+RWVziw+tLueN6PYj9t
IWfIcDXzunf5S3KWDJqRdj30LOl9KVeGHK+BCX0zyXkyzMl5WDKvmVwgQ5yd
yDxoCr2fFcnA3e9rf2Q1uUSGgp2fnHiPWD2qDGeDuLFJk+l9sFqGLYe/5b9Y
Ra6T4bsiz3vXI3KTDEpzhpluZfWlrTI8PBZhci2d3CaDa3NP6xHN5E4Zqt8X
KW0xp/fdbzKoLEjvMyST1Y/OQsKMJ71zWx/Y/x8HX5m5
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
YdC+rR9ZvHIgLTeekNNJLOVgql/pIL3+7Pk5KE9uPfFqBHEmB4cv/arfPIn5
w8H86l+3788hlnHQp/mKtsf/4psDv0n8pr0LiOs4eJPx+KRtKltvDnRPN5j+
u5u4jYN87YSQq4Vs/T3x50H1mKxqYlVPbCgpqqp4wPbDE1WfUxUL/iM28kSG
dYn0ejvbH08873S4tOkvMccTR+rS5gj7sXj1RGTh4dAqJWKpJ7LqMrRGsPEU
T0jUlp5o7Gb+e+JwyMLanFbmvycuO1vwnzxh/nti9ZPrr8azeJN7Yo7h/Hyt
fcx/T9gFNuovjmb+e+K2/wfjm2z92jyxdPLjh10sXhS80LDbXHJPzvbfC7vG
lnebxLP998JJ3z+m6kwvGnlh25UI26U1TB96YdXJa9HJ4cQcLzwPdD415yvT
iz1/b/Cq87+WEUu9EBt00KnrL8ufXmhTQdPWZOJMLwxInrjZoI3yb64Xtu/5
E2cSRizzQsvSs0ZGVyl/y71Qo2s4pciAuM4LGTFJZ2zWUv5v9MKGxgTPUZVU
L9q8cDUrtFy8gPSkgjfuZmSuvzqE6ouqN/48CrTdLWP1yBtLrvzMhjvVKyNv
jPL9eWrSe6pv8MaJoqsvKtZQv4bjDYfW4xPCxlI95HojZuu7wAVVVD+l3nhW
vaTGPILqa4o3rAqbHqgNovqb6Q101FjPKKf6nOuNjj4Txhx/Sf0mmTfOJX0t
GxXC9KU3Xjg7lT/9QPqyzhsZS95zX2eSvmz0RlyJc0F/t53kvzcUDbbObtPd
Tv774GkD5+tYNeqPqfrg+/drqp3mm8l/HygeGDg6Yh3114x84Ko3ODZ/KOlN
+MBeMEI/+ynpIY4Pug3LVtQ2M73kA9Vx0cVfA5aR/z5YonV7rygygfz3wdq6
mMDl/WLJfx9cjf8ResB5Mfnvg4StzWFDd5L+lPlAI0m/q+Ejj/z3gXM/y4XR
eUHkvw96l23sm7bGm/z3Qeb7G9Ojf1K/ss0HHuIzG/yUSZ8q+ML96oaOQ9Ps
yH9frNtYeUE/nMZ1fOFx4tLws+lu5L8vXuon9Tt8m/4+fOGckP18QDXZ5/ji
d6K974mb9HxcX2gc5cyeq0vPL/VF3JPZO5uDI8l/XzyVjeuXP4v6oZm+qJed
nBdnuoT890VS19WYJztIj8p8cd5gxnvj4JXkvy9G3NXW9Z5L/dE6X9y7kxOU
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
KxtXnrf+P9rPb3w=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxV2nc81t//P/CrkrY0SEMuZZaQEhEetszLvuxrX5cGSoXmVWm8K6WtpUsT
FdJSGjQ+tNDWUNqalKg0fP1uPc8fv/c/79v9djrO9Xi9znm9zjmvoy9KDJJ2
5nA4+l04nP/3////vyanf/+vccrSOpa+5W8jud6pSe/uoqg25gan5Z++WgU3
Mzc53S3+lp/+jvmb07x5Jwp+PmH+4RTTU5F3/ibzbydOF/3VL0qZOehWZ5w/
5yBzZ7j+uLN5bSazGqblWX51SmFWx6EZho57opi7I8/C+UiVA3NPFOhsf/FM
l7k39KTnbnz59ZmsAdcTncP1a5k1kTdsvs+aYuZ+iBqT85u3mrk/3N4ds1wr
Yh4Af/vDV0S2zAPxuMer3E+9mbWw63X/FL/6T2RtfGtxX6IqZh6E0rS1iWrp
zDoYZCLx3RLCPBjxqpmjZxowD8GLBdsmH2v+SB6KFWf6Hkq+yDwMR0aGBdzI
ZNaFgda56ruxzMMxS++xaq8Zsx4CMuTH/No+kLngBI8qf1NBVnKxqfegL8rN
rFwffbvZjRkjZuX6+CDveb3NkpWPgGjehrff/76n8hFYsKSb1tibZM5IaJn5
nTm6g5WPxJGEv/9bOoWVG6CycPqAooms3AB7foiGOfZg5YZIzbstGP/wHZUb
wtwpxygrj8wxwuC4pDvT57JyIzTdKiwt8WHlxniwo/esebqs3BhVhi2HTjU2
ULkJ7vYRz064SFaaQFJ2drRqMys3xXvTZ4W+8azcFL+8vkUlO7DyUbCsrB47
oD8rH4X/BjQ+HvX2LZWPRtXNxBslZ8nK0TjkruZTuoGVm2H9sF5LLeNZuRks
ztTt0gYrH4PBXV+dnzqIlY/BvVJfU/PGN1Rujh52EtPoCrLSHLLa/9y+7Wbl
FvipkdW3JZWVWyB7zg15TBArt0TNl6IJZmZkWGJce2GxQJ39e0u0n9jbr63+
9T+XWSI98Vv191IyZyx4PkXBEVvJGItWc/+Jw5PJyrGw2fj5nXsAqz8W9kH6
n6pHs/pWcM7Knl3andW3Qv3iolPd3ryi+lZozHRMOnaJXGYF5f5Cp3M5ZM44
cLrPtxipJGMc/PvO6vcyltUfhzXapt3bHFj9DqelvJfosvrjsZ7TeFvvz0uq
Px7zr3usMKojK8fjrNPi/rPOkcvG427VWosu2WSONYZrOn65uZDVt8aWtpvm
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
g/L8S6fPv6h/JoUhsj113WMu9WdlGPKd+61QpFB/zwzDy+Lel8I6z6f8YRh+
ervVissLKX8Yjjw75Ty/nsZTWRimjZweI15A468mDN/eTTTcZEfjsz4Mi08s
GnxyMI3fpjDsVLy8PHcYjW9OOA6krn25w42N/3BEVy71q924hvKHY2aDpeaX
Xusof3jH+92pLOgBPU8QjradLjseOG6g/OEwvOlVEHuOnkeCcITsXnb9VPBm
yh+Ob+GnY3M7b6X84UhOfTq14Ro97zLDUZfc+5LeEXoeqsJh4Gtd+CKPnpdF
4Rjj7mleWJ5N+cNxtWn3xVlz6XlbEw413eTajzk5lD8coVdeaIY8oOdzUzj0
khdVHRmyj/LzEdftqvWHqfR81+TjV4FX0vtr7PnPR8Xpv/tm29D7wZIP4fLq
fS5H8yg/Hx9f31d8taH3C48PpxdNNv2uH6b8fJx0Tr6mPaWA8vNx2fhQyrie
9P5S8pGf3myd94qcyceKXhoavS/T+07Fh2z5Dt9m9j4s4mPXyrUvPq+j92UZ
HwvLrmxfOY/epzV8DH0zt5v7FHrf1vMxMU6j//4oeh838WHXsvaPUQC9rzkR
eNmo4+LlVkL5IzCv1Wjtcjt6v3MjED5B/lA4lr3/I1DVkOEbY0LzA0QgbcyG
5E56NH/gReDPpuLmJwNpfiGIwPqlPS4t70Hzj6QIbLBO3JL9m6yMwKSERLXq
TzRfyYzAlxzvG7IEms+oIoDpbZKCV+SiCJgqZt3ZH8HmPxF40fPQFfub5JoI
vBntVih1ovlTfQS6pQcs4BaRmyIwZ+O5v4l6NP/iRGK/v2xaXAZZMxL6I0x3
c9rI3EhY7+w7dZqU5nOWkfhzelt+eTUZkfBM2ZhgOJHmg7xIBPM/N5TnkAWR
6H2FO/t/PWg+mRSJJ/8bmCibQVZGYmj6lMEPa8mZkehnFprQ0esofyR2CK+8
4+aSiyKxUrFAlKTJ5reRaD7299yyNHJNJLZsPPls90tyfSRKZhz0+eNP8+Wm
SGwqird9XErmREFuq2cwexTNtzWj8LWP10C1HWw+HgXV2KfDz/eh+bplFDy8
H9bfW0JGFFz1Vb/S2si8KNw+d6by7iya/wuikDon4lqvr+SkKKzh+amcZrL1
QxSmi2bGr24hZ0ahq/GpX2rzaf2hisLv+6/Hne1K65WiKJyykSaVbiCXRWGR
aKdsaT9a79REwd9zT6J/FLk+Cn72BZ/OHCA3RSHluo7nxWYyJxpL1stORbrQ
ekszGpyRTW9SNrD1WDQsTn6e0vMV2TIakmHrZnNsaH3XMdsVnHri776azIuG
1U3x4Iv1bL0Yjbjd7z1ibGg9mRQN++5203+tJSujkSJxPbPwLTkzGiVv9e5W
gK1no7G1LJd3Yju5KLrjeeG8w6CFrW87/t6Un8lfAmg9XBONoPG+91rzyfXR
+Gy0a6GGOq23m6Kxur7mTj8hW3/HgKMbM+dhKVkzBgWSdB1HbVrPc2OwdYbI
WCeJbBmD3jYlq3GVjBgcsJPIMvVpv4AXg90Reqefp5IFMZj2rsq6bzU5KQaD
XcOufRtJ+xHKGPzu6bEkMYWcGYN7Jj+/xFxl+xkxuHBEZqoaTPsdRTG4bzbi
9yAFuSwGlzf81yXvOLkmBkHOby7atpPrY7Dv+rOTBZ6039IUg2PTLod9y2D7
L7E4ZT3IouUWWTMWi71uX8weQPs53FhMSuteWB9EtozFQEF20uF1bH8oFovq
7Ne1XCXzYhHYK87vaCe2XxuLEzfMHt6fQE6KxfGAi59i49n+bSw+HLrQ3W0b
OTMWj1ud1Zb8j+1nxWL0dmue9hdyUSzGh8auaddh+6uxsDu9+rKDI7kmFhvi
0/vdZvtl9R3uNvjBeSW5KRa9f5ya0S2b7b/FwcVDa3ZRCVkzDumLjk25UMP2
4+Kg9npWX/s3ZMs4HDm033D0T7Y/F4fn22IKs3rQ/h4vDvynp+5mDGL7hXFI
+rpSR3skOSkOy/7bHuhoxvYP4zCtsuX+wHHkzDh8GxL+X54N20+Mg5xv/62P
HbkoDo/CZ4pDmcviYHvJp3WTLbkmDrWbAs++HM/2G+Og/kRSEmlBboqDV4VX
+0ATtv8pwMJM6zwLPXJ3AYoWt328OpCsKcCZSXPb1Vg+HQG4PUqN1H6z6yNA
5qBbKz6y/UwTAb4qR5i/fsqulwA3o0VXtavJtgJcy5h34NB5dv0EmFXCE1Sz
/XQvAXzW9L5asJPMEyCol8f6FPb9gy9ASs5Zff5cth8qgEmlpcMi9j1EIUD/
x6euD40gJwmwPYAzP3oyOVWA5NzQJYl2bP+0I494uOMStp+6UoDdO/0ay/TI
mQKsVj8qCRtIzhJAb+/b/Kk92X6/AOLbWRXGncm5AjTxh0oLf7H+KkB4yq9d
Bmx/tkSAF/783APf2P6sAOtTJh8PZK4UYGTr4W2OreQaAcYUD76+pI1cK4Bx
elp3y06sfwvgvJ4vD2G/p0GAVa2evdu0WH8XIPvpei9jA/IPAbS+9I1+Op71
fyHe3dpzUNeL3F2I7VYfUp/FsPEghOWtaN4Q9j1ER4geV/VLyjLZ/RfiSJzd
znJ2/0yE0LpcMqb7TXb/hdjnoekz/zO7/0Lcsr2Q1Lk/218XYuDZAov5rL97
CRHQamtWGcvGkxD5H+1UF9l+O1+Iv7XD492L2fgSIvblzw0mT8mKjr/v0GCX
w/b7k4SoDxKNPD6MnCqExGHACJvx7PuBECP25hsMZN8DVwoxPHyMmrWEnCnE
t1tRVUvnk7OEuGFg0vB+E/veIITYdEFI6BFyrhDzLUsfFVwhF3X8vvX7vF7V
kUuE0Nl4YfvLFvZ9QgiZ4zCbnX3o+2elEHojNLTaDcg1QrjOy/j8l30vrRXi
/PGZkswgcr0QvVviDfIV5AYh7mWWq7svJDcJkZDmaRy9kfxDiJ0Tnvz8eJB9
fxWh/I1u6PdScncRMrr5z1tQTdYU4bipUDv9BVlHhBEFUeP6t5C5ImTPNrcc
242+H5uIcKstOfejDtlSBI9J4rCgUWRbEf7uKm2aYc++N4vw4EMrJ8aX7CXC
cIuRx4xiyDwRKoy89r2cTuaL4LPk7v68hWSBCH3aqlesW0dWiJA3yvP2YRU5
SYRIm8B1g4vJqSKM25zy59Ml9n284+8llMW43CevFGHXm7g95u/ImSKsFtS6
XftNzhJh2YXJ30b3o+/1KhFO7fRLiTci54pgaPw9euskcpEIBwKFnyqDySUi
VE9ufNZ3GjsPIIL9923R85eRK0VIPuB7epiKXCPCF7fGNX9KybUd5V3fzTJ9
SK4XYWjuxYl538kNIlgXcHYtHUTnG5pE6OU/dO05W/IPEWYVDOFERrHzD2L0
a8w2i1xE7i7G1PpuSef2kTXFCDScuXXxdbKOGKc9rpbvaSZzxfByUD8xVJfO
b5iIYTNLcPG1J9lSjN7qFcN/svMgtmLsOrKg0jeHnfcQo5vZhaf3q8leYkRb
xa9Y007mifHoZKOzyJLOo/DF6HLW5YaPiCwQw639yPRJm8kKMZ4MufHI6Co5
SYzG4ozZf/6QU8W4ufWiZfE4dp5GjPcLHC9NmEJeKUav9DFr5ueQM8VY3rNf
yayH5CwxrjfuN9Zk531UYlh0sVru5EPOFaP5sLF1czq5SAyV8k3w0AvkEjGs
IlKKD/4kl4mh2Jt4fcV4Op9UKUb4ba2y/ERyjRjWV5e4t+eTa8Vor7I7nPyG
XC+GPKi5vEWfzks1iDH3jM2bmTHkJjGcLstfPMgi/+j4/VekvfvdZeerJPB8
k6bdsy+d5+ouweVV4SiYTNaUIG7dDm7DUrKOBJuVZS9zzpG5EmhO+KJ5pZVs
IsEH5/v37CzovJmlBH+EqZUfZGRbCdruT3Qs20WGBOEXVvRW3SF7SWD5obZh
Znc6/8br+H0nvphyJ5H5EhgIp5mvSyALJFi6J4R7cDdZIcHPlDVxAdXkJAlS
dRZMTvxDTpXg7P0d+z6b0nk9pQT5Dvennwghr5SgMGOFy+EF5EwJngdrW5/d
R86SoPrlTavqq2SVBAclD+qrP5JzJbil2vkrrw+dPyySoJvr40neZuQSCY69
nVGc7UUuk6Be4/KRLSJyZce//zJAc+Rcco0Ev1qqXCasI9dKcN6kLuVyDrle
gqCZl/IuHSU3SFC7d1fV6AvkJgne20Q9bb1K/iGBxuzp37m32flIKZof3FDk
PiB3l2LpxCsVGY/ImlKM4v5pu8OsIwXPZaKzspbMlaKyV4Td9jtkEylCg6c9
G32DbCmFIG7VcueLZFspWlyMb747QYYU+5c92mjNzn96ScHxUD6x2ULmSbG+
88zSrkvJfCmu7Nwz+uR0skAKtfDEZmEYWSEFri2ZMZKdB02SYt5Ty1naI8ip
UlzwT+nM70pWSqG3qtRQ/S27/1KsnpRf7FTB7r8Uz/la6gYH2P2Xgn+y+Nbt
pez+S1HnWHBzqoDdfykWFgZkaEwiF0nhbrDc+JE2uUSKtkuegz41UX8sk0Ln
xMM6yTVypRQf+3l9jdlLrun4vVMTBM3zyLVSnI6bcM2RnRetl+LJXJk634zc
IEWCRbJ1qBq5SYos13qR9xMaXz86rneRomDycXYeVIbwtuCvojXk7jKcSdjN
2Scha8rw7NpQno4DWUeGzTGmvle1yFxZx3zybo/zn9n4l+Fs9fGDv9h5UksZ
7gSqei3LIdvKcFgqCIiaR4YMXq8HrFgQSvaSQRF6ccI7CzJPBi5XS397TzJf
hscj08pXvabnl6Dj791aP+J4GVkhQ138XL7GTnKSDIZ5DrGZKeRUGTZtblpt
GczOm8owsH3p3Ffm5JUybNd9OCOnJzlThqeNiqBo9rzNkqHvlJ4/elwkq2Qw
XTfCdPcucq4MFeoZHzTTyEUyuKk7p4WEkEs68lZtWRZnQS6TwbjbfBuTnuz5
L4OH85DY/a/o/VAjQ6cjVUlV58m1Mkirmop3ZJHrZZh1/fxE9ZnkBhnaTfe3
d2PvoyYZPi22bNoxkvxDhqZ7JR/O/WLnS+U49Z/5wyl3yN3lqHs0dYcqn6wp
x49AqUnsYrKOHBGz9s3YG07myjEvR0M5YwzZRA6tH1aB1zqTLeV4OXdVa9ED
ev/ayuH3PTze9DA7byrHr07qh22VZC85hqaJtrwKJvPkiGvd+X2cMXv/yzHb
vjDavI3mBwI5enZSjn1yg6yQw+t20FKP3eQkOVrundZLmUFOlUNR0RyS6srO
p8pROVfVJ1SLvFKOS7Wc9TpvaX6TKQc/48r2qhJylhx7J5rrLl1FVsmRYnE2
xCWanCvHsVCztTrm5CI5Jt/3ntCfQy6RY/3cgv32t9n8T46VWgFjcvax+Z8c
a3ueeeefwuZ/cuRVht3kebP5nxwvVi6YX6zL5n9yGM9NC1v0heanDXI0Xpwb
dfEKuUkOg7o46+XbyT/k6Nz1k/G9RHb+U4GxoyYMOe1O7q5AquezTPthZE0F
fvMOl0ib2fxfgaiqR/G4zub/CojmN427u5dsokBNRobCdAHZUoH0scNMvMLJ
tgq82Ppkhq0VO++pwOFOuZadNcheCrQvmu935D2tj3gKrJ5gXupcSeYr8Nku
cWXFAXYeTIGZawe981hOVijQXSfLrVLG1n8KJGQusg/xYus/BfQWzitsHsXW
fwp89f96qZCdF1vZ0f6GoDMj37L9GAX03wkmeB4jZynQJ/v5zrrFbH9GAaFy
ysO2IHKuAoKIOd+Kjdh+jQJNh3d9HfyH1r8lCqSU3lznep/tXymg0b2Ttmsx
uVIBx1kLu4xm579qFJA/vvykdzK5VoHTUxeU/whn638F3lolOv5xYut/BQoK
bO4bjWbrfwUipz6vXTSYrf8VmPBm6pu+vdj6Px5hm/UeP26vc/o/tITKtg==

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.7594466491229057`*^9, {3.759458486194401*^9, 3.7594584960347977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 200.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.7594452969755077`*^9, 3.75944531981047*^9}, {
   3.75944550622523*^9, 3.7594455321993113`*^9}, 3.759445596947008*^9, 
   3.759445827344466*^9, {3.759446210281163*^9, 3.759446217317973*^9}, 
   3.7594465096616287`*^9, 3.759446565486322*^9, {3.759446636311111*^9, 
   3.759446649134057*^9}, {3.75945848621581*^9, 3.7594584960552197`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Interpolation", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"at", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "at", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "at", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "at", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "at", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"at", ",", "36", ",", "50"}], "}"}]}], "]"}]}]}], ";", 
  RowBox[{"NMaximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "[", "at", "]"}], ",", 
      RowBox[{
       RowBox[{"at", "<", "50"}], "&&", 
       RowBox[{"at", ">", "40"}]}]}], "}"}], ",", "at"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7594456154875526`*^9, 3.75944565581777*^9}, {
  3.759445690416872*^9, 3.75944575085824*^9}, {3.759445834986665*^9, 
  3.759445836620945*^9}, {3.759445873125496*^9, 3.759445873382786*^9}, {
  3.759446721149362*^9, 3.759446736798449*^9}, {3.75944679902669*^9, 
  3.759446802177281*^9}, {3.759446868526802*^9, 3.759446868821887*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.999643859105244`", ",", 
   RowBox[{"{", 
    RowBox[{"at", "\[Rule]", "41.950013298070466`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7594458834235086`*^9, {3.759446811743455*^9, 3.7594468362269077`*^9}, 
   3.759446869599934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", "[", "41.950013298070466`", "]"}], "/.", 
           "MSEvolution"}], ")"}]}], ",", "0", ",", "True", ",", "False"}], 
       "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{{3.7594453296429253`*^9, 3.75944533093659*^9}, {
   3.7594453888678207`*^9, 3.759445425737097*^9}, {3.7594468912694483`*^9, 
   3.759446911904709*^9}, {3.759447015122055*^9, 3.759447056270771*^9}, {
   3.759447365120112*^9, 3.759447372624289*^9}, {3.7594474247107363`*^9, 
   3.759447437669897*^9}, {3.759447487229974*^9, 3.7594474901951427`*^9}, 
   3.7594481181374283`*^9, {3.7594482254083567`*^9, 3.759448227239916*^9}, {
   3.7594486021197433`*^9, 3.759448649779766*^9}, {3.759448686654351*^9, 
   3.7594487011839247`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9U31IU1EcHauMpIRiUEgqasoEU8k0pMYxjKaUpcPMaEUtv81a2CR1GlHq
1MIswzT6y0GzYmQYalQ3zQhFm6E1FR1zOn1tbx+VbmVE7e09O3B53PvePb/z
wQuWXZTk8Hk8XqxnMc//cGY2NKSHkgqBVjxb3gxhg7E/WqwDu1dDEMBTBx0x
oCew2preo8WzlVxju8rMve/CmLij3NxoQVsrg15QK+6ZJauN+/4NnFO7Nw/l
OkCnMyd9GN8Y6Gil7Nz9AViqoiYyymj46tvlIt8P8Hf//hGeSHF8g3hNUjfx
r5kQIW3sXxYOo3A4O7EzRs/xf4QqbuuI4jGB2nNb3z6K0ZYQkV8hIey8T5D9
Umj4wXoS68UYoiJE0XfLTJzfcWhqVcWpCRR5tyz0TPiM7OLRk3ElNGH16NH1
Pol/dM5OJN6BE9hRNNkrkzkIq28S/o/wp4SykdlyhnAKB10h9v23LITVO43S
e/KUwRozucTIk89AtUER8PaQgbD6DfDrPue+cUBH2DKM4DldLeJTQs6PEYfd
dU9+pumQzA7A2qGKb6clBi7PWVxXJpzNrzeDmSZtNOGma+9zcZMFrN85zL+o
jHfQNrB25rB0Yt39rDwHl/88eJnd2S89fQQxcgLNqKtU9Pp4+mDzMONpZI2y
CBRyvVgArVq/a/qqietrERcGLvu07dSDYRNoF/FqTN2//QEBmxeFZM2akjAl
IS6GbpmCPb6PhIXrufy+4nxKC69AaSLeeEQWdCZlbJHuo7g8LfhbtUcpL6WJ
V161FV3Hr9zpWLBz+dL40pwVo8txkJFhBjS+x4fWzlttXN425E42aTS3LcRr
V2BHpMGvbFu9mcvfjoJj+VqBxEC8dFIH0h5OnclLW+3DidX/4x+5OqKB
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw9U31IU1EcHauMpIRiUEgqasoEU8k0pMYxjKaUpcPMaEUtv81a2CR1GlHq
1MIswzT6y0GzYmQYalQ3zQhFm6E1FR1zOn1tbx+VbmVE7e09O3B53PvePb/z
wQuWXZTk8Hk8XqxnMc//cGY2NKSHkgqBVjxb3gxhg7E/WqwDu1dDEMBTBx0x
oCew2preo8WzlVxju8rMve/CmLij3NxoQVsrg15QK+6ZJauN+/4NnFO7Nw/l
OkCnMyd9GN8Y6Gil7Nz9AViqoiYyymj46tvlIt8P8Hf//hGeSHF8g3hNUjfx
r5kQIW3sXxYOo3A4O7EzRs/xf4QqbuuI4jGB2nNb3z6K0ZYQkV8hIey8T5D9
Umj4wXoS68UYoiJE0XfLTJzfcWhqVcWpCRR5tyz0TPiM7OLRk3ElNGH16NH1
Pol/dM5OJN6BE9hRNNkrkzkIq28S/o/wp4SykdlyhnAKB10h9v23LITVO43S
e/KUwRozucTIk89AtUER8PaQgbD6DfDrPue+cUBH2DKM4DldLeJTQs6PEYfd
dU9+pumQzA7A2qGKb6clBi7PWVxXJpzNrzeDmSZtNOGma+9zcZMFrN85zL+o
jHfQNrB25rB0Yt39rDwHl/88eJnd2S89fQQxcgLNqKtU9Pp4+mDzMONpZI2y
CBRyvVgArVq/a/qqietrERcGLvu07dSDYRNoF/FqTN2//QEBmxeFZM2akjAl
IS6GbpmCPb6PhIXrufy+4nxKC69AaSLeeEQWdCZlbJHuo7g8LfhbtUcpL6WJ
V161FV3Hr9zpWLBz+dL40pwVo8txkJFhBjS+x4fWzlttXN425E42aTS3LcRr
V2BHpMGvbFu9mcvfjoJj+VqBxEC8dFIH0h5OnclLW+3DidX/4x+5OqKB
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-0.9811778969057297, 0.981365487018421}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.759445462447856*^9, 3.759446915755146*^9, {3.75944704872857*^9, 
   3.7594470616416616`*^9}, {3.7594473695872717`*^9, 3.759447374708838*^9}, 
   3.759447440380726*^9, 3.759447494959552*^9, 3.7594482321042233`*^9, {
   3.759448607076847*^9, 3.7594486466886797`*^9}, {3.759448689383932*^9, 
   3.7594487128519993`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Threshold", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]]}], "]"}], "&"}], "@", 
     RowBox[{"ReducedSpinDensityMatrix", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Evaluate", "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c", "[", "41.950013298070466`", "]"}], "/.", 
           "MSEvolution"}], ")"}]}], "//", "Chop"}], ",", "MaxPhononNumber"}],
       "]"}]}], ")"}], "//", "Chop"}], "//", "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.4952832919116812`", "0", "0", 
      RowBox[{"0.00008574904266726952`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.49919088016883634`", " ", "\[ImaginaryI]"}]}]},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {
      RowBox[{"0.00008574904266726952`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.49919088016883634`", " ", "\[ImaginaryI]"}]}], "0", "0", 
      "0.5045401176786767`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.759458651338419*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ising simulation", "Chapter",
 CellChangeTimes->{{3.756508266365471*^9, 3.756508268481661*^9}, {
  3.756980245394106*^9, 3.756980245976866*^9}}],

Cell[CellGroupData[{

Cell["Evolution of difference eigenstate of Pauli matrix", "Section",
 CellChangeTimes->{{3.7569823179782257`*^9, 3.756982327286504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "30"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "30"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
           "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756508364491399*^9, 3.756508382343927*^9}, {
   3.7565095883820267`*^9, 3.756509599547564*^9}, {3.7565102956103563`*^9, 
   3.756510329580469*^9}, {3.756510484483986*^9, 3.756510486065921*^9}, {
   3.756510633377884*^9, 3.756510648341579*^9}, {3.7569804714526157`*^9, 
   3.7569805069373293`*^9}, {3.756980554811419*^9, 3.756980570307885*^9}, {
   3.756981101133994*^9, 3.756981127623205*^9}, {3.75698116682758*^9, 
   3.756981166978917*^9}, {3.7569817289940977`*^9, 3.756981729186346*^9}, {
   3.756981790081724*^9, 3.756981790208357*^9}, {3.756981824199143*^9, 
   3.7569818628438272`*^9}, {3.756981927747308*^9, 3.756981928600979*^9}, {
   3.7569820452330914`*^9, 3.756982050945519*^9}, 3.756982158024713*^9, 
   3.759449707377142*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxVmnc419/7xymKhoTS8gmVVFY0kPG0N297817e73dbKtGkRUpEwycSLdo0
REmaRpK2JhWSlqKiwdfvus79ua5f/3Q9ruM47tc55/m87/v10uAv9oroJyUl
pdFfSur//v///+os6f9Z9yLbDf/eZdxoWetWVFDXSdxqOf7oow/vWojbLf1H
LH6R+oC407LC0ObXx4vEXZYX1i3borWP+I9l3dEDwyJXEkshvXPqqf7exP3Q
9SEmQnMysQyMTro7KP+sZTwA64VfszSvE8thusoYudytxIOQMl9+1xsO8RCM
XDT/jrkysQIWWWy+O+jBHcaKUNc5suRAKvFwTMg+sjjUlVgJUvMV9qQPIFbG
oO8n5DOv1DBWgder/ukVK4hHwOLXrzHz9IlHQvaJmkZdy23GqrgkH29jk008
CnvyW97I+RGPxqTnkpc8BeIxaNH6I06qqGY8FksqQ5tL4onH4WzcrzpNc2I1
hCz9feVbdxXjf3BOLmK5VzHxeIwt+ywniiFWx9IxXrJupozj1DHo/Ll/NXsq
2bgGio/VP/p7nXGcBm7+c+fb1600rolSeGcr+NG4JoSDtay4mjQ+AdOHlbi3
t1ew8Ql44dW9++ZVxlIT4VDNyWzaSeMTMV91+CuPeTQ+CVVBbvpy1jQ+CbZb
NLqGjKNxLUTbJ8aHdN1i41pIsXs9o/MxY6nJGO25oL7uAo1PxqKtpTc/76Vx
bfANK1Wd42hcGy6uZXdfiWl8Cs4fKfmS70njUyBl75dxyJzGpyItXGls7TQa
n4p3XwpkNMfR+DR0nPYet0+BxqfhzZE0rll/GtdBikzikL/dN9m4DpL1Nqe9
+MZYShd22h476z/RuC7GHhtz/3MbjethpcbByWrEcXpQulCWyvtA4/rQ1kub
cvEzjevjx/LVBpM6adwAa2vq++X+ZgwDPHv0wlBHlv5eAwiO79l3U5FxuQG2
B51ct+Af+vunY+CipwnqeowxHZu/bG15bUnzp2OE9rfIQm+aPx1PkyOLU+fS
fEOMy7w4dn08zTfEKt3E6sRMmm+IqJavN/Jp/8oNUTir61nLI5pvhCC13D2O
P2i+Eaaaaao9HEXnxQiLlaZ+TDFnXG6EisAtB9cL6fzMQFRuZ+GZZMaYgUMK
CZ2TSmj+DKyMiLV/3ULzZ2BGQki/1pF0vmeiWMFyzRwnxpiJMVLC2Gdr6D7M
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
Tf3n1BAEDV0dr7SL8v8QZHbHFRW8ZVwQgg+D3+5QMCT9C8GG1piwinWkfyEI
yB2YuJzqk8YQjP7HYudZVaaf7SFYeURriBqP6p9QFMZeDfTIp/onFLY3vPPa
PlL9Ewpxfun5ND3S/1Ak7Qo98WUB6X8oFk7YVXkqj/Q/FPrqqb3rX5H+hyL/
ecyOScPJ/0Lx5UnFFj9L8r9QPKzcOPWlhPwvFCYqDrMTk8n/QvEiIVBf7yT5
XyjmfLSJOllB/heK5OHDPT6+IP8LhfcR3z/1H8n/QsEv0F819yf5XygclfTn
ZZL/SoXB2bJf5VJixTAsr76Z10N+rR6Gkb47nrrT7zMIg3TkrKQ1tB7CkOhn
++Io/T2cMBS+alvdRX8vNwx4rWScnkLxh2Fv7P2t+Qso/jC0Hx1qPt+O4g/D
jgP92oePofjDkFXbdetxG+U/YXjYJJb/eYHynzB8SplcdSae8p8wOD66td3V
kfKfMPy5cW2w/BDG7WE4MNnjsd4d2v9wXBlRrDWA3j8ohiP97u6keuqPqIdj
mdf47Pb+VP+Go0JL+ea/lyn/C8f9AefbxkdT/heO1W0JBnd1Kf8Lx0sFjx0d
TVT/hsNBfuym+kyqf8Ox6tvw3EovOv/hOH8tz3ToIDr/4WitTP386SrVv30/
f/WsVsFKqn/Dwa34mLN7BuW/fett2d/V+IX6zeFIuZdvdPsE1b/huP66ziJ5
PtW/XNR8UYsN0mEsx0WYlrIT7wvTB0Uu9hQ2Xaum91ejuJiQdNz/4mrG6lwo
qj1OdnNgrM3Fzo2v72eqUL3MRcPTxfyiJqZXxlyoRu2wz79A/slFV5ravGjy
X0cuVlXdvj5exJjDxQmByd591H8O4MK8+NSrt+OpH8jFFPmGzNdSjCVchAwa
uyq+ifyGC9ORVcHHqhnHcGF3it9leZb8h4sK3dG7JmQzTuRCM7723Iyt5Edc
HJO2eeW5knFG3+/zEYQFzid/4uLHoa0Dp4Yxzudi8xtB80Ev8isujDPHf8on
fyrm4nSV+kk1kH9xobLn35b3VD9XcrEkyHNEtyH5Wd/zH+r33JT8sJ6LqYHq
4oNUjzZyoWs09dY08s9WLqxV1o++r0V+x0We5oPT/xJ3cTFMalFv0mTyPx4W
ZR/MPEv5gBwP/YSmg7V0yQ95GCifvqGb8odRPFTynic40d+rzkMDmpfMpHi0
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
lc8c
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
AjbyQrLbmszQU+QHL7S3n6BvcFfAnl74ntp/5t8fyBdeMK7u1duK/W+UF/aK
l++bwv433gveb4tjvEwFnO6FaPUlF2tdyKdeuLVhfKKZSMD5zc/bVpRsyP6m
xAsP7mz2usf+p8IL+d5NnYaRn6u9kDYyYp4B+6c6L4zzyix4cYz8640jRiVe
fhcErOmNkP6HGlKukY+90eXAc1HSXQEbeaNtpXN/nyfkZ2/8slgc9fOlgD29
scYnoU8K9VjkjeWt7w5VpX5FecN/3YHT0V8ZvzeebhtaXUt9TvfGepulYbOo
h1neeJSyfH476nW+N2JzXp49T1zijZxVEW+2EFd4w2rujn17fjJ+byQnmi19
2sj4vdGuf9N2d/pT8cHIl5ZFDf8xfh+8qp/3+8knxu+DJZbRKj8Zj5EPHIJm
HvR8zfh9cE3vk8WjZ4zfB1XKjhPWc14g8oHLrxfHZpczfh8YnzLtFlXG+H3w
5uCUhYnU33QfPJ4vL8/i/mT5oO5V/29nWT/l++DXsRldr2Yyfh/sPHj97qmV
jN8H+42aLsYtYvw+mFq7Y22naYzfB4273i4KCGL8vogN2V/o7cD4fRH61+DS
/8Ywfl+cs7d7MqYf4/fFw9UFgWqsJ+GLVeYfOs6o5flv/vtBN3dH3uH590Wj
jvfnj4UCjvLFhk8Fk7oyn+J9kZRzcts91rvpvljubloxifVwVvPzrZWUzLcS
cL4vtpc5hMRqU9994WtekzWlnvnvCweXKWuld5j/vjA5evln8mEB1/niw+BJ
YT+Tqb9+MEy4kfqa+qvph/ductFsK+qxH+afMpTd7CFgIz/Io1q5D2X/Cz9k
X7m8Ov8K+c8PM7zGVuzYTf7zw5O8mXG6nB9G+eFSHYbMCqB++yHYYljDafJv
uh92Jc6daNKVeu6HIen3P3auE/g73w/b9uc0xVSQ3/1gfuzgoF3HBVzhh1yj
IXYHN5Pv/XDAJ334pcUCrvPD6IW/jTVk1B9/VJeNabXPQ8Ca/vjwPdPhgDX1
yB9pd2q3jRkpYCN/PHS+KfUYQH3yx5BpC8906y5gT3+0etRjzooO1Ct/5IVc
63OM+hvljwzjuz03tfS3/tAMfn3MiDjdH5uvjPZcoko980fqm9/p89QZvz8G
J81ZoabJ+P2xPGJdrV4fxu+PJueHstNDGb8/1j5+cSZ/HOP3B1S8+352YPwB
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
t5P/I2GfEJPUhnzuFAmtux207ajHnpHoNDAhYUcR+T8Sy6YYOw8vIf9Homjt
Oofv1A9lJBLaJ47Q4v1xVCTuPV06cNsd8n/z748vDkpr+Z4rEpL6TTcaqVcp
kdjW5+z9GupZeiSulgxUE1HvMiORMU35SEx9zoqEpsGm3A/U57xI1K6qSW6i
PudHYnvkzrB06m1RJOrT+j7fxH67JBKy+RPKWrMfvhqJxzntv5ZxvSISeas7
3S6nfWUkwvKuZqpTr6sj8XvGtQvB9F8TiZ+qPyOOvKL+RyJQ2vvCO8bTEImp
M5NK6x9y/2W4uGj6itN8P+oyrLM9Vt6H9Y2mDNrF57NU+b61ZJgafaggnPf3
OjIMc81u0uL+6csQalTaaxDn00YyqOql756ezP2XYUr8syMfW+YnMrQu76yy
h/cbTjK8Kd8ycTm/P/CU4XmrNvYZxtx/Gf7sua36XIv7L4OOle/VabwPVsrw
o/N4TYdqzptkUPGNjU9gvRojw6i3Ly+b7eb8SYa13iWyeOpvigx9j7yJX8j5
c7oM0Zatkh3NBZwpQ6OT88eO3TmfkiEhsPD5x1rmvww2/aRvtMtYr8twIx2x
RTsFXCRDWUFQ3vdo1u/Nv++550xbDwFfleHQU0VF12Gs52UQqUoTXZoEPquU
YaHjxoQXD9jfynD32moztWMCrpFhySud2Ncr2e/KcM5yjuURmYAbZNhRnj8+
zZb9jxzZWqmXD5OP1eUw/e4baPGb/C9HgEtsasBT8r8cY1Qnlo5iv6Ujx233
+h5Ve8j/csRtkqiuTiH/y5Gf3W2qdxT5X46XM8LD3DhvhRyLulzqsonzWCc5
JFs3nZnAea2nHG567qtDOc8NlMOj/sSu39rUfzk+flj+3yjqr1IOaXycrJ7z
4ig5NlwYnB9K/Y1p/j3Z+BlS6m28HLeuX+rTgfPmlGb79it03fi9VbocIbtf
Ph3C750z5QiPeXNgZct9sxzLtGw/zRxI/Zcj3e/QiFLOy/PluBe8quN8ztOL
5CiQb10wy536L8dwl5oDWyXU/+b3ceK485MY6r8cTtcVy3qvo/7L4SpZ0X/U
Qeq/HFZBp078LKP+y/GscN/liFfUfznGGbz+NFaV+y/HuW6H+nnpcf8VuDBk
9bk19tx/BTyXvmpdKmc/rMCNkLARpakC1lLgh5rFFelh1n8KOOe+6hx7m/Wf
AqWJk8wffGP9p4DKimm3vPsI59lcgau657pdnMD5sQIDCg0jGiQCdlLArPRH
cgW/j/BUYOzJGks9zo8CFdh8Ij345k3OlxSI0CwPPvBRwEoF+p2J27CzC/Nf
AfkGn5Vphsx/BR467TeKoP7GK5D56FKvJn5/maJA30KfDaHsf9MVqPUa8Wjq
Xua/AovfSFR1zzP/FViZtrfVwn9Y/yswOHVr6jzeh+UrYOSY+m+31uR/BT50
j7oc3Iv8r0BRt6IXvsPJ/wrkJvct6WRF/ldgj8n68em8D65U4Okt0ahPweR/
BfIm93xuST2uUeCEzO94Er+/qVNAr4vHqhcJ5P/m9zHsqyJyDflfiVmrjz/u
v4X8r4SdRHOHDr/30VRi+WLrvnGHyP9KlOuV97VrmY8qcbvwSshi9mv6Sli0
W2Jryvm1kRI7B9VuX8Dvqc2VkI5TLJrE+2QoEX6jXnUP9chJiSj//IjV1CtP
JY573SxQ4fw3UImmHnfMGtifipQ4W/UdU6ifSiUeNz2NceQ8OkqJDN8ObZfz
e6oYJT49cL2q0fI9thKxEeIjt3k/nKKE45ufrc7y/jldCXX7RRdPEGcqEbP4
y+9s/n2WEoclI20W8D45TwmnnTofuvF+O1+JUyvnFYl4n1ykxInbz5sm8/lL
mv9e5anpaX5PflUJj6qpk7fye7cKJTYf1v39iPVMpRJ6e9s5T+P3ctVK1Fz7
fng8++MaJXp8nR/jyP2rU2KL5KTGMtZfDUoMiVAZ+CaO+z8FgzKU9+Yr79n8
DzuV8nU=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxVenc41+37vlLSUNpokYaGSMOMU4Tsvcd7eI+eSiqJSomEprbS0N7Soqgo
T9L4RFtLWh6VRE9DT8PP9zhep+P49U/Hedzvy/W6Xvd9ned1XfdLTzLLW9ZW
RUVFT1VF5f/+////Vdjwf8WWa6nyNsTVNtqP9x3c0p641iZ6VO9Oq7oQN9j4
zStbZ9qH+IvNTnlVUvpg4iabYcVTCmeMJf5lo310TNO1ycQqOJvy3mCxP3Fb
tFth97+oGcTtoDgcGBq7jFgNF91ST0btJFbHP18/LzQqIO4Ec+eFZ9c8Iu6C
r07O2uJvxF1RVm2VuaDPHQFrovHd6Gs5psTd0ZA72ulOEHEPLL0RNz5vEXFP
LEgZsdAkm7gXHmountj/b+LeqE5K+uxcS9wHi3vN/rSly10B94X+QpvwKmNi
LeQdXbXmpy+xNqLWu3QvjyPWwZq6NrcsthP3w7V+Xhr6RcT9cbAoaUvUS+IB
8HZom62mek/AA3FwodvVh/rEg/AlO+3nLTtiXZR+9k94LBFwoi4W7R96uj6R
63rYd6Rn7zY7ua6HXdFb1ToUcH0wdkc8zG26z/XB8Phvxovyeq7rQxG3tzK1
w31hXR/r/ZPHDxgkYJUheLEt4NTqCVwfAueY75qVzlwfip3eQbU/w7k+FBGW
n5J/zOb6MJQ+syy6k8z1YTAPW/s2ZSPXhyPm0fUNffdxfTimFujtSDvFdQOU
1/T78qSI6wZ4+lg3U/MW10fgwGj9tFGPuD4CbZ7fP234kusjYVER+1nrPddH
QiPt4O/6Rq6PgrrBw9knm7g+CuuO5ZWL/3B9NM79Loxvo/pAWB+NC7UX8tap
CVjFEFXTK8/27Mh1QzQe+bw5rRPXx8Bu1pgZjcSJYzBvX7apR+u6ET7UTvyw
R53rRmh/9bLiY3uuG6N464bFRm0FDGP03LSuZtpvPq8xPEaOH7vju4CLjVHg
PaL4egOffyx+OfW88KlWwBgLK/WCLt2qaT8WXz4sdxz+kPZj0fP8tb2mN2lv
grmnBn+25vuHCezfFW6z5P4kmuDvLqk7RnH/ik2w703y+i6baD8OHrONzjxd
RvtxeP8yqnHTXNqPQ9m39x3NxLQfB20fy5xLbrQfD7sT7Q8OM6f9eOTEXWg/
U5/2LetuJaFru9B+POQX7vxZ+YXnewKy40S2kqcCxgQ0NruV9LjMfJgAHY2a
s7v2C7h4Aq7OOTVUI532E7G8SW4rnk77iXgXmLdznyvtJ+LVE1Hcq9G0n4jc
A0ZvDLrQ3hSji/R+p70X8h+mqDE2aNe3TMCJpnjS/0Xs+30CLjbF6uhLvQcu
JV+Yof28uiflobQ3wywjrypdM9qboV2tpfGEnrQ3Q3WM1v5x9eQ3c+zu3Slj
ynUBwxx/RtyP2rxPwInmWHeofrlPooCLzbGye+GSo6G0t8BxnbMN/zOnvQX8
jvv9874v7S2gf3Wa3OS7wN/FFgiTub++18rvlji+a+u13+cFDEvUV6s0Ptsh
4ERLSJ/sH789mfaWSH32u0Y6nfZWmBGXMTPIj/ZWONj76JOdtrS3wm1n7fXe
xrS3wj6D4z/W6NF+Ev7dvG/iX71pPwlqB5b8+NqZ9pOglyAOsKF+Fk/CSe21
J91b9dUaJpp/HR1O/YU1zGMLx1zneqI13lSsSTBUo701LIwPeTlr0N4Gu3ul
q3fvS3sbHFhX9yRKn/Y2KFH2HehmQnsbjPJekrHOjvbA6qisnIEBAtYFulye
3vU+9RfAlszAS2uovyLgnvHnQyOov4lA8xaT5gS+/2yg8fDe3dKH9AfsX2Oa
dvKLgKuBTy4Ng617cf9tcfzPj4svxgtY1xb/KQ+/muHP82CLq8PanrgQJ2CR
LRrHHtM/mMXz0WJv8kHavkjA2bawHfT+x8lXPG+26LlsmUa6mnB+q20xdc6i
NcqRPP+T8fjBPg9jdwHrTsaN1NC+V2YzHybjDtacbrNJwKLJ0Amf8ft+PvNj
MorzV97TfyLg7MlwsdJQq/zJfJmMFZ7Jds/7C/laPRltpQc76E1i/trh+xHf
xPWhAta1Q/E05azBC8kHdlg221CtJFPAIjuEpKvcUpwlP9jhZqX38vZ3BJxt
h2GPB+iu/0C+sMPs0akb2rUX+KvaDpc8jB74DiD/2SM7rMetheMFrGsPM+Mi
57nUX9hDgmedJ0YIWGSPhCbrk0VzyI/2GHAqtbRLioCz7VG8xqlMZzP50h5K
39KRtfvp3x57C/eIYs7Q/xRICy5VF12m/ylQuWcz4tb/6H8KDJ9MuJRVSf9T
MCZ23hCTV/Q/BVbnEx9toP5mt9gnvrMspf4WT8HtyeeWl1O/qqdgVkT6zrxf
9O+A0ce7NSWpCPqn6wADLf8oK+oxHLBIc6PWh3YCFjngvX10zy3Uz0QHeC4r
c3YiznbA7N6Bdmr8fbEDbmQPqH3URsDVDlh5fWtgSav+O2J4Yeip//3H+B3x
KyHvzX9fGb8j3I3ur3Sj3opa8Piej0vfMX5H6GbYL5bzfWQ74mPRpF0jnzB+
R0hiy+92u8P4HZFm39W4+zX6d8KUrd+mG1ygfydY/7rW5JZL/05YesptbPxe
+nfCtav/ZGRTfxOdULg58tv55fTvBPU9fRoLYunfCbaTTLpsldG/Ez5s2zjY
2Yf+pwJjGvP+tqH/qfg8P8NDZRT9T8WBiLg7X3vR/1RoTWn3cNdvnv+pUEYm
NP/3hud/Kt7v/+6kdpPnfyoc24R5lpxg/k2FZL1e5sQNzD9nxG/RLlLMY/45
43zQ6RyxP/PPGU7imxdNJjL/nPFs09XSul7074yywpxx+z8z/51h+GLpr5hy
5r8zhuq92xJ3lPzTsp6d9Lx8OfnHBR9rjj/ZISb/uGDmmMBd6lbkHxcoOl/5
adaH/OOCnKXmJsEN5D8XmMzamLX1BvnPBZPep9gP20/+c8G9NykpxtTfahfU
pEZmvAsh/7qi/GPp9yQz8q8rpka5GI9hfwRX3Iw36tX/K/nfFYcPmMkXPSD/
t+DNhr4J+eR/V+TfdPvlnEX+d8XAn8u/d11K/ndF1GTX+k9K6o8b6tasHd/d
h/rjhm/ld2ett6H+uKHqt8HUtWPo3w1n8gcbDtKlfzd8XBGg49eL/t3g22nY
Yhvqb7Eb+tVc161tR/9uWJQwVs+3VX/dcaRXaXMy9VfXHeoem/LntqV/d2xS
9X6r04H+3ZEU/uy/GV3p3x0h9osTgrTo3x06qxa53RpC/+4YkbLt2/Fx9O+O
Pxa6am/s6d8DZ7/ERHoF0r8H9pwOyXk4k/49MPiKZL13Cv17wMjdy3BPq/56
YMGHFMnuVv31gOL2c8NRrfrrgcLtTz9qt+qvBzJdnuY69uT+e2KtjlXcmnEC
1vTEy0zZ3DJfngdP5Mh1xlTECtjYE6vN3AsTt/J8eGKpUfqrsxcE7OmJB75h
tq7V1GtPHLwkluu1E85vtCfi1m970dOA+umJ1KchXqquAs7wxN4Z7VdXzGI+
eaIg3ig7bIOAcz3x6JVh9eo85pcn/u09vH7KYwFXeKJw1cmb06m/1Z74ipfv
a6i/DZ4Ycy3FMrtVf70QM2HB+KQwAWt6oWO26bO4ReQDL/x6PLxq9jYBG3th
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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
mvFas+Qu4xoffFvgMnvLGfJbH9x2ME3J2UHx+2DJ38A7EyIpfl+E3miEpTPF
74usriKhtRrF7wuTIfdt+T/Y89TzRf8hiUPrr1C/wRcrrq9N+JPEmOMLmerS
lP7Un+D6QnNDygmTEYwjfOEoPX7Ph6e0/r74J/H8Tc9MWn9fyB5OlL3vQevf
93sNzobZVP8W+uKRm9512TuU3/kiKrozIjCBcY0vPLreyLyh+rfBF0Pbfik9
o/q31Rezml+dSjpG9a8fTKSydObwaf/7wYFb8lNrLO1/P7T5czi7HrHzoueH
iPDvDhWp1G/yQ2Zcz+K3tow5fujV9TiiK031sh829X8h9/YyO68Rfnhlq14x
dQ3lz344VVtZr29G598PGcHpmjrUf871Q+fm0a8trzEu9MNW22dH05Mov/dD
1iKu2NKdcY0fTqy9KrNwPOX7fni7cpid1mfSPz+sbrQ7tqWM9M8f04yjXY5T
/0/RH+nHjjzZLCD988fstgL/OWakf/44ucNMfHY06Z8/wu7f6tdN9S+nb1y7
8Gb/56T//nB+cHfAnTLSf388Uzo5zDSP9N8f8IpYbpNC+u+PqlF5gkcrSP/9
URH/WOOugPTfH1diexOVvUj//aE33nTHVjvSf38sfOyuPJHqwQZ/RMzZZHtw
FvmfP5py/0n9O438LwDRD79NHjmZ/C8AekWpX26TX6sFYNn9mwN7qZ7WC8Bk
y47tuePI/wLwx0M8ey8xJwCynUNL39LfcwNQsehOYth//h+AG6NtZKZMovgD
YDl4WuV4LYo/AC1tGbc9qJ+cG4AzwU0hD8lvCwPQvGO9Uf48ij8AdUV3+n91
oPgDIDWkRK2Ynk9DAMZrP1CezKf4A7C5dHePz3/1byBUs3ueRCZQ/IFYkffj
wr5Mij8Qu6zefOo9RvEHQu78/N7L1yj+QDy/lvBe+jXFH4h+1oc+f++m+AOh
sPpZ9THK1yICUfo86ro77ae4QNiFdKT95VH+F4j9SsOu3Emh/C8Qd/2n3bta
TPlfIDiaVqmfP1D+F4hpxXaJziq0/wNh0/l86ysX2v+BeHphvf+2TYxbA2FS
1uDiQudJKght3usXdUpR/huE/AEG7mFWlP8GYQWiPcI3MdYLwvADUtfv3qP6
OAhZjlc8nEfS+Q/C1rjItAOhdP6D0HXkY8SG44wjgvDvGYX2fV3UP+u7fkDM
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
PysByFM=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.16332779768898734`}, 
     PlotRange -> {{0, 200.}, {0.17120708880817032`, 0.32879291119182974`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.16332779768898734`}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200.}, {0.17120708880817032`, 0.32879291119182974`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756510654230033*^9, {3.7569804828470287`*^9, 3.7569805748706093`*^9}, {
   3.756981104577408*^9, 3.756981129592001*^9}, {3.756981169264583*^9, 
   3.7569811854355*^9}, {3.7569817271749687`*^9, 3.756981732121047*^9}, 
   3.756981763571302*^9, {3.756981812165306*^9, 3.756981868903943*^9}, {
   3.7569819342481422`*^9, 3.756981987880987*^9}, {3.756982039943562*^9, 
   3.756982056820447*^9}, 3.7569821667125187`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "TwoIonSimulation", "]"}]], "Input",
 CellChangeTimes->{{3.7569811702390623`*^9, 3.756981176033163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "30"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "30"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "I"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "I"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
           "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982095778881*^9, 3.756982097650557*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxVmndUU+nz/2NBsaBRLNgwogIqJQIiFuCNoFIEQg/9pmetoOKiq2t01UXd
dbE30GDvYlvBskawi4oV0HWNHRvGjv3H95zPjOfnP545Ye59nmdm3q87c283
5bhoTX2RSNStgUj0f//////K/en/jwceNbn97tL/bLP//bwl6SXPyK72t9fW
zj54l2yLf+y669NKK8h+65/lO6XDiwtk1/orv1/VDTpB9hf/x1eLRQcOkS1C
8nZ3rbCH7PrIeqZWBW0huyHa2C54oV1LdiNYrbf0ubiMbGvov/VRGxaQ3RSL
W084P3MO2c0xIDxQcutXslvA+qhfxYKfyRbjUeQI5boMsltheum4Lx1Hkt0a
lZLbTb6qyLZF26lBGJFGdhsMX5XibpNIdlsUHHpWPzCW7HYYaCf8Y4kkuz2S
vjiKO44g2w4/D7p1zxRMdgcMLLFa8Hgo2R2RuKk6LzeQ7E4wh3e7ciSA7M54
c2DF5TEguwvmWL6e3+BPtj0iDJt/U7DdFeH/eV/58bsErY4WThhL/gYJtrX8
JeIoX78b3NYqohbS/Q3dUL9j1rlqXp8DGp+abD5O6zc4YGjY4IxOvL/u+DZv
leE17d/QHeb9W+cG8fn0gOaei7QlnZ+hB6KlARMi+Hx7oveeiM7f6fwNPTH0
XL0/unB8HJG5KejDBoqfwREuphnjFnJ8nTCwo9rpP4q/wQljKvTFszk/nBF3
6++Jv1H+GJwRa7M19zLnVy9USz3cR1L+GXqhVfpvlcM5P3vj7YizLdSUv4be
aCKMyS3i/O6DNd/39/Kn/Df0Qf8Wka8tXB8uqLwbHnma6sfgAtc/XH85zPXl
ioInE1JOUf0ZXPHy3oumd7k+3WC/ZIZPfapfgxumfjp9oI0V1bM78tfrxvRo
Sr+7w/3nP664tqTfpWg6pTzZtc3/bEhxJWpyRtcO9PdS5M2ctVFk/z/bJIX3
pCkzLziQf18sd0yZNdOJ/PtC7L34l84u5N8Xe3JMTVZIyb8vLrq8ePLKi/w9
MPHcJC+nAeTvgWqb8P1evuTvgeINjee1DyB/DzSwU3W6EET+ntj/LWxCdDD5
e6I41KH/xjDy98TEqnudSiPI3xPdNljmb40ify+8vG1bEh9L/l44V1994kw8
+XshcOuaWV/l5O+FJdkNLr9JIv9+cF1UYL0thfz7IS1uyVn7NPLvh75bP+uj
0sm/HyL3p++CQP7eyC989+kZ2fBG+I2znWMU5O+NtRFtE7PINnnjp12mymiy
Rf3hpdt944d/f7zdGuLO1zf0x7dx407I+P79sWWs3JvXJ/JBPVH31lt5/T7o
0e7vq69pfwYfuOv3zvjC+/dBXpfemtN0PqIB2Lhg94Q4Pr8BuFcwTbKFztcw
AJeyAvTH+fwHYG3R4bXrKT6igbBPf7NTxvEbiCtPN/Y6T/E1DERZ53b72nL8
B+Kn2822eVB+iAZh/cKkDj05f+psYx/zS8ovwyCESf2uLeX8G4Sb3TNDO1J+
igZjzPeXSQbO38EIxEPf85TfhsEY2a9V5rcu5D8YvzrU+neh+hD54pDLyB59
uH58sbrs+s4+VF8GX3iXHYtyoPoz+eLjupkbWnN9+mHNIysf5i/88Oasd3/m
r8EPG7qOLGT+mvwQ4jTo1Q/++uNZJ3m7E6Qf8MfJhTV3mb8Gf/yr3hY6mPTH
5A+ve10c/mZ9Aiz2uiMK0i8J0Kvd6oqhpG8AnoT0KNST/gnAx6x/u5STPhqA
ebbPp88k/TQCW0JKwPpqAjK6b/n7NumvGVg3btb2H/ocAN+g+ks2kn5LAhD3
PC3AnvQdAajMlxaI1HT/AKgPLXCXER8MASh9EtinFfHDGIDB2ycIw4kvpgC0
uLBf9Y74Yw6AdKHppD3zaQhyb5bXO0X8kgzBtZUVVc+JbxiCHco462XEP2EI
Jt/ZubGE+GgYguP1DPsmED+NQxApBN/bRnw1DcHUh24fdGSbh6A4ocB3O/M3
EDPG/+2QRf6SQLRJjB12gq5fl41um8q8V/D9A7HcZuDHl7Q+QyDMPWwHnaX1
GwMxYI/dIQfanykQpQWNxJ94/4FIa/6y2wjmbxA2ZEpL29H5SYIw52agfzyd
L4Kw1XbB5UZ8/kEIt7s3vCfFxxCEx8PiK3dQ/IxBMF30dFxJ8TUF4c0vrx4/
5PgH4cPSlDl/Mn+Hov5Uj5bzKX8kQ2E45+deRfmFoRhpPexYJuffUBzqH+gd
SflpGIoF5gbqUZS/xqHYVaX65xjlt2ko9t3Y7jyM8t88FOsq3lZ8YP4Og/f0
3t8uUP1IhuFuRdzH41RfGIZBosm7y6j+hGEwvm3u8JjrcxjaHmzuZEX1axyG
2rY2v7en+jYNQ9+3xyVOVP/mYWjctZ9SyvwdjjsRP591J/2QDMeBLH9TN9IX
DEfVkfxz9Ym/wnCIthfPvsT6NBwhbh+0s0i/jMOx2/jS1Z70zTQc71R7164k
/TMPR/bUBPkb5m8wvozulOFM+ikJRob75Jv9SF8RjDnlvxnsSH+FYHh4NbvL
/DUEI7jKzTmG9NsYjAf/lB9g/pqCkWU7PJP5a667Xv2L5T/4GwKjY+IF5q8k
BI32W+9n/iIEHooGacxfIQR9bu7NZP4aQmBp1nMN88sYgtb1N/kz30wheHdj
8A7mnzkE3/6Z9Maf+RuKduqcDsxPSSiOnNtvy3xFKO51XCefSLYQiry/+uyO
Yj6HosnYNUufkr8xFA91j9/7kW0KxaCHXTSRfP9Q9B0w+mpn5m8Ysv6s3bOZ
1i8JwxHf7JhXtD+EQVfTUfyZ9x+GpCbTX57k55MwfL96uTqGzs8YBvWWf3Zv
ovM1heFBn1uWY3z+YQj79Eqyjvk7Aj4xFeGRFD/JCOhi3584S/FFnf1raHwb
jv8I/PtYPKovP5+NwH63P291p/wxjsBV446iGsov0wgcavDk1BLOvxFQO2iH
dWD+hqON/bxJ0yl/JeFY+/Bj5jnKb4RjzcCEg1+Jv0I4AgZ/2NKZn0/DsXCw
3ZbeVD/GcLR+ujeM+WsKr6vg/FbMX3M4NiQv/u0HfyPwrGqNN/NXEoEuw1ZP
ZP4iAmizyLuU6z8C+cveHSwifTBEoMcFUZeTpB/GCPgFmga8JH0xRSAo9HyV
L+tPBDI7ONQeZP5G4sCHx49UzN9IFM/a0CeY+RuJO63bxY1i/YtE17LLra8y
fyPhtMVu8WzmbyQ+vKzZkcP8jURybZr6LutvJCpiek9YyvyVIWu4VdFW0m+x
DBczpX86kL5LZFgT29PGivRfKkNN78C3scwHGXJOJta2JX7IZNC2PJLEfBFk
WLr3j23MnwwZ9Itff+pOfDLIsLFw09jzxK9cGSy/5E17TXwzytAiIXz+auJf
oQxuM8yqM8RHkwyCacrcycTPchmaN2y9tJB5K8P9hmbzGLItMuhE7nZ7mL9R
2PW1xYMp5C+OwrINzT3O0fUlUTjopq7Jp/tLozD4rtvGd/x8EAV0dPp6kdYv
i8LzxrPdnWl/QhSa9bxt+M77j4LVEecFUXQ+hijsq4qo7ETnlxuF9Z/XRSTT
+RqjcKa8xdFmdP6FUbj6c8J/vSg+pijo324W9lD8yqOQ6145Mp/ia47Ci2lW
955Q/C1RCLZNUS9k/kbjcNT4RQsof8TRaCx+kvEv5ZckGps27bw6kfJPGo0h
bac8iuL8jIa3t8O1MZS/smg0erf15XHKbyEaRQWn3g+n/M+Ihte4NYqP/Hwa
jYSLAwZeovrJjYYpz6OqhOrLGI2P6WmBF6j+CqOB7PsC89cUjSeNSjoxf8uj
cd5SE8X8NUfjQuPupY5U/5ZonBxse9Od+RuDkB7ubZm/4hjkn/3piYT0RRID
WZOGp+sRf6UxULiVxl9kfYqBjfZDp99Iv2QxiLy4Yx/3v0IM5rUf/3056V9G
DBzO/WTk/tcQg6h9Jb87kn7mxmCgPKXCk/TVGIMvmSpNO9LfwhgMsZIs5/7I
FIMzd/dc4f6pPAZP8l8Ecn9ljsH4N543TKT/lhgULXnafzPzNxbRGdW2scQP
cSxSZZW3mC+SWKQlvs79RPyRxuJ3ycKZFuZTLPYsq127ifgli8W9Cw0iOxHf
hFgkFq5eHU78y4hFnKpX9WDuT2NhrO/Tvprs3Fg8zl74IYL4aoxFRdbRuEyy
C2OxNL7lLv7dFIuSww1mPyb/8lh82lHPhq9vjkUz143ZI+j+lli8bDLnYQfm
bxwWPdZbNtD6xXEYNtzqrxranyQO5XLH5Frefxx8O7TTlPLzSRwiZn9Li6Lz
k8XBz6bR8A10vkIcKr1nbD9K558Rh0FDjt5by/OJOPTcku8bTvHLjcO+pe6X
T1N8jXG42nPg+NYc/zgsX2p1yJ3ywxSHmTXPAh0of8rjsOusZcALyi9zHC4s
uTp5MeWfJQ65T9+0tmP+xqPglrv6V8pfcTzK/E7NP0v5LYlH1a7vz78Qf6Xx
8E2f25D5i3hMb2zoxfyVxSNjxeFnvam+hHjITqTe6Eb1lxGPmnknRjJ/DfHY
5tbfj/mbG4+JNZOOM3+N8bie4nya+VsYj37Hb/9eTPpgiseSnjc7nSL9KI9H
vU+vpvJ8zRyPTpaP0Tx/s8TjkWeXJcXM3wRM1OWd0pB+iRMg0c51DSV9kyTA
WLMsawzrXwJaWWWOv879SQIqv+o+/k76KUtAnmFGv/mkr0ICVgT27PaA9Dcj
AZ0bne+8gvTZkABB/UsO90+5CdhYXvkr91fGBDR/d6WqMet/Ai59avkkgfhg
SoCvpOtrO+JHeQI+V2h6RRJfzAkwpwv5X4k/lgSc2PjwgiP3v3KcPbepC/NL
LMeLIr9hzDeJHK3XZLRcw/yT40Y34TLzEXLUa2/+9gvxUybH2u/bduwlvgpy
vE7QPxtHdoYcNxuWttpHtkGOoyOdsqaSf64clfMCi8/T9Y1yrPoyY+ha5r8c
zWxtVryn9Znk2Fmz/94lWn+5HKbed0qYv2Y5PGLjTMxfixxFI0v/Zv6KErFu
Tf8lzF9xIvZ7/nkmic5Xkogp/htaMX+liRhW79UhZ55PJOJWTnajQoqfLBHz
25VXrab4ColIuXv61mOOfyI2ra3q8xflhyER8QWfxX9Q/uQm4r339d+5/zUm
osP9Iwe5/y1MxLslKyZEUH6a6n5XWzUfSflbnogJnj1eHaX8NifidP+TawI5
/+vu/2FsyVvuf5PwfOcx4RzVjzgJWbeSdx+l+pIkofTXzVWnqf6kSchoseow
z5+RhFX5O5x5/ixLQlfdMvD8WUhCyAmvZd25/pPQf/m/S1x4PpYE5+ble3l+
lpuEvhGjxvN8zZiEKW+a+fL8rTAJCZML9nB/YEpCnlA9hvuH8iRM7nLwDeub
OQlXGhU4c/9hScKgUy4XWB9FyfDJ/ljA+ilOxsvrq+6xvkqSYQ+rX1l/pcnI
bFw/n/UZyQiotbsxgvRblow3xvBE1nchGVK17uYR1v9keLs2DFvP89FkeM3a
7i0jfuQmQ7zs1qvjxBdjMiSBrc+8J/4UJuP23Ialz4lPpmRMnr/z1jriV3ky
fop7WdSe+Gau+z1nZpNQ5l8y1v0+MHUA978pGDSmu+kB2eIUPPijqiCM+CpJ
wdVzd9qNJVuaggLNRCP/jhTMvC1MZn9ZCqa7NO3N1xdScMvF52gI8z8Fy1a9
c+f1GVJw8PS8TF5/bgoGOi534f0ZU9AI6VY/9p+CJxsPhfH5mOrW8zAsKZLO
rzwFyUP+TVhH52tOQdtRGe8P8/NPClzErn5ruP9Nxag5yqIwip84FYkK92mn
KL6SVLT2XejaiuOfipPVZ/PceD6SiuU4H9aN8keWigPT60c/p/wSUhGrlB9e
xM9/qShu/vu49vx+JBW7PJZemUb5m5uKKUFf7Jm/xlS0O9FmKfO3MBVD3+uP
daL6MKViTsV0EfO3PBU37VteY/6aU+Ejiihn/lpSkZD0dNKP/jcNTrszEpm/
4jRsdlKJ/6P6lqRhVbF3nxNc/2lwX5RodYjnY2l4sO5APvNXlgZnLyebV6Qv
QhrWW56+Zf5mpKFhwLruh0ifDGmI+zBVqSX9yk1DxatvF5i/xjQcTiuxMH8L
0zDy0P1a5q8pDd1H/DMuh/SzPA3zLbumMn/NaWhzoyyD+WtJQ2mZgz/zV5SO
XxtO/JX5K07Hn83/mMT8laSj41jP2cxfaTqaH7afwPxFOmzCZmUyf2XpaNu/
5bAI7n/T0cg+a/0X7v/SMX2N5989uf9Nx1zfxqvKuP9Nx4nZTvvecP+bjrxf
4oLymH916yudZvzR/6aj27g804/+Nx1un5La/+h/05FUtq7hj/43HV5hrzvw
7yIBjZb3tGF/awGjvzvb8fXFAm7feTaX+287Add6Oyi5P5cIeDX2xRzu350F
XHGx9etB+5MKmNyj9BT3/z4CzrW33cDzAQgY/8p/GM+fgwWcuDKxQxydr0zA
1NiGMp4/yAWM2JS3g+cTgoAph+X7eH6hF+B2Iy+L5xsZAoIC3nTn+Ue2AOn8
PiE8HzEIuHPDsxPPT3IEqMbOGnqF8itXgE307hR+/7tCQM57p/r8/tcoYHvW
onQl5e8WAe0+ju/P71cKBfifv1zG3z8UCfjSYnvZc54PCQj+ZlSXUP2cEfD8
YuraA1Rf5QIEsfrwMaq/SgGHaw6urqL6NAvo8bGFy5fv/7OrBdSmZrmKqb4t
AuSeL2Z1pfqvFSDyajrfmftfBSIO7dzuRPphrUDIvpmZHUhfxArUvJoc/on0
x06BlRanU6e4P1Bg6fDuub+Qfjkr0Cfmi2tb0jepAk+S2ulzSf98FDBddnV8
SvoIBVpfvWDblfQzWIENI84nu5C+yhSIqd1g35L0V65A26DA6BOkz4ICXY95
Lg8h/dYrEHBm74g80vcMBR5vdLhdTPqfrcDJpyqFkfmrQBcPn1nhxI+cuvtv
iwk9RnzJrdtf9nP/t8SfFQp4i5zHPWU+KaCcE59rJH5tUaAg8r/VbYlvhQqM
2vy1bTDxr0iB+uYN4/vzfFiB9eFy8X2yzyjwx+RvNqHE13IFPt/466/RZFcq
0PHTHTn/blbg2qjhQ9i/WoFi8eBGPmRbFHA9v+Y6379Wgaj9Rlk77n+V+PTh
wa4CWr+1EjXnlq16RvsTK/F1xpVJ72j/dkrkl2num3g+oMTa5tdaMX+dlZAb
urdi/kqVuCCtd5P566NE6eT7fZm/UKK951+7mL/BStzSv17J/JUp0fegQyTz
V66Ei/CshPkrKLH4z8MLmL96JfbsFhYxfzOUGPUosz73v9lKRMm/nPzBXyUK
Td0duP/NUaKh/OJE5m+uEvo/nF4wf1cocdTNvgX3v0YlsnZdjmT+bqm7ntXt
zjx/LlQi0rHMhufPRUpMa1KxnflrUuLxraG/MX/PKPGTzz/Dmb/ldecXMNiP
+VupRItSj2/c/5qVuNL20zjmb7USB9WXd3D/a1FCOmBXNvO3Vgnb163G/eh/
VThqffhn7n+tVbh5x+ZkCOmbWAW9ePHK0aR/dirY5zzJvMbzQRXyZnucnEP6
6axCQsWc8XNJX6UqLHxwHvdIf31UUI59ZWZ9hgr1VyQVs34Hq+AcoV3K+i5T
oW9/rboh63+dvfnFqxjig6BC8ZXfbrUhfuhViNzwXh5KfMlQYff4VqNqiT/Z
KmSvuDiqG/NXhSEOyx+cJn7lqLB4WtGFGuJbrgrPLjQIXU78W6FCxjkXr1Lu
T1Ww++fs4InEzy0qHBfNyOL3v4UqnB7t+FFLdpEK7Xt6NP3xfliFgrCO5ePJ
/4wKnTPkc4/T9ctVGLbjcYOldP9KFbaeHZf/jNZnViF06vzFJ2j91Sp8GOuc
1IX2Z1HBKmTl6je0/1oVRnYvGj2U+181UrZ368rfX1mrkffNd084na9YjR7X
3d/z9292aoietUvvxM9Hakw4cqM/fz/nrMZSq7cd+fs6qRqxu25erOL4q9H8
v5J7BsoPqJG1xGKeRvkTrIZnxwPNz1N+ydTQfUzrq6L8k6uROq7IGpSfghoH
junHJFP+6tUYlyUeuZvyO0ONES03efaj/M9WI9DmVsgjnj/X7T84sc0Rqp8c
NerN+3fWbqqvXDWezBx9rpjqb4UaQyOu3L/K8yk1Xnvs2/me+LtFDfHa+/Nt
qL4L1XjqeVPUhetfjZLTD5wd+f2UGmff7xnVk/TjjBonv3eObE/6Uq5GqCUw
rpb0p1KNG6+kL0+QPpnVaC/6uWIy6Ve1uo6nbpttSd8sddermfNtAelfrRo/
j998u5r7Xw0G9+pdz57001oDvwpfRR/SV7EGC6e7hbUg/bXToJv/nL2l3B9p
8LnRqabMX2cNSi40eLWa9F2qwZukaduZvz4aCKH1wPyFBudTl+Uxf4M1aNDr
za/MX5kGbU8umMX8lWtwNPm0hfkraNB7nUXC/NJr4JF6zJ/5lqFBQGn2a+Zf
tgZZY+rFMB8NGnx1adGM+9ccDTo5L/Pi/jZXg/S8RnvHkL1Cg87F+Wv4d6MG
tqIjRvbfosGy/yQp3P8WaqAtnRXD/XeRBjGOn69y/2uq2/+jf53X0/rPaLDq
y8wBL2h/5RpcD7dt/oH2X6nBg5nrMkvofMwaPP187BDPD6o1cNt/aSPPFywa
nJwgH83z59q680n6fJHnEyItBvq378vzZ2stNg1qbH+G4ivWomHg+DKef9hp
UU945iDl+YgWXq+f1vD8xFkLv9Fh//F8RapFrzsXpTx/8dHCbuvVFzyfgRYO
BdtceX4TrMXKiIMqnu/ItJh4r34Zv/+Va+EYV1vG/BW0cHFb95r5q9ei8Wjb
TczfDC3cBiRPYv5ma/HsSPv3P+bPWvxzvdcu5m+OFl9tWqcxf3O1+LzI1Jz5
u0KLx/tX/8n8NWoRMO7pcX7/u0WLTsaE7fz+t1ALeefG/n78/K+F1aQeH/j9
r0mLfv4Bm/j97xktpu59epL7i3ItBgQ+iOP+o1KL/mVvKvn7VLMWk2r+ajKL
9LNai5IXkzVzSF8tWix8JLXw96+1Wmj3RE1axP2vDpbbRyz8/ZW1DufTRev5
+yuxDmPEH5L5+ys7HUpXO+dE8nxUh32fqhRi4oezDmXWZaeYL1Iddo51m8H8
8dHB7fGpnM7EJ+ggCrK+U0L8CtYh6vvXnCfEN5kOIUN2dFlE/JPr0HTZrhv8
fbKgw6yzn07w98t6HXT6T5KNPG/WIf+qxyj+/jlbhz7K57/z988GHYI8d03k
76dzdNifeufjYbp+rg6+V1zX/sX81yH+QFXyI+7P6+y91n2P0fq36HCke88B
drS/Qh0GF69dXEP7L9LhmqipCvx9mg7zcl01Ten8zujgNHeyVQidb7kObwb0
GPOR+FtZt7/8pi7tKT5mHZ58HNJqDcWvWgfxWNd+8yi+Fh1sxu7xu8Hxrzv/
PRX6afz+V4+5l3ofnkL5Y63HpWvT+5+h/BLr8aDYbZbAz396DLAZW+zL70f0
8LqxXZdI+eusR2q7nIKdlN9SPSYvbnXek/LfRw830XGnh1Qf0GNtogiHqX6C
9djTKdSG+SvToyDUeQ3zV65HbENL02tUn4IeHVe3dvlA/NXrISxv9o75m6FH
qOnRQuZvth5H1d73mb8GPYoPpcY4kn7k6BFQ+yzRjvQlVw+LdbO5H/n5Xw+n
S18iuf816vHtfUQc979b9Bic7BfF/W+hHrekokvc/xbVrX+l8iT3vyY9Jk5a
2UFC+nmm7u+HLlniSvparsfKpGsLxaS/lXo49vLuw/2RWY8eWUsXcv9UrUdS
Sfo87q8semweuHI8z59r9VCvc2zCfBD9hOWmK4b/48f/A0TqaBU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxVmndUVFfbxbFjHzuW6BgVUSwjNiyBTZGilIGhDP1On8QCsaIYHeuLsQSx
EWMZe4kFsQQ16sSCLerYItaMHcSCigLWj3et9+67Pv5h7XXn3HvK8+zffc49
HbWpkYbqTk5OHWs4Of33////s3uL/3+/dLxsBLXD+5Z/2Mvl1EXeOflBex3U
pd4Hyuc371ZN1GXeRfa4p6nUFd7NVIs+76P+5D3PcLhPBbUTrq2rJgyqLurq
aN2kWJNOXRN+hpVt91PXxqNvzKmvqJ1hLMvw7lpD1PWwN71zeiJ1AzSfoaz2
C3UjIPPdqaPUMizetiy/hLoJjrmioEVNUTeFsfj+/aHUzTAgNLa6hro5dmbE
tp5J3QIBJ4bKrdQtMexenuwwdSusmbPFcYXaBe0z6ix6St0a1b27N6+kboM3
1uuj6tQSdVvYXI/nNKVuhw+bQ5a2of4G7y/nJXagbo+mk4aUyak7IOyRTC1d
l6NN0K5MtrfIMeVz0Dzp/h2R1LKVms+3dMSvDx9WVLB/32Ll9gOp7L/lWwzu
uuFPaXyd8NKj1dNDvN4JT/YNLVvL651hGj/n6Qxe74z1n2P/Fni9C3zVF7dx
/i1dUKKzZkrr44pV7yzpXD+LK1yenJslrW9X1IwOPrSI17uiy229QooPNyyu
HPvOldfdMP7Sqo5SfHWD7sbEi/tEbemGid9HNpXiszu+qOWNGL+W7th7v9v9
csa3OzL0u7Yz/i3u+OfM30uk/OiBTi+8j7vxeg/MXuKRIuVXT9g3P1jJ/LP0
RIslivVSfvaCS7W08K9fL/3vei/8+a/uhEHUTr1R6+ID5/NfxOu9IbO7L+0t
aicF9qh+uL3k8/80FKjRtGd0xSfx9wpkTzw8LUnUNgUOpjuun/gotu+Dbx4Y
b7uLGn1wV9268fIPYvs+uNOpQ1l1Udv64Orq5EbjKsX2Hvima/GtJxView+M
Pf3nvWRRWzyQF3dlxe1ysb0HfMJ/nJokaqe+qJjm1ujxe7F9Xxgvvjo8VtSW
vnj3osOb2qK29cXKWxO6rn8ntu+HxD1n9/mLGv2ws/hm5csysX0/zNrTOG6d
qG39cLfT/iaJonbqj7hFW8Z1EDX6w9pu+omSt2L7/rDd2+z6l6htVdd/zitc
K2qnAYh+cbPyP6LGAIxy/mP5ZLYfgM6jp10ez/YDcHja2Q287jQQW3c71chk
+4Gwf3/0De9vGYhB1uwg6fkD4dWg1yP2z8kTl+bqNkv998TzS6pAjs/iiVu9
MxZL4/fEhT4HfF9x/IPQ8Hjrz9L8DUIjr6CJnF/LIHRfvCG0Dud/EFYPKGgx
TtROgyEfNy9NWr/BqPu86AnX1zIYC6cZq93h+g+G76RZyhQxPpyGIKDLKeVT
xs8QdJqXN5vxZRmCM+s7pdVg/A3B+PfLFzA+nYai9+WTcT0Yv0PxdWxizElR
W4Yi0XXmVyn+h+L9w/9cZ344fYdu5+PilzJ/vkPK5I9NFcy37+D+NHw288/2
HdaVPRhsZH56oevbd6eYv/DC2fdnbzK/LV5ovfHxJea/zQuT5mzIlvzBG4M6
tyulf8AbRY3+PUp/sXij3V7dFfqPzRu3A25Xk/gLOF1zuNO/5MDtAzO6098A
7Ptw/x79TwBqHcnpRX+0ANNddn6gf1qBc7eO96S/2gCvVe576b8O4Ox1t3GS
P/vAt0OIQP+W+8CWOO4H+jt8cHNNkxn0f8EH/a6PWkU+WHzQbWbDXPLD6oO+
z5/sIV9sPsh5/HA1+ePwwc+r5v0g8ckXMUVtm5Ffcl+UNV62jHyDLxqlVj6r
LfJP8MWKK4uako8WXwxqGFaf/LT6ovb3c+ztRW3zxTt9vJ78dfgiILZfAa87
+eHrsX/ftha13A/jZi5+3UTU8EPDam2PSc/3Q3zLmCT2z+KHxr97XHnC8fuh
55bU9hyfzQ/ZDnuANH4/FEfKVRJ//XE8/psAzp/cH0f8pnbj/MIfs2Oi60jz
7w/f7FZPmvP5/gg8HXz9GdffH1l3Gz04wvX3R+uzx1yk9fdHr4Htf0ng+g9D
7TUZMYwf+TC8HTN01kvG3zC8r5jUR4q/YVD5uKZPYvwNw9I/20zwFLV1GOp3
Pjmc/LUNw4xSVSvGv2MYDn6Iri7xNwBPn8zux/yRB+Dfm7uv/SvmFwJwqZVr
M+afEADb/OL2Un4GYNW0NsovYv5aAxC8efp5vahtAciZsLXNOTH/HQFofVyz
qxf5G4jf9176ki36hzwQa8wLZ5aL/oJAOL92PpAoaiEQGdNntyJ/LYHYV8PQ
lfy1BuLhDYtxGf0uEF7d30WTv45AbAuflzGW/A3ChQdroshfeRDC6w7Ukr8I
wvGGtd3IXyEIqROWtpb8OQg9S8L3PRL92xqEe2eappG/tiBEek3NI38dQajs
MbN0HfkbjN6qBQvID3kwsPfobfIXwcgp6e5P/gjBSO+qqS/xKRi5k0eNJ7+s
wXjfdulF8s0WjIiEOt7knyMYmTuT30n8HQ7z8kkdyU/5cNgnyc+SrxgOy1L/
2hNELQzHseRvH0p8Ho7NMVOD2d46HA9O7Rps5fOH45B+9a/S84dXvSE9Gvic
zx+BGm8tH9l/+Qjc3NxgA8eHEThcfqhEGn/V7zd3X0P+WkYgxsORMEycP+sI
yA/ttJO/thEIs8i2kr+OEVj+6mKqxN8QXDWMPEn+ykPQYfzfnsni+iIEU7L7
h5O/QgiunO22gvy1VLU/W5xN/lqrfj95+zHy1xaCzP5dN5C/jhDUfTUjX+Jv
KKp9WDeV/JWHos4q5zTyF6H4KlxrnMz4D8Xvc8pvS++nofDcXjOG/LWG4kH4
4Rrkry0U+nGXfyB/HaEoK/doIfE3DPqSQ0vJX3kYzoY+Pcz8Rhiezv/xdyn/
w4DL68zkryUM9Z9m2+gf1jAMfbwpk/5iC8Mjv34rJP8JQ1HmLZtUH4Tjp+fp
j+hf8nCc8D19j/6GcKyKDVwo+V84HgvDbtAfLeEYNCtrrcTfcDQYUf8C/dUW
jhz58VDJf8NRMj+xnsRfJS7+lfGG/i1TQn6vXyX9Xa7EuSVHGtD/FUp4fyjt
JPFBiX/vmvqTH0ol4rYs7Ee+CEr0qjvuG/InTYkWz+sUXyY/lBhed+ov5FeW
EtViZTLyzarEjBZKA/mXq0Srg7Pnk482JZYP2zKL/LQr0U42NZh8dSihSjl1
h/VuqRK/1lZ7S/yNwJEHA8awvSwCZ5t5j+L95REo33ZhCJ+viEBf17zb5Rx/
BLK6XI5g/5URyJ7bbx3HJ0Tg0fUd5w9y/FXXtZ631nD8Eahp+O6yheOPQE5u
pz9SOP4IfPghKGeIqHMjcCBzUwbXxxaBT7bC0Vw/ewTG72g2nfx1RKB0QM6h
haIujcCEN7P6SfyNxLvzY6sxfmSReJFSty/jSx6Jyd3SH+8VtSISK7bO8JDi
MxLZk2L7MX6VkXgy9G0jxrcQiYOueLBX1GmR2FgZdmUM308jYQocWo/5kxWJ
E+M67SF/rZH45P2mbJmocyMRUupah/lpi0T/vxb0JH/tkfDJ1+4jfx2RaLi8
RhPytzQSm36P3SPxV4XvI581ZP0rU6Fww4E15K9chdQm/9wjfxUq7L94OYT8
hQof6+83k79KFQoObN5H/goqzD+IXPI3TQX13dUO8teiQt0JKwvI3ywVLtf/
R6p/rSrUP79mF/mbq0LXPbt2kL82FcZ6xoXTv+1Vv+/6sjn93aHCQ/sWLf2/
VIXxQtYmqf6NQvjbkBHkhywKLU8t2EC+yKOw49XQRutFrYjC86uz70l8ikL3
jfJQuaiVUTj8yz9byDchCmM9yjscF3VaFIZP8LpBPlqicCZHVWOeqLOi0KRF
Su4U8jQKcY7cYvI3NwrVM3UFvG6Lwvfb3/Rie3sUTtf73WUdeRuFV8rciXx+
aRTmdQpu9oL8jYa/k8cF9l8WjU+CamwSxx+Nq20b7pfGH434yqLEUo4/GvWb
tWwZIM6fMhq/ye9bNohaiEbp7T2hzuL8p0Uj0jq20XjuT0Tjx1MBMU9EnRWN
2RPfHiN/rdF4Ynn5N/mbG41T90trC2J82KLRf7GqnPy1R+Nuq7Uu48X4ckSj
fEiXl+RvaTQ8FgWXS/yNwed9+3eRv7IYfGpwbCn5K49Bws6NXclfRQwyHn96
Qv4iBqWvQ6PIX2UMjrQtLuP+khCDX7eplORvWgxud4p+yf0pSwy21/DXkL9Z
MTDneaxmfltjcKj26bnkb24MtOfUXuSvLQZbCjyy6R/2GASG26LIX0cMqm/6
O5n8LY3B6C5t5kj8jUXbk8Ub6F+yWHyd0+M3+ps8FuX1HQHkryIW0TcaLpTq
k1gU4aqK/qmMxYUy5+n0VyEWXfTun+m/abH4KW/hQfqzJRa33rSx0r+zYuEy
ePMm+rs1FjevfDoo+X8sZi6ZYicfbLFYP8b7Aflhj0WDc28fkC+OWHT+sfXf
5E9pLHZOHfsr+eSkRjfLFx/yS6ZGPK6cIN/kagwqbttO4p8a/9S/6y/Vp2rc
eDHYm/xUqjE4u2Vd8lVQ46JPylryN02NLE95LV63qDG2xmFPts9S482MXoN5
f6sae17daCjxX41HNR7lsX82NVRGew/2367GTuuQGRyfQ42kkve50vjV2Bq/
4wTnxykOiYbFNs6fLA7dj/z6O+dXHofr84IWc/4VcWiY1FbiL+IwaJ3XWK6f
Mg55zmMzub5CHJ4e3XJOWv84JN2NDmZ8WOIQ99DWlvGTVXW/5vdUjC9rHO4k
vq7H+MuNw/hzNZMZn7Y4+ObdMDB+7XFo6ikbxvh2xCFn6uH2UvzHYXWZvLlU
/8bjbsQBJfNHFo/mD+5+Jn/l8XitnxrA/FPEI/WOKUl6P47Hkq+TH5O/yniY
P7hNYH4L8bjZq+Nt8jctHhv9FHPoD5Z4xI+q9oz8zYrH6TPmWfQXazxOlk87
z/233HgonFr60J9s8ZgYdEJH/7LH42O5+QD9zRGPy/O350v+Fw+vOL8X0v5z
AhJVzW7SP2UJaJykec/6Rp6AoaV/nqb/KhLw5ubJc1J9lABjypdU+rcyAfVu
f+xHfxcScDZg4VzJ/xPQdHv8GfLBkgCvSfpR5EdWApbWuVZAvlgTMGZnrx4b
RJ2bAOWUqR/IJ1sC1g8oNncUtT0BR/7Ze4h8cyTApUGm4gT5l4B2myY/Ih+d
EuH4GFvrZ1HLEpGyOH53BuvhRGzpNPX+RFErEjG3jnceryMRvsVzWrK9MhE1
+r4q4/2FRHxKygvk89MSoZww/B77Z0nEniNH5rH/WYlYW/O3zskcfyIyXcNS
pPEnYviK2HLOjy0R26+d3Mz5sydCLUyrs1HUjkQ8f3LiJOe/NBE1a97L4Po4
JWH0u5I/uH6yJFReXdQsRVxfeRJmxJxreZfrn4ScnKH+5C+S8O3KLLciUSuT
sONxa5C/QhL+/eVE3Zp8/0uC2+505xX8PpKEZdstBxi/WUlosXdBNuPbmoRt
CYHtyN/cJHhFD77K/LAl4dCWEk/y156ENkW/XmZ+OZLQ8Nn3ruRvaRJOP2t5
TPo+lIxbf8x3J39lyYgNTbQwv+XJuOLTzSzlfzK2dzV8Q/4iGf2LLqTRP5TJ
cPPy9qC/CMlYWtBkCP0nLRk3CpVa+pMlGefX7LbQv7KSMX1tTWl/z5qMCyvz
u0j+l4zgkf1G0R9tyaitmdyP/mlPxv4B8Vr6qyMZji6r70v1TzJepZRY6c9O
Kei9LP1nqf5NQfiw6tlS/ZuCbftGbZf8PwVDjn17knxACiY8OV5IfihToF8+
/B75IqTgSsrjc1L9l4Jr4cW/SfVvCs502Bos1b8pCBnjfol8s6bgbdQtd4l/
KZjy8GacVP+mIGtkS7VU/6ag1usyV6n+TUHhHZ/jUv2bgohG1XpI9a+AmXvq
GdjeWcB6r/YjeX+ZgIPzCn35fBcBHyZMeSG9HwjYfX7xSPbfTUBqcbuTHJ9C
QFvdiEqO31NA14xdjbk/AAFbr/4t4/5BkADnSdecuL+gFJA4an8x518t4OLv
L25wfQQBprCAq1w/s4Da1byfc33TBDSeU+rB/Y90AX4v7+6T+Cvgc9TheYyf
TAHfn2pXwPjKEpA2cu50xl+OgIYBhdek+BRQMjzOwfjdKmBaH/lfjO9cAZfj
X61i/OcL2DNbtkzaHxIw6132FebPGQEFh/+YwfyyCzAHPjvP/CsUUDzJ7yHz
0yFgWGnPMuZvkYCj/u9mc3+rVMDkn58/Y/5XCGg2pPty7o85aVDrr8wP9A9n
DQozPmVXiv4i0yB4X+VN+o+LBt/V+RB6ivWBBnefpYzpKWo3DabO3HKE/qbQ
YEyh/gj9z1MDl5IlL+iP0CAwe8I1+meQBsZpQS/pr0oNmk6Jyaf/qjVYdPDW
fvqzoMHmHaqYp6J/mzXY4u/ZZAJ5q4Hiz+5JdUWdXnX/uoYc8sGiwbAFyYpA
UWdqMPKD25zX5JEGt3823Cd/cjT46XX9DRKfNHgZaq3/rai3Vo13RKeIl6xX
Naj0iz5M/uVroP/3X/N61q8aFKiOTiE/z2gQ0vRNm6msZzUYV5o7bJKoCzWI
nxtQm9cdGuw+N0rL9kUafFvU2pP3L9VgflBIBp9fUTX+jU3rs39OWkSd9t1B
/jpr8Szj5iCOT6bFL6lbxnD8Llrc2qL6SP7KtYgdXWAlf920OG7z/sT3G4UW
D2r+tIv89dRieM7eZPIXWlwcJVtO/gZp0bFtdhHfr5RaPPSMecr3L7UW3msu
yRgfghbtpz57yfc3sxZFz57WYHylVfV34+FzfP9Lr7q+ZXKBdD5Bi9HtV4wj
fzO1OP99fhj5m6VFvRsjCvn+mVP1/HGPfpHeT7WIrxZfzvfXrVrMjr6xmPzN
1UL79FMR33/ztegy1GMu+WvTYkmPB+/4/nxGiynq7Sbmt12Lc447kVL+a/Fo
f0g9+oOjar32vxPoH0VaXG06zZX+UqrF1DMyD/pPhRbN99mSpPpXh7XPRkr8
ddYhv0OjDPqbTIeSPPde9D8XHTp8+yRd2h/Uocf92sPon246WAZdT6e/KnTo
fH7IJ/LXU4fANq+O0Z+hw8f9Y3fTv4N0mHfT6TD9XalD5pXgQsn/dehU9ks5
+SvoMHhBY4kfZh0uqQvakC9pOqzs7NWA+8/pOpxMe+OQ+KvDgGb3l5BfmTps
rDHpG+4/Z+ngnbryJ/IvRwdr5dhcqT7VoefPFXvIz606zJXVmk2+5upQf8aC
Tvz+m6/DOt/zv0jfh3Voi0Pn2f6MDopd7td5f7sOy+as2cXnF+pQs/xBAvvn
0OFyht8d9r9Ih81h5/rz+29pVf90w0dz/BU6bKp+erb0/VcP14mD53L+nPVY
kNw8nfyV6VGaXCxw/99Fj4RWZWH8Pi/Xw/xKO4Lf7930OHzRX8fvCwo91Jsn
bCN/PfU4a57gzvMBqLr/e/UXxk+QHuGh9QfzfIFSj9c+AW8Yf2o9osNf+PN8
gqDHrXnjwnl+waxH8pHLPXm+IU2Pl62m1N4v6nQ9ll+t81k6H6FH4aYuA3l+
MVOPK5nXHjC/svQI3ryk+wpR5+jx4ser34Vwf0qP/amVSp6f3KrH9pdH3U1i
PufqsW3x6sy/mf96jHt13r0Pv0/p8TE44T/LRP84o0e1i4qWH0R/sesxt8Cm
ShF1oR6Ome+PkL8OPY7MSLlG/hbp0b79PJcc1rt6hI0OaFRL1BV6NDlZ0XcC
618Dgj+PaFQs+qezAZl9R7fXsB42YN3TxnfJXxcDDq7+8YJUHxnwFQV68tfN
gOiL65uSvwoDgtThkeSvpwG3PZ/NJn9hwI2B7o3I3yAD1n7JU5O/SgMqkhbu
IH/UBky0n04mnwQDUl3GHSO/zAbk+iR9Yn2ZZsASoTyW/Es3wH/Fw6+sTy0G
/NhujDP5mWlAQtimVaxvswyYFn7iBOvfHAOWHeo2hdetVeP7lHSR+89bDbja
u3wd759rQFRet9vcf8434Gytfib2z2bAmPrmOuz/GQOm+9oXsL63G6BwS/2L
+8+FBlS/dzuU/HUY4NRa9ZL790UGGCuNIeRvqQFxTT994f5/RdX8bhi+S/r+
a0Tt4phn/H7gbET/gKFe5K/MiHmaZiB/XYzYNO9UqrQ/YsR8RUgE+etmRMPV
oaO4v6IwovJz1mDy19OIK87qoeQvjFg0P+k1v58EGdH7XWPpfKHSiBDPviby
V22Ec/71ruSvYITyeftfyV+zEdPe1/Yif9OMaPDo1hryN92IJivTAqX956r+
FfocJ38zjbj+7EEk+ZtlxB/HpvuTvzlGqAcmV6M/WI0IWzYgifzdakTR0bnd
6C+5RrT7rdtg6f3fiKlRipHS+RQjvim0LCV/zxixdP3BJeSvvUpXV4fQ/wqN
yLY0XE3+OozYtcR3NP2zyIgjees3k7+lRox7/LYX/bfCiMtxg95L9a8J657X
LSF/nU34LFN/IH9lJuhL8tpI/m/CmQ8rvMgHuQlH3A/HkR9uJnRR1DSRLwoT
Cka3SiR/PKvuN0rvQT7BhOzZhqfkV5AJlzZGjSPflCaMutLyGvmnrurfy0nO
PH8lmDCh/rt6PH9lNmFms/w75GuaCZF95T+Rv+kmHD33sUjafzZBte5SJ7bP
NCFhTnRP3j/LhB1Xu9Ti+eccE2b4rcmVvk+bkHrdVcHzY1ur+vu1ZC7Hl2vC
hlPt/+T48014NzLvsnQ+zYTEi6Mvcf7OmNC3/86jnF+7CQsf6TZy/gtNePRj
2ULy12HCtq5z/0P+FpmQ2bzNb+RvqQl/dQ67I62/CZOtdROk889mfDqy3o3n
553NUPzRNoX8lZlhLJ/YjOfvXczYGNRaIH/lZqw+P8pA/rqZsfWxizf5qzCj
YNmIJuSvpxlBytPV03he0YwVTSMl/gaZcWya9g7zS2mGqcbX9uSv2oxznxr1
IH8FM6LvbfMkf81mnHYfUsr6N82MlX2DQP6mmzE+wf6PdD7TjIltNruSv5lm
hOS/2sr6N8uMtYkjbrH+zalq38fDk/y1mvEKj33J361mzNn9zxTWv7lmLPfZ
pGf9m2/Gm1PnprM+sZkR4z0plPXvGTOerB6sYn1jNyP4hsWZ/C00o/uV9s/p
zw4zznukZLB+KjKj39ACOeurUjNK/CxRrL8qzIgP2TiDfHD6HjPCv1T7b/32
f7Ds6hE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxVmndUFFnX9VFRUQcfVBwx0sgomFFUwABbQWmiTc5QnduHUcAwoCPaZsHR
YYw4BlpFB8OMiAkjbcaMY85tGMWMYgDD+PKu9dau7/Mf1l7lrbr33HP2r8+t
clKlhWvrW1lZOTWwsvrfv///vwof8e+5A2Xpum8X/k9bfArlL3ad+VfUlT6R
afBxo67ymX/h6YwlX0X9zmfJ5j6fa76IusZnyXy/zsnUX3yCJ9llHvssais0
2zl0Uk/q+lifWrZl2SdRW6PZmJKFDagb4d244MLxtaK2wR92vcc9qRF1U9zo
f2BcCvV36N1sg8vtj6JujqYrXeySqe1wvarLqn8+iLoFFn+Ll4+nbokql5sz
G1O3wtQRh4rXvRe1PYZVl2MEdWu80o/Nff1O1N/jaujZe2up28D+bVVBIrUD
qj6lN5BRt8Uzlz8DX1SLuh2OpLwrPUzdHv/9s6vBRN0BSaumzppH3RH1up3u
NZm6E/KfapQTqR1x8WSr/tJ1GeS+whqON8rQtHbkLOn+TpA3WHyPzzc6oc2Q
+TOk+XXG9ePfD+b8jZ0xZG3tI2l9zrh7urzvOl53xo1/XG5L8fkB1gcyTIyf
8QfsvT7QYT3j2QWuB9e9YPyNXVBdf8xBaX+6InbqfPvHvN4VR1ZNmi/trwuu
Nmy7lftvdEHP8o0fpfxwReaTWZ+YP0ZXLBE+9Z3A/OqGnDnn21uL+WfshpgG
AwYvZz52x9LynKa9xPw1dkem/k3j48znHvhlkfsO5r+xB6wXHJhfy3roibw/
/m25VKwfY0+E1V4+K9VXL/h1mjP8rKiNvXC5/YvPUn32hr+brR/r19gbee0D
vYNZz33QfPL0Act5vQ9KOqTXWnjdDfdsoxO61fs/DTfcmHO4e7qojW54urwM
u0RtdkPp9E8TakRt1Rcvl04p8Kovju8LWcde67JEbeyLRep6CbtEbe6LN8Vz
t7wWtVU/TFrilO3SQBzfD16jP+9IFLWxH1ycGgz+VdTmfvi2P6temait3LFO
s/rNc453R8qY3H9bW4vj3eHx/nL7oaI2u2NM/xVeSlFb9UenOb3CZoga/aHP
HBBn4vj+OFcb4L+f4/vjr28VDpc4fgDW/nfNiSccPwD7RtkF1XL8AHTyvbmh
cUNx/ABsFCZcbClqq4GoXO5ytp2oMRCF2nPLHEVtHIjZzsG9nDh+ILIjXX7j
dSsPNGt//Kg03gP9V5Qe4f2NHmiXlLhIer4H4qvm9uf8rDwxODhikzR/T4Qc
PvXxb87fE2lt1nWW1u8Jnz0nezE+Vl4ofGPvLMXPC9sK2zVmfI1e+FLY6uEQ
jvfC5Fm2x7g/VoOQmv9uu7R/g6B48NeBQ9z/QZiTb/d+Ifd/EIofCgbmh9Vg
JDZv2lvKn8E4rtMmML+Mg+E+OLmhlH+D0WPym0Dmp9UQTDjSxF/K3yHYVPul
DfPbOASTgz883Mn8H4ImtRvOpjH/h8LjZeonV9bPUCxo1+531pdxKOIU/a8s
E7V5KKw76O8Esf68EZLZ+8w3sZ7hjd+/jvJhfRu9YQp3ziF/zd7ILcpuK/mD
D/x/PaMmf+EDeZL7Q/LX6INB99Ja0n/MPjhz6WOaxF9g6yTvn8lfGeBxZttu
8hfAyY3jC8lfAUg61vEY+WsEXp+4t5L+aQIuCu+K6K9mwPbOb3r6rwW4a8xM
kPx5GF7ZvH1H/sqG4czLY5vo7xiGrmcD39L/hWFQlOX0JB+Mdfpzr2Pkh2kY
1mX+275K5It5GGzWeWeTP5ZhuPTLAr8k8mc4SiNzdpNfsuE47Xq00UuRbxiO
pDY7phwRtTAcf5oKvdaSh8Px7FBKQo6oTcNxuEhu+7OozcMRGXAk+CdRW4Zj
8r/nnXjdyhfPFc2WcrzMF1Pj7s7k/eGL1WVr7knP90Xu1ou5nJ/RF8tPTpU7
ifM3+SIpvclbrs/sC7+NqhHruX5fVObvqWJ8rPwwPWbjzpFi/GR+cHL92a1Q
1PDDbrmyfhPG3w9lbov/nkDe+uF1q3Pdn4ja5IeSHbarU8T9NfthpuXN/jvc
fz+MtP61oZL8HYGgScvqPxW1bAQ2dZ4zcKKYXxiBiPdb2zdk/o2A7ZvF/fPJ
4xFomBHyL/lrGgHz28bvyV/zCMwab7ciRcx/ywgUt/g8+hP5OxI+ypVPyV/Z
SGy4Vf17X7G+MBKNJugbnxO1MBKhx66W6lmfI7GnU/Zq8tc0Eo5zVi4if80j
0UrYPpv8tYzEt7ynvvdZ//5I9PjNRP7K/NE5fmEq+Qt/jPgc+zP5K/ij5qcl
myV/8sdvY5wq6F8mf6BEd5b+ZvbHIetCI/3P4o+27qvOSPyVo/7l28vonzI5
ugmGU/RXyNFl4eRA8leQY9f+l03JX6McM7bd/ED/Nslxs3LbV/q7WY4WyGlN
/lrk0Do06CPxNwC5nwtAfsgCMCz0rS/5ggD8WbWkF/kjBGDcQWOtxKcABCyM
XU9+mQIw62CAM/lmDkCjVU0mkX+WAIwdF7dW4m8glkXtXk5+ygIxzmifTL4i
EE22PnojE7UQCIcxZ8MkPgfiwKk20zneFIjsni+zeX9zIIbMdA+Unh+I97JB
z2q4/iAEWuuTOH9ZEL70lm/i+hCELu3DLu3j+oOwqoniTgHXH4Qpe6wvTuf6
gxBbb/4ugesPwujKF3nkryUIqlczMiT+BiMnt6WS+ycLRtKYF6nkL4LxS0TM
BvJXCIbVNs/20u+zYBzaZLnflfsfjGO291owv8zB2J7RoGwn8y8Yj+xWNpL4
G4KwObcbMX9lIYjJHHvrI/M/BKdTFm4mf4UQ9DDk5JO/xhDM959wmvw1haB4
7vix5K85BMeGz9xG/lpC8OP5SQck/oZiu67dEvJXFooOfdfbk78IxVdd8Gjy
VwhFVW51Q/LXGIrPi/9IJH9NoXhzyraS/DWHYsv0J87kryUUt+a8XyDxdxRK
vlZvkPg7CjNbd38p8XcU1irKn0j8HYVRrWT27E+Mo7Di74EfJP6Owr/ekXYC
+TsK+vNTbkr8HYVa+bBrEn8VaBI0M5v9k50CrV7EDKa/yxRo3PHefBtRuylw
KffFRfIXCgyzfTaW/FAoIOudc558ERS4P/dPL/InXQHltW31k9kPKrCse48p
5FeeAlMWh1wi30wKCC07yo+KuliB7s6FzdaRrwqEjx7qlivqCgX2TjfcI18t
Coz1PuecKeoqBZaXP/og8TcMTWY11XO8XRgW3YuL5f1lYbhzruhPPt8tDJ+6
no16RT6H4abfg5adxfkr6q7veV3C9QlhOOa+oX4h1x+GRvIXm95w/WGo//iK
yl+MX14YYuqduEH+msJQmd6pkPwtDoPNqk+GiaI2hyEyZ+k+8rciDCMTgjsL
3O86Pa3LwLuirgrD/l6DMiX+hiMmoYmB/LULx7rPD/LIX1k4BK+DqeSvWzjk
HZtmkb8IR5dD3w/sLeavIhwPYj2dTohaCMesyOpS8jc9HD9OGptN/hrDMeTg
P1Xkb1445t9NWUb+msJxfsDx9+x/i8NhSEldSf6a6573w6N55G9FOO4vSM4k
fy3huFAt05K/VeE4OyO0o8TfCMzcnD2e/LWLQFr8cS/yVxYB9z4GX/LXLQIe
OUU/kr+IwPfP3i+gfyki8FeOyyz6mxCBZVsHupO/6RHo/6X7ZKk/icDz1M0+
5G9eBDpdtBtLfzVFYGK3bs/pv8UReLptzEb6szkC+/OH/Er/rohA2T/dF9Hf
LRGY/nDtBvp/VQSu2F86QD5YRcK+x9XT5IddJM5cP3yafJFF4ofgoyXkj1sk
BsWv+lniUySOzejtTH4pInHouvU68k2IxITVhveNRP6lR2LD9391kPrTSJiS
VC3Jz7xIPLMadq0TeRoJZ+vhqeRvcSQaT645zevmSOz8y1zbVtQVkfjPqsqP
LcjbSPzaZMExPr8qEp+8emgl/kZh67Y/bj7m+qOQUPOLC9cni8LHr4YIaf1R
+MF/usD4IAotrr2NYvwUUXhh3jSU8RWisPzWHx0Y//QoLNx8/Js9+R0F28q7
1c+4/1G4Pd5Un/trisLA52k+0v5H4XzJs30J3P8oOJbsm03+VkSh4xabfa/I
2ygsW2sYQ/5WRWG29Y97M8nfaFhPe37IU9R20ai9cHcF+SuLRps228eQv27R
mPdqv5L8RTRKR5StIH8V0djuvmM4+StEw+TukUv+pkdjc8m1VeSvMRo/+bVP
IX/zomHlLHuhFbUpGlMmJwSRv8XRWHB05Ns+7IejsaTPd5Hkb0U0jEWjnpK/
lmi8dz7Tm/ytikafc8/WSvyNQcvztUfIX7sYNIjo2pLne7IYnDn5tBXP/9xi
kLLEU07+IgZTYtR9KkX/VMTgyb3wUeSvEIM7V847sv9Jj0HmUO9O7I+MMQi+
EnqK/M2LwerTtvPJX1MMQmxkN8nf4hhsPvHQmXwwx8Duz7TD5G9F3fxGajuS
L5YY7Ay7mkv+VsXA6WxLBflkFYseZ/5znPy1i4VLm6UdyDdZLCyGHjkS/2Kx
cZefnHxELO6cLfsv+amIxdrvVM2nsF+NRYo6LJT8TY+F8MqrA68bYxHq2GUa
x+fForNjbirvb4pFCfqVSvyPRbuZrSI4P3MsVuwJb0r+VsRiyfWoNVyfJRYN
T9d7IK0/FhmPnGcwPlZxcLxd0ZP8tYvD6BH1VzC+sjgcfl4aT/66xUGXeMOO
/EUcsi+rYslfRRxe1bffzf0V4lCY+E3qf9PjcGLsgGrmhzEOG+83vMH8yYvD
kL3Z75lfpjjs/5hxgvlXHIcGC9afZH6a47Ai9PZk9r8VcZBHOiay/7XE4aTl
5FMp/+PQZqW+UDp/jseTmwnNyV+7eHzwGLeFv29l8bAuWFKP/HWLx9wvq9dI
v4/j8elal8bkryIeCfFBb1jfQjyiFs+9JdV/PMbHNPxNOh+LR1HHwIf0j7x4
fBnf9Q/6iykej13H/0X/KY7HlCL1ZfqTOR5lNhPf0b8q4nFt36xK+pslHpcm
2C+V/C8ep1ofv0V/tEpA5rT0AvqnXQICvOPO0l9lCXibezOA/uuWgHHfH20g
9UcJuLxt8Av6tyIBJSM/vqa/Cwmw/VpSX/L/hLqO7nA78sGYgCVLjncjP/IS
oDPu6Ua+mBLQznp9K/KnOAGb/Hbducj+LgFtX3aZQ35VJGBp9s7G5JslAd53
/0iU+JeA+14ls8lHq0TcvrRrKvlpl4hRjfJGkK+yRMyqHXGb/a5bIv4xbfPh
dSRiZ+yzdI5XJKKy4uA43l9IxPnBvr4S/+ueN/XC449cfyKWZdwSOP+8RHy6
sHE712dKxOvU15a9XH8ianqjeg3Xn4ge9+e/MHL9iXV+2+96CtefiEujDh0Y
zN8/iUgbXbCe+2OVhIK2/Vdx/+yS4LBhbPFB7n8SGn/3sGoB9z8JJ2o1GcwP
JMHs6jKM+aNIguJUTRbzS0jC7V+29WX+pSchoOD2dOanMQnlYw/mMn/zkpB6
9dZ/md+mJAzwbDpcyv8kDP8x1Iv1YU6Co+z8RNZPRRK6hyY6sb4sSXjvcDeV
9VeVhI+j70yX+t9kPP7pXU/y1y4ZXn3qlZG/smR87ZDcmfx1S4bV0rIz5C+S
sbfPejfyV5GM66dOnCR/hWT89jakOf0nPRk5T65NJ3+NyTie1nw9+ZuXjA2N
l71h/2uqG9/xZhX73+JkGNI/OtMfzclI7x9gQ/+sSMYeyxBn+qslGYm1SW/Y
/1bV3X9M9VOp/03BBrttC6X+NwVhsXeDpf43Ber+6xdJ/W8Knu18dkXqf1Nw
PCP1/+l/UxAV4X1I6n9TMOvxnC5S/5sCueHEQ57PGlPwbnf7IKn/TcEDzdVV
Uv+bgimLXn3j+W9xCma2Wrid58PmFOjOa8/z/LgiBaqTxVqp/03BVK8vK3j+
XJWC8d5NVVL/KyB3Ru5ujrcRkFhWuoL3txPQqrxSOn92ELB446dUzk8mIOeX
ph04f1cBe8ZvKeL63ARsTzt7l+fvngL6bRk4ifGBgJpBM9szfnIBbePLpjC+
CgFbV+/wYvxjBRQ4Vj/m+wFBgObY+q7cP4MAm/l9jdzfdAHCX/Wmcv+zBPTM
ermN7yeMAv4ucFrE85N5Ak7Ejini+408AVdrb09k/uXX3f9b1wlSfgroOLzI
mflbJKDNoq31md/FArY8+XVhkpj/pQKK3K/5S+dDAtZqVhQvFuunXIDsP/tD
WF8VAkKOehSeFvV1AR9mdR7G+rQIGPpL1x3/irpSQOCkZD/Wd5UA7V63Pqz/
GgHLsx8/vsf6V+KvMudB9A8bJUat1Xwby35YiQHlfzSh/zgoYTjz0E3qD5S4
nBsRQf9yVSJbWRJIf3NT4nuhumaHqD2VgE8LX/ojlGjavWlT+qdciWG5zl70
V4USOx3e7KP/xirRK8c2i/4sKGH9JlhN/zYoseHDtVT6e7oSwpVj0+n/WUp4
XB26mnwwKpHZzXs7+TFPifUuE3eSL3lKDP2SsY78yVdizUR1hsQnJcqWD+pI
fhUp8bAibT35VqzElJFvvzQU+VdaN9+Sud3IR7MSTX5a4kJ+liuRsXfl247s
Z5Vwqf3yC/l7XQndjAXved2ixJCjv3bn+EolfPu7uvH+VUos/ntLQ/K3RomV
d/O2cn5WKhw7ntWd87dRocD+zDSuz06FsIlvt3P9DiqciB9YzvjIVMha5HWc
8XNV4XmA9w7G102FyFPbVzL+nioY471nc3+gQjf19mncP7kK3x5OWM79VaiQ
PnbSDWn/VVDqtAnMD0GFzjuf9WL+GFSYMGugjvmVrsJy/TtH8jdLhfmfdmRI
/FWheo/tZObvPBUaNroQz/zOqxvfs2U/5n++CooWr1yk36cqxHw0aFg/RSq0
f5DfnPwtrptP+Lto1l9p3XqTn6ayPs0q7P7x/WfWb7kKG++kzWN9V6jQyHPA
E6n+VXBLO5pDf7Co4P/77Sf0j0oV2nnczaS/VKkw9a5hN/2nRgX1tuVOUv+r
xoTZl73oXzZqJPywfhr9zU6NT35TJtD/HNRY3PrzavqjTI0pJxpPon+6qtH2
WMFc+qubGvazRwfTfz3VgEPrwfRnqBF+OORvvv+Vq9Fq0ue59HeFGr7uF47w
/W+sGi4nTtTw+ytBjZTvruTw/a9BjQ7+3c7x+6J0Nc4WNutG/mSp8cLlgoXf
JxnV+CCPH8T3v/PUuCvfPJPfN+WpEfjxgYXfP+WrMWBNqfR9lKluvfb9VvH7
qSI1/Frsk76/Klbj9MrbUfz+qlSN3ft82vO6WQ1b12WjOb5cjb2Lb/vy/hVq
nFs4N4fPv65GWdrn5pyfRQ2ng2P2OYrzr1Qjv00LOddXpUaltlsWvz+rUcPd
/mML6fsrDSp2DdvtJ8bPRoO+PdJbMb52Gty79PffjcT4O2hQsrt4xjj+PtLg
wmP54UeidtWgzXy9Y5K4v24auN9Qym5x/zV40e+3yGQxP1D3/8eYhzwWtVwD
70VeMePE/FJo0KTsYrf6Yv7FauA57bs+S/k+RIP8S7MfdRfz16DB4jvTTx8R
dboGaOCUnCjmf5YGJ3pnOH7k+bMGugpZ3iKxfuZpYPvm/oDeYn3lafDvRZdl
p0Sdr8FPPbMHa3g+pcHRPaF7voq6qC4e9a+fCWT9a2CpbbR/Ketfg2EZ2izy
16xB/Gzbiy6if5RrcCzi6u/kb4UGD0MytuwQ9XUNev558doHUVs02Gjd+JuH
6F+VGgwJs//6E/tdTV1/4VJM/tZokLw/6dtL9r9aXOtQdbaL6J82WnwrXmRF
f7XTovivG3Ppvw5abLjQIkjqj7RQfisYRP921SKjsFpOf3fT4ukDD43k/1o4
qitmkg/QYmBYwWryQ66FoBA2kC8KLYZcUywnf2K1sD5yIJV8ErR4Oy+lPfll
0KJwfuwG8i1di00lOxuQf1lajM5MdicfjVp4eXzsT37O00Lx5V0D9rd5Wqwp
KDGRv/latFk97zvpfLru/td1fhxfpMUkJ1MQ71+sRdzhL858fqkWg/rOPsv5
mbWoXhwexPmXaxHw7vI6rq9CC4di4QrXf12LtNAbzxkfixbRfo7PGL9KLV6c
D77G+FZpYVudVMb419Tt1+G3RVL/q8PEcs1a7p+NDnLboFLur50Obe9crZH2
X4foX/dnSucjOvzn02U5+euqw6xlnaaSv246XBnUoD/566mDR4vcmeQvdHju
uHAu+SvXYcLNB2ryV6HDh7RHHuRvrA6n72tdyV9Bh+x+nQTy16CDS+WdhuRv
ug7bvAfIyd8sHdamdImVzp91eGBMPUX+ztOh3jqfAPI3T4env3VdTf7m61B9
bbo7+WvS4WPgy1nkb5EOI1W2TcjfYh02T/YfLP3+1yHCvuPvR/l9St16L+/Z
0EPU5Tr8417PQn+r0OFk47vl9L/rdfPpduwf+qNFh/1jD+6mf1bq4L9TsZf+
WqVD7NXqcfTfGh2sW4fE0Z+t9HDYH/6I/m2jxyqXVb/R3+30+OHMueOS/+tx
v2XrqrU8H9UjfGiLKeSHqx6XjzTe94r9nx7FW6uakT+eepQa6x1JYP+nR8Wi
su/JL7keIc0Ucc95nqzHzHa39phFHavHqKb/RBfwfFkPpazHj3NFbdAjslxZ
bxLPm/VoFjOoywRRZ+lxZq7DyyyeP+vxYtZGcPw8PQ5tUjnw/nl6zMZoDZ+f
r8fAC+Wvn5H/eji5rV/ZSZx/kR6TD2f34/qK9Tg/Yb7BJOpSPSL8ljVifMx1
8bK82OUrxq9cj6DLndsyvhV19/u6xNJQjP91PVCQsSpD1BY9/hzd8MFDUVfq
IbR+GZjI8w49HEs8Y29y//Uw/dh+aRLf/xqw0piX84+obQxYbpNSnCHml50B
LXYuX1CPv/8MqEkpLFjC9yMGvG03TUn+uhqQadoSQf66GTByTbN3CWL+exqw
4b7HkQ+ihgHjvbb4kL9yA4IDL77pJdaXwoCqzD0p5G+sAQ/iklqQv4IBTof7
rSB/DQY03HPxKPmbbkC9e1tKyd8sA1zy3vxM/hoN6Jw75Rb5O8+ApTMTNpO/
eQaElTwyk7/5BkxJXVhN/poMOHVE7kj/KjKguV2MM/2t2IAouz23yN9SA+wd
3vWmP5oNaJSWUp/+WW7AyxivQfTXCgPm9HA8Tv+9bsD2038soD9bDJiW/aOR
/l1pwPEsm0X09yoDen3at13yfwNee6y7RD5YjcbY/66p+l9+/A+APvvD
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxVmndUFNnz9vkqruiqoKIgBgYVRUxjICnhAQTJDDlDTx5QlDUi6jpmzOga
wDgmxIwZ85gxI6sLYhrDKmbEAEZ+vOdsFef1H06dtqb73qp6Pl3V10Y2OlzZ
yMjIyKaxkdH/+/v//yvxoL8fv7wMbtOEbIOHzO/Db12bk13pceC+VVpvU7Kr
POJCzV/bm5P9yaP90LBWnTuQXesxRq10+9WZ7B8ej8amtLnalWwjZO0ZLtb2
JLsRks7Nam/Vh2xjFMb75K8Qk/0bbGMmFbwfTLYJzI1j7nR3Ibs5Vj49pxno
RnYLHA8/Ht/Ok+xWOBwYc/HKMLLN0MZxgJ/Ej+zWODIx3mJzINlt4DDGq0wf
QnZbGIX3nL0tjGxz5JxcsScykux2yOjdPu9iNNnt4fTOUfc9lmwL9JgZdOlD
PNmW2JNa+mtbItkd8C5wSl2nZLKt8OveUE1oCtkdsfpehyvuAtmd8HDvNrxi
uzN8bVJ7hEnJ7oJfEe55Y9m2xpbiy90brotwwsn/3Uvy14rQ+1fUoobft4Em
d5Qp319rg6QPa4SG5+uKCabTZ/Dza7ti5pMzlg3r64ZuXY+c/kbr13bD8akV
5Rd4f7pD49q7MIL2T9sdd3++Ts/n/bXFyqqiW6dp/7W2yHIoKN3I8emBXzUr
/xdK8dP2wLgRR/68zPHtiU9WtffaUvy1PdEyqm2NmPPDDi1s34d3o/zR2mHV
pNY/33J+9cLLayYtllP+aXshWnlLbsn5aQ/PTo7KPyl/tfZYfCw//DLnd29k
hD9Q/aD81/bGotS+fTtyffRBzxt5LXpR/Wj74FSva1N6cX31hXuUrp2I6k/b
FwvSZfFmXJ/9YD1hzJHvdTf/u94PvT9NjCz//J9t1B/5XwL2nXxN1/tDbHLv
7/2P6boYU9b6HT5V9p8NMba6Jo2rvE7/X4y0yBMHHc//Z+vFEFY5DC08Rv4D
8GTLi/sJ+8h/AC4bqQ55FJD/AKxunOQl20D+A3Aw/8jFyyvJfyBadHx+ZvJi
8h+IqID9kj/nkP9ALLCyfPjPn+Q/EAdNyvznTyT/QUg6Zmy3PoP8B2HEmcPl
7dPIfxCKxmWsr5WT/yAEjZsQ7JdM/oMxf86B7s3iyH8wqmw+XnGPJP/BSDGx
Nn0bSv6Dse71Rqv2QeTvgGaZ5W9P+JG/A3rmObV95kP+Dtjgt/v4Qm/yd0Bm
4NaeRz3J3xHrp7+emAbyd8TBaVaNNnqQvyOW7jllk0y23hGpk1XZfN3ICWWB
7Ysb/J3w3NSt1zH6fa0TVly402wx398Jpx1a+/5Lz2fkjCLD3ien+Pmd4TB9
l40lrU/rjIcl92zf8/qdMaW7apUn7Y+RC2Lcku78zvvngruD5w4JpP3VumCg
y/6OP3j/XeAQuq2rFcXHaAhursu/uZHjNwSHJqUHLab4aoeguH3QngqO/xDk
/rZ5/gzKD6Oh0K/+Q6Tl/BmK5prexjcov7RD4T5n830V599QzLy+2W8Y5aeR
K37fOVwmcP66oluHRz8PUn5rXfH0zqjooZz/rmj679DWb6k+jNxQbfRNfY7r
xw2BRd2TjlB9ad1w4tGlvmep/vRuSF/kf+Y+16c7wopv/qqj+oU7Rm+tTmP+
at1xYVNEW+av3h26NkaaBv56oO9vpaXMX3hg6dclDzuRvmg9UG5vWveT9Efv
ge4POxy6wvoEHEwJKppG+iUCMstjF3cgfQPwqUXpF9Y/Abhpm2Z4R/qoBXy/
jaxh/dQBn29KkwaQvuqBOfIjbuakvwagZkDcvAZ99kTfYy73Qki/RZ7od/jb
BtZ3eKL3LrED67/gieq3cw5tJT5oPRG8wKU8nPih84S0kWHJeeKL3hMG2aY/
vhJ/DJ4YHxma85755IXmRkdythK/RF44s7hzlhXxDV54EzGjNIj4J3gh5u2l
n0OZl17IaOOV/oJsnRfGttnvFEJ81XthU+PdkzLINnhh3dS2zfm6kTeCkj0K
n5O/yBt+3aN68e/DG6ZBew8F8v29sarFFoMlPZ/WG0XJxm820/PrvNHUb9qC
t7Q+vTdGTs5qVcPr98aY+IXdzjJ/h2E/an6G0v6JhuHtkC3rN9H+YhiCv+9v
dYL3fxiGXt7dYj3FRzsMgQu69wqk+OmGYbBUcuICxVc/DIXZIe3MOP719vfX
9n2Zvz4IfbFBZ035I/LBBKvH/q8ov+AD++xW0hzOPx8E248qNaf81Ppg8+oT
d7Mof3U+OP559r0LlN96H0hfXW/6lfLf4IMNZvvvWzB/fVFhl1tmS/Uj8kVy
UG9pD6ov+KL1ntTWnan+BF9cXLVlbEuuT1/cunOrxxeqX50v5tv0/9/fVN96
X9x9nJFbRPVvqL/fA6HJHubvcLzysO57jPRDNByFNf/YPiN9wXCcXd/s1EDS
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
Hm/d0aKeH/8HeDN+PQ==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.24352997584444036`}, 
     PlotRange -> {{0, 200.}, {0.2441213288087636, 0.25594838809522885`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.24352997584444036`}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200.}, {0.2441213288087636, 0.25594838809522885`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756982103699416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", "70"}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", "70"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
           "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982179540504*^9, 3.7569821844346657`*^9}, {
   3.756982219584794*^9, 3.756982222924718*^9}, 3.7569844977970667`*^9, {
   3.75731798843701*^9, 3.7573180203213654`*^9}, {3.757318107196981*^9, 
   3.757318109571142*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
+kvtQ9ot/wdQhujg
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
UHHrsubAX8y/I5ItjQeZ9TH/jnhSxTu7+jfz74gwO3eTKlYPeI5os23XHd7K
/DsiZ2b3nrnPmH9HfDtlUhd5k/l3xPjvfzRWHmP+HWEUtvLZjs3MvxOK3mX9
LBMw/04YPt1I8ccc5t8JRj8iB/wjz/w7IWuV/PXlxWz9nTAgKqn0sx1bfydc
i3qUsekOxUviBDfH8092uRBLndBpl5qyQMLi74xuudN/eAYs/s44sPGq94vd
rJ44Y1v5moXzetj+c4bG9oW+g7zY/nPGUpfxxtsKaL/mOcODf+lBeCfb/86Y
enOnTdsctv+dcX5TzKXra1j+ueBKq/P1kKvU/3FcsGZj8GbHH9QfwgUuFfkC
xVnEPBdsEpy+breA+stEF/y1cPHXpfup/8xzQV2J4n6LeupXJS44F2zUpzmQ
WOqCRn2D3bdmsf52fv9669tfiqb+lzO/v5+/XbMrm/plzIcf/5rO3Rzqp3nz
MTis51bi0NPkfz7m9vDORSWcJP/z4TbwYUFqO/XrkvnQu2m/aWDsMfI/H58X
q8bW9rB+3xVOW+SUm1OOkH9XdB2WdzeZQvoArsjykh+2+84h8u+KvG+epY2r
SF8kuuLylJdrLliS/shzxUDZ7T1vh+WRf1eU3W+9++bGfvLviiOLazvqdu0l
/25oy/WdszSZ9A7HDUrfRyenZZAeghvK3DxPnLycSf7dUO1spgpZ0k+Jbsiv
NPHc/A/pqzw3eLoZWBz6k0H+3fD850YM8iE9JnXD5GLXnv/ep5F/d+Qdf9k1
7xLpN447Rn9sVjO4m0L+3bH+gqnVStVN5N8dDfW6sRX5G8i/O7xWpHksilpP
/t0xUfOnpDiU9KLEHQe33p9zfEsS+XdHquYkE6cv68i/B7xuqmwTJhFzPPDp
r/Dahw7E8IDNjdIurhkxzwOtZS+w34s40aO/v1LWW5VJnOeBvhNeUy/3EUs8
EJ1vu8sqnfn3gKBi4P0ua6ZnPdGz2mR590h6fo4nLs7uLIzrI4Ynriec/3lj
BOldnic29O3hLpxF65Hoibt7FxwZs4zWK88TuS3po3fVbSb/nnjqExbaZbuF
/HuiuHN+iKCGrT8XK18tqXVZmP4/rMRF6c49MdlKFD8OFzpu7y4s+EZsyIXK
o+wvsu+30/NxkYptccvfUPy5XDwYGfektmUnPS8Xh65sStL5QfsllovtTXO0
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
vLwNd2xWmc3/A8wikAw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxt2nk41N/bB/BpUdKmrxatBiVFsmSLeMsSIWNfh1mMmRaRhDaJklJRUZQy
aVNSkkqLmlLy1cKvEm1o1z7tWj2e63ef56+nf7pe15njzPmcc+7Puc8ZbVGM
j6Q7h8PR7sHh/O////+/Bvs7tx4eqf+oYf9ft9nvHnN51ZY3ZuR2+5Djv35E
8F3ISns1028RV2/5kr/YJ/9z6HzCw3Byh/3gBkP7QVpR5N/2JTMFIyo+R5M5
eLArttBrwUJydxzIXHArIzaJ3BPT7EJbsj8uJ/fCh7QrG799W0lWRfnt5gC/
yavJatjYqGttuiuD3A9tN9q8yu3XkwfgYPygie29s8nqWNp2onaKymbyINjL
Uj/tHpJD/gfzxu5Y09dyK1kDnwYv/O0qzSMPxsvo0IOme7eTh+DdhvDIPW8K
yENhfN/PItmmkDwMd87opDfVysma2ByoYqD5bTd5OAr2RuesHruHPALg/Rpu
5LuXPBL1T/s9m7ByH3kUzgwv+begdD95NPyU3VeebDpAHoN+ZRXFx/8Wk7Uw
vM3ap0X7EJmLScvGjtiIkv86hYtVSU+4E0IOU7k2umX6WevOL6VybSCuxqlz
6REq10Hot437PNOOUrkOHvZSfXXXoYzKdXHw4Z5JUefJKbpI3JlpZWp5jMrH
wtf07/sxh8kpY3H1ScPwYaPLqXwcCpqXZ/RdR04Zh3Xtx4WfP7FyPfR5nLrm
WuBxKtfDmG77t26tJHPGY8HBr1vDhlRQ+XjIt6genjifzNHHpbnc/hrVrFwf
w4aWLDIcfILKJ6Bpf53PZiE5ZQLcq5aqRZaw8onwuKLldOUjK5+IlmWV3EdT
TlK5AVzzHFPuxpNTDPD0uINT6zFWbgj3HUcT9N+yckMkO1ceeK57isonwelS
43OPYHLKJAy9s2bq1vWs3AhObnNjf1WxciOku0cfOPWOlU/Gwc3Tlb1GVVL5
ZNjM3P9qnBuZYwyOdqS99yIyjKGVC1yRs88bQ1pq6111jawwhpFa95iF31h9
E7isat2jpX2a6pugYcf2mO/u5BQTrDI64TopkawwQdC3Vx8+FJE5plhhUf13
dj2rb4r7fx6ZX/zN6pvCxW794KEGZ6i+KXarDLdOCyFzzGD4LefHqEwyzGBv
FKNUniOnmGFp2ewsFSWrb4aLvrrK4LFnqf4U/Pi6KOJ5MBlTkDPfc+W2bHLK
FGT+3fYgsJasmILi3z15vbqdo/rm8Bl3qXLJVDLMcTvgTMnqeHKKOTRMKp2U
R8gKcyQvXzti+StW3wLLts7zbdetovoWmDOkZ3k7n5xiAfHZD6rG28gKCzx+
csZtXj2ZY4l/h5tEuPY6T/UtcWGDv3G0DTnFEsNbXO6lzicrLDETCTtNCskc
K/Sdc1Wqe4PVt0LLa42jPTtYfSusnlM8Il3rAtW3Aq9yhoDvSOZYozXy0DMX
MRnWWHdJM7/XCnKKNWr/KV8weyurb40F0SoOLgdZ/amYHPqyPfkUqz8V3cRP
xnW7yOp3edzc6KtXWP2p0HTibbrHzLHBgsmPXT3Z52GDVdNyNrlUsvo2gPr4
F98Psfo2aHnb6lyUz+rbokLLYHTuKlbfFikH97yYNI/Vt8WLJM2aJh6rbwvL
Rd2r1cxY/Wm4WXJFw12D1Z+Gs2u8/4z/xJ7fNGjmFV2b2sCe/zTEvDeYM+4I
e/52OPxD3HfTevb87VB3w3mj4TxW3w7LNAc8PuTJ6tthRIa500UTVt8eauny
FeOGs/r2UEzVGri+J6tvj6G9DNz2f2Hzxx5Z1f4ruK/Z/AF2tKRZyp+TuUDq
/XDPSy/ZfAQ2PVELGf6RLOh6HZ3SeW3Qnf19wCGlddzCkWQ5IEmUWwRPY98X
uHl8soWVjNwG6Mx+8ySogH1/Bzh7+TV+vEfmOmDZgbRdetrseTpgykLf6b3j
yAIH5M/JaMi6zsbHAVbTXDX8NBXUvgMeaX7o9o8XWeGAUrPAjcJ15DYHXFjv
dUOzjsyZDov4XJeeAy5S+9NxQXd4xEt/MqbjfZj+5WW7yYLpyEnM/ZygJKdM
B7d6Q3PK9EvU/nQk3s6U2m0jK6bD9rWaxPM9uW06Zoc9VHeZUU3tO6LA+pjK
ud1kriNkATHf7P6Q4Yjnllc3hgZfpvYdobW+3LXgBDnFEfLARebrBl2h9h1h
v3nlh9J5ZIUjJl8bbp1dQ25zhKH3mt5nx9RQ+04YXtdfeTqezHWCmmaM3cha
MpwQa86xjNW8Su074eP1XO4sCTnFCVVWcfNmHSHLnVBUGJ4/8DNZ4QTlgkpf
c7Naat8Js6QOo2fPJ3OcUbcrNy5kL5nrDOchE4wu3CHDGfmvJp7y7SQLnDEy
tlr3ge6/1L4zzre3zNGaTpY745K3UcDHYLLCGfPvBRfrzyW3OeNmesm3PYvI
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
9wUmtN9NEqNddZJp1XyWf4uheX5l9boycoYY/b3rv/h8Z/m4GD76JZPWOdJ+
O0+Mx9s/9S3MZftzMfpU9/L88Y5cLMZnl/gX3z1oP18mxoKrmlxlOblSjLrP
SU0GXPZ7EjEqSnjn23PItWK02jn9ChhE+UiDGBtWN8bn5ZKbxRh8d2BPhTbl
O21ilGeLjjacILeL0RFbs6PKm/IrpRjJTWXc2V/JHWL4i29n7ZOz/C8Ses+K
Bmxn92eqkTjxMXKqmJ0PqkfiVWXR1eQXZM2uzx/7ozzhxu7LI1FmvXBS3VGy
fiRmXrSZk6BJ93nGkThap3NxfhrZKhLBNx33CpVkRCLt6rL339n9oGskjh8f
09h4k8yLREDFjtk77Ol+MSgS8rpOk+dl7D48Em/m7tP21KH7SVkkYqIWXp+z
hRwbiWhHo6t3etD9ZlIkPkwvXcFdSE6JRMR3tD1tI2dEIsv94ZsKD7o/zY7E
+RfrYwxOkvMiUZG+IbttFN3HyiOR2LnFKzaFXByJdT/qLRe3kcsi4bz+1aqd
tnQfXBmJi8Y6A9Ny2P1wJP4o73befkmu7Wpv1Ok/dhZ1NP6RyEjcmZi4gtwc
ifrhqX/Mq8ltkbAY5WNv1e0ajX8kEn7wFzhYk5WR2Dz64/gRc8kdkZgYtn9P
9lYyRwLHKS5lSWfJqhIs07FUlNwjq0uQtF35QvUjWVMCu9ecqvhu12n8JfjP
5idL7qmR9SVYu2xshV5/srEE/bf/WOmtSraSoLvVBku/3/T3IMGGudFLjV6R
XSVY2rZU6/lNMk+CON9CldRScpAE8QOK7AevJgsk+LKx5/6j/mSZBJMvPPeO
1iLHSjC6R5/Hc57Q80qSwDRcZ/q1XeQUCUrDfp0+4UfOkGDJI/fWgJ7kbAkM
c2dntpbS+ORJkDb+Rv1qb3bfL0GZq4HKqg9s/CWwvB28angGG38J5sfO/r12
JLmy6+9HP6kdfYjdz0vw9/S73dpTyLUSpKquXvniNM3HBgn2iU2LL9qQmyXo
/bX7yH5n2O85JLiXNvGJjjm5XYKmO3zbqFJaH0oJBiweqLTWJXdI8PPTteCe
29jvT6LwePS5A0Z9yKpR2P/y7QvdJbQ+1aMg21Oq6v2a1rdmFNQiqtXGhrD1
H4WFFdYn+7Lf0+hHwbSv3puEqey8LAr6X/c5FgdSvLGKgoHrwQJt9vsgRKEP
L2uFiR7FL9co1Lh/VyvRoHjHi0L2gcG7Qtn5elAUrF88W9qnk93HR6FQI/Tf
uL8Ur2VRWKTm+NVdhRwbhQLukCH2g+l9kBSFbxMsua8N2P4vCo7ZrQdaPNj+
Lwrh/xoMlrP9WnYUzmws27HnMHv/R+GRk7hq1lvaL8ij4PxKx+872+8Ud30+
eVz6k/WUX5RFoUNXu9HpPeUjlVF44rmgxCGUrIiC3aO843cPUP5S29X/l3N3
pZdRftMQhSVHvg2Jb6D8pzkKn/7zqiWiN7ktCmhRX/Xaj/Kl9ijolW15urWS
8ill1/h51WyqMyF3RKEliPe64QL7/a8UV7bEDXkoJKtKUcjnQ3UYWV2KkZpc
Eb+F8jdNKT5KlwtunSRzpYj9vi/Zq5CsL0W6RRn/2FaysRSr/zTcuraD5X9S
bMj70DCvlAwp9hhyPSLqyK5SlOu2jJ3/kcyTduX7Weej2O+Vg6T4rTv398hg
skAK+1PlLrJtZJkUu02GbjJ+QI6V4tse9TKJLvU/SQq3zYHoHcN+79z1+aFL
g8ZWkTOkSDDXG9jSj55nthQbG2eWS/nkPCkGelTuVT1ClkvR467trFF/ycVS
dNfuGKLhSeNTJoV+n53WcdvJlVJU2Oysvv2crOj6Pu5mshdGNN61UkzrcSBh
3iI2/l395yfX2JwmN0txu/Vstc1Pdr8rxYOOYSKJFc2fdikSy0+mKBay+96u
/n04fFV8mNwhRXSP3icWPCFzZDjka6bVry/NR1UZlj3qq6zRJavLMPVsa2yG
DVlTBqMbmsFxPmSuDBe+PhYUy8j6MuTPajfySiYby3A3VbElcwvZSgaN7Xcu
rywmQwaZ/vcFflVkVxn26+z0GnuLnafJ0PT0j+bAl+QgGaZocUWTf7PzNRnq
HJ4V7BhE600mQ+PWfmOjxpNjZRi2eWJowTSW/8uwuKx3i4sfy/9lGLXo+23Z
XHKGDPf63TXkpJGzu76vU6O1yg5yngzx2itfzjlOlsvQ/mVP0Zjr5GIZTFfk
rFF9zta/DHPf39rY9y+5UgYv17pjKsMoXihkCOzN82mYTK6VQUfjeQhcyQ0y
jJtpVq8nIDfLcGtVlZKXSG6Tobnp/PMMlu+0y1DeufN1bhFZKcM1f8+/tidZ
/ifDJ+NGfYdalv/NhobXnqGRzeX2/wPKZF7a
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxt2nlcjN8bN/CJEFIhleWbCAkpW6VFn5SKkqmmfZuZmoVCJVTE8E2yJXuy
NIiyJVSWUKiU0JCIxFhLWfqKZO3pef2u8/z1+Mfr/Tqduea+z7nPfc411wjh
Yk9RNw6HM6I7h/N//////1PY3ZIlxDvu853xPyvt1Bd5um3ZsYfcZHd+Dm/5
z4qr5Fa7IO3gplvxj8lf7VxLvjxrS/tA7rD7pue58onsD/m33dSew/avmdrX
jgLC0cjj45pBuuRu8NvRX/cHfyRZFfmdQX/f1Iwn94RyQv/sadOnktUQFvV9
mXiBDbkPIi8ERFWKHcjqUP47OaP96WyyBiz8azTxnEvWQq6NKDhunze5P2YM
t3yhax1IHgC/t5Wl69/zyQMRm5gas/lKOFkbBelvj84aMZ88CEZquXcGjlxE
1sGUbcdzE99Ek3Xx8X33G2WaS8l6GGT+KXT+njjyYJTOb648snoleQhS9w2V
mYll5KEouVrdM6NkLXkYdHm9TpzgriP/g35JGn3u6aaQ9fHKul/UDN1N5OH4
EfKoqTs3lWwAfsuckPiXaf+zzABvtO2u+1zcTu0joOV7q9/9UzupfQQsQg8m
9yreTe0jseR9hFfnp3RqH4kppgWnsm32UbshropWnn6UfYDaDaFzTMPKSE9O
7aPwsqLqxbMFh6h9FHTt7+6oqzpM7aNxvTVkzDOrLGofjc5f0/QOXThK7WOQ
8+LSq8f22dQ+BrynyxyNn+RQuxHuupzZYp54gtqNcGr8yeK9JqeofSzaBrb2
bXx/mtrHYv62padOnj1D7cbY0XnT2fJGHrUbo7Df257P8s5S+zhsattaIss6
R+3jsLF54fDX+89T+3jU7jG9d21vPrWPR1lQZOOdjAJqn4D+uc31ZZmF1D4B
IQfaJ/JzLlC7CRzWhX/1yL9I7Sb48NZsOPfmJWqfiPdFColm7WVqn4hD/v96
OL4vonZTqGVOjDjSeYXaTdG/JUb9le41ajdDxWfX7oWTiv9nmMHiwd/YiDEl
9PdmqBsoK1yVTy4xQ/6gfWu+zLxO/SehJnPMv0fvkzEJbmkPHOP4N6j/JMgT
VW64fSaXTMLuovUzeq26Sf0nd30fJ5VU9VLqPxn8upiOygyybDLcnW9nHxtb
Rv0n41VuSeqAQjJnCriPixw7Z5ZT/ynQOK95TFBNlk2B312jPpMDb1H/KeA9
N3OOfEfmTMWLx7nvNKMrqP9UdP+VNdDgF1k2FQ+FNeeOJFVS/6lIPLnJ9Wi/
29R/GozKzv83eTcZ07Bm/wnTEP0q6j8NkpuTr1gfI5dMg6lTZdhrkzvU3xxX
/snauriADHNAd+3IPzZ3qb854qykb06UkkvM0euTo+1et3vU3wILlb8Ov39I
hgWeNVYPvhZcTf0toCW+cNOykVxiAavT/huvWiqovyUwas9dz1VkWMLZwSYm
opQss8QP5zU3B/W9T/0tMcLpVliIJ5kzHfZDlJHcDDKmI2ryuMKvr8iy6Yj4
66ziOeEB9Z+OhSeOzY1cRuZYYVP8kk7H62RYodwjN+Cpeg31t8IY4247jfzJ
JVZot8tOGXWMzLHGmwfXcsvayLDGpxUOOr/tH1J/azhvi7UoSCOXWGOiWapt
/QsyxwaXR1cX8Uxrqb8NyjWfmvdYTZbZ4Ob2gvt37pFLbLBW5w1ng/4j6m+L
tTF7nbQXkWGLnFrJV6erZJktbPv4a3zv+5j622Lh1iyVH/5kzgwUmty5Ojyb
jBm4xu/tYdtGls1ATZW1peGMOurf1a47+fnh9WSOHeY+HaGTWk2GHXIalUkX
Bj2h/nYw2Vpg1uZPLrGDzoSXSp39ZA6wRJF74mc92QCoOtPTK37wU/o84Pvg
+NIoHpkPDIFp3I3NZBkQOO1cpdcNshwI/54XpvGNXAIY9BgWpRxV/z8rgbep
xb+veJA59ui9MFtr/wqygT1s3Gy/JRwmwx6ahQcQVE7m28N71c1Pzo1kmT3e
ci9FufZ4RvHt8XGrPDnegFxij6MDZ4U0W5KV9ii78nFskTuZMxOfzDLnaAjJ
BjNR0i/wfJ8lZMzE46wDg56tIfNnYpqHr+65VLJsJvp0/7uyZC+LPxNrFX3n
zTjC4s/E7sVD3ohOsvgz4Vol1o09x+I7wDr02oiciyy+A35HZLTPvMbiO8B8
wa03yTdZfAfsTlAfc6GCxXfAu2rpHN17LL4DNsyd97u5hsV3wNGNY2Yufcri
O2DMu7SojpcsviOGOIBX0MziO0JTL3VWy1cW3xHzzgi4jzkNFN8Rqeq7fPM1
yDJHHNgX7XVZnyx3xF4n1Wj9SeQSR2zj+a4c4ERWOkI9TPGhNJjMmYWpLUvW
8+PIBrPwx6idq76bjFnQN10b0VLI4s8C57ng47B6Fn8Weg2taC/q9pziz0Lp
uFNRL0zIJbOgMbrcIyOIrJyFuQtuuv1KJXOckMcrsuhXRjZwQrxh8flHf8lw
gsHS8ccCbF5QfCe0NzY27kkky5ywRVFYtOEGWe4E+8rvt3f0UFJ8J/g3a147
N56sdMLfnUc79nqROc6wrYofjESygTP+/jY2ysghwxnbZ6Tu21dL5jvD/tCW
NeaqLym+M3qXY3HgVLLcGRtaKs79EJFLnOH3YQQ608lKZ0wa+PKd310yxwUn
NgitvnR7RfFdsHnQ9sqC6WS4wNSnd+8t0WS+C6p/xa/jnyDLXODf+u2x7huy
vMsGpXf26r+m+C7o1blKfMefrHSB+4H5HTt3kTmzMa1JblF3n2wwG8NkSrcE
jTcUfzYSxyg/hbiS+bNxTjskZn4KWTYb5uPL360sI8tnw+nNufEru72l+LOh
9Nzfe44dWTkbfc22e1SuIHPmYHLp20/PLpAN5mCZcn5/aRsZcyB5nWHpPvEd
xZ8Du615oiVSsmwOsj/9HnnlEFk+B41/Ky/0e0oumYOb969Ocu/fSPG7/j7r
yLZwZzLHFX7PWhssV5INXPEwdpFd/hkyXDG1PG7k9ZdkvisG3hpj6zqgieJ3
/f33Htft7MlyV4y20p+9ZRG5xBUxhVl6ozLISlecju397dtNMscNDUYXpe0t
ZAM3ONdO2z5kwHuK74a/Ng6h/uZkvhtCahYEnvQjy9wwK+hzXZ94stwNO7Xm
3Fqyh1ziBkHa4xuvz5OVbmjyQof/PTJnLmYfy9Z7/I5sMBd3XsnnBP9h8edC
EnWxR2v/Zoo/F+iZ1m/nKLJsLrYMLreeN40sn4tzRcNXj3Ukl8zF8qFjDhh5
kJVzIWvdN9E7iMxxx5e3E4SXRWQDd2RqN7XyF5LhDvMYrfeeS1h8d8QZNaVn
LGfx3XH58IrwmQksvjuSuZuP81aw+O74rd9wsJ61K7s+f9NCi5dxLP48zI0y
6LV4KYs/D355+RNSo1j8eXAJ6GXhvIDFnweHX6bDDgtZ/HnYn6g17Jg/iz8P
cl77Lf95LP48jH40/dUNBxZ/HnjLFy19Z87iczG0bE9+xViyFhfBsy8MWziY
fR8u1pqWBT5SI5txUb5FY2nP72x8uFCZubfg72syl4upwks1xdVsvnDBi2j6
NvsyOYoL1S+vbu0/wuYPFw56j3dd2ERO48J8SipvbwybT1z8Lvh7D2y+5XEx
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
dv8HUNzpwQ==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756982189960075*^9, 3.756982228660385*^9, {3.757317996660976*^9, 
   3.7573180261541157`*^9}, 3.757318115274157*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adiabatic evolution", "Section",
 CellChangeTimes->{{3.7569823517555923`*^9, 3.756982354719954*^9}}],

Cell[CellGroupData[{

Cell["Carrier", "Subsection",
 CellChangeTimes->{{3.75698239138302*^9, 3.756982392224959*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "100"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Total\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.756982388522003*^9, 3.756982396761392*^9}, {
  3.756982836968251*^9, 3.756982843336918*^9}, {3.756985389082337*^9, 
  3.756985389920867*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1: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
c9n9n+mYZfa594Lq/xz+H5ueDIE=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {0, 1.9827901921921622`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.756982400528022*^9, 3.756985392699544*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adiabatic evolution", "Subsection",
 CellChangeTimes->{{3.756982421750411*^9, 3.756982424909872*^9}}],

Cell[CellGroupData[{

Cell["\<\
If during the adiabatic evolution you also increases the Ising interaction \
from zero, the final state will be far away from be entangled. Only a mixed \
state.\
\>", "Subsubsection",
 CellChangeTimes->{{3.757664838713068*^9, 3.757664897632608*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimulationTime", "=", 
   RowBox[{"2", "\[Pi]", 
    SqrtBox[
     RowBox[{"40", "*", "45"}]]}]}], ";", 
  RowBox[{"NumofIons", "=", "2"}], ";", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"vi", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vf", "=", "5"}], ";", 
  RowBox[{"Hamcar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"adag", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Eta]", " ", "a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"\[Eta]", " ", 
              RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}]}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"vi", "+", "1"}], "SimulationTime"], "t"}], "-", "vi"}], 
      "]"}], "\[CapitalOmega]"}], ",", "\[Delta]", ",", "\[Nu]", ",", 
    "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"vf", "+", "vi"}], "SimulationTime"]}], "t"}], "+", "vi"}], 
      "]"}], "Hamcar"}], ",", "True"}], "]"}], ";", 
  RowBox[{"AdiabaticEvolution", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataYRep", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{
           RowBox[{"SpinRotation", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "]"}], ".", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
            "]"}]}], "]"}], ",", "i", ",", "MaxPhononNumber"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataYRep", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", "\"\<00\>\""}],
       "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"ReducedSpinDensityMatrix", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
              "]"}], ",", "MaxPhononNumber"}], "]"}], ",", "2"}], "]"}], 
         "]"}], "//", "Chop"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "300"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982437065268*^9, 3.756982574281869*^9}, {
   3.756982630906192*^9, 3.756982682909855*^9}, {3.7569827521009483`*^9, 
   3.7569827645313883`*^9}, {3.756982808758478*^9, 3.7569828159322433`*^9}, {
   3.756984219086583*^9, 3.75698429553036*^9}, {3.756984482677462*^9, 
   3.756984553193006*^9}, {3.756984590893515*^9, 3.756984591416934*^9}, {
   3.756984626994535*^9, 3.756984627404067*^9}, {3.756984668968157*^9, 
   3.756984669106083*^9}, {3.756984724603725*^9, 3.7569847620372963`*^9}, {
   3.756985183789019*^9, 3.7569853699996243`*^9}, {3.756985403098816*^9, 
   3.756985405672268*^9}, {3.7569854481518917`*^9, 3.756985450266583*^9}, {
   3.756985491170484*^9, 3.756985588234439*^9}, {3.756985634063283*^9, 
   3.756985641930625*^9}, {3.756985768902295*^9, 3.7569857707264977`*^9}, {
   3.756987037059238*^9, 3.756987044709035*^9}, {3.756987109851344*^9, 
   3.756987118175552*^9}, {3.7569873177192698`*^9, 3.756987321047307*^9}, {
   3.757319971995852*^9, 3.757319972509303*^9}, 3.757330273828147*^9, {
   3.75733032588451*^9, 3.757330353664363*^9}, {3.757330442667632*^9, 
   3.757330443222568*^9}, {3.7573304742106447`*^9, 3.757330525802122*^9}, 
   3.757330700097691*^9, {3.757330797840852*^9, 3.757330914252501*^9}, {
   3.757466295552644*^9, 3.7574663178864117`*^9}, {3.757466373801754*^9, 
   3.757466426247713*^9}, {3.757466463692524*^9, 3.757466515665208*^9}, {
   3.757466588386499*^9, 3.757466642710381*^9}, 3.757466726030395*^9, {
   3.757466762452621*^9, 3.757466791804352*^9}, {3.757466854886403*^9, 
   3.7574668630092373`*^9}, 3.757466913189487*^9, {3.7574669726425133`*^9, 
   3.757466991895626*^9}, {3.757472130353787*^9, 3.757472132888494*^9}, {
   3.757472188142934*^9, 3.757472220143003*^9}, {3.7574722522643967`*^9, 
   3.7574723887989693`*^9}, {3.75747243112044*^9, 3.757472471088176*^9}, {
   3.757472510110084*^9, 3.757472541602565*^9}, {3.757472614174223*^9, 
   3.7574726153573017`*^9}, {3.7574726613169518`*^9, 3.75747268572908*^9}, {
   3.7574727595618258`*^9, 3.757472762199213*^9}, {3.7574728109616337`*^9, 
   3.757472836662491*^9}, {3.757472937609859*^9, 3.757472943033309*^9}, {
   3.757472982404356*^9, 3.757473011696568*^9}, {3.75747305930366*^9, 
   3.757473091463759*^9}, {3.757473222260315*^9, 3.757473263130239*^9}, {
   3.757473858367423*^9, 3.757473898017995*^9}, 3.75747413661721*^9, {
   3.757474201970292*^9, 3.757474216612258*^9}, {3.757474854301653*^9, 
   3.757474887193388*^9}, {3.757474953362226*^9, 3.75747495886067*^9}, {
   3.757475032163362*^9, 3.75747503476652*^9}, {3.757651872390626*^9, 
   3.757651892034471*^9}, {3.757651933302465*^9, 3.757651982945315*^9}, {
   3.757652029489764*^9, 3.757652042525775*^9}, {3.757652073768285*^9, 
   3.757652204037105*^9}, {3.757652299919091*^9, 3.7576523087745123`*^9}, {
   3.757652430915778*^9, 3.757652514096414*^9}, 3.7576525955418997`*^9, {
   3.757652639917604*^9, 3.757652660754683*^9}, {3.757664495985628*^9, 
   3.757664499697365*^9}, 3.7576645709617567`*^9, {3.759459174401523*^9, 
   3.759459192894355*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
We4NFuWZFon+TEKPe4P1z8tPFMOZWIRV4LeXDd6QJXHJjI7Gc/S5N6RcXHSZ
RmNi1qnHHaW6vGGLdq6eUCST0OveUGBuwjOozMS2vLz+JGzMG17tsJosQOM5
+t0blJ662ZqjfC3kZyo+5/eBBpnawT9qTELP+4Dq1ePKIgFM7JP+1ywJSR/o
i9DpqTnMJPS9D1D/sI4c2c7EnsctnEdX8wH1bcz1yeh5OXrfB4L++7RVJZWJ
FdQoBtYa+0D+BfwLXYdJ6H8faOHL0p9E+Tg0ZfZKjOID04pWh2KymYQf4AO8
oQuL89D7ddtOx/zCfeDlll241X9Mwh/wgXJ+s/4jl5jYjogTxVVJPpA1fnTb
wj1Mwi/wgaW/c+RO7Uf1W3ZTbNF5H2iNe3575w0m4R/4wKP10ZZVDqh+v7Fi
PMt9oK2pX/rJQSbhJ/jA4a0P/U6j/dWy6dtgRYMPGO5jCJZ5MQl/wQceypxv
/nME1S9tkTV/lw9M/BlLzK5jEn6DD6j1/Sybj54v5crmhy5jPsDWDwLnNCbh
P/hA99i+neZNqH5792y8xe8LX4rvptVHMwk/whesDjr9nX8G1a8U4yS3pC+4
n/S3f472P8ef8IUd36b+iqSg+nVN+2On5gs/a7MFpS8zCb/CF+5fb28S+8rE
uM7c8i429oXyxb70kVwm4V/4gpTYhvvNpUys8xUb/+vmC8Yie5L0p5iEn+EL
tt0VtYxbTKxK9Pt2y3BfMCva3Kj2iEn4G74gfS3K3kuIhWVbLC4oSPIFEf2V
lJPo+Tl+hy+sS6s0cWYzsf9SlIV/5fmCafNJrhDUjzn+hy8kd0aY6r9lYlaN
lvtMyn1hIm9zkFkPk/BDfMHSNOmv32bUf/lCe/IafOHCslAs9DuT8Ed8ATJ4
Nsz/iepX75Tpj060ngCJ4Z26LMIv8YXjkTpJI/ws7NPB23f0x3wh+7tYNF2Q
RfgnvoDJPkhts2Vhzx82S+Xw+8HRNr35x9exCD/FDxQHtrF9pVlYweSP5C9r
/GDapsxO1J9F+Ct+UKr8vYlHm4Ud0hAd11Hzg8n2sNJaTRbht/jBiMQVHVYM
C3MLV6WkG/vBQMXXOhF03nH8Fz/I13Co17FhYTtKrRsG3ND8sdsvvkpnEX6M
H8jwz/vkEs7Clg+HqWqG+8HamoVVOXQW4c/4wT7jv0/GC1nYuHxGbkqSH1wN
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
0YhN6Pr/ATzyEw0=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
A6yFwFo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
yq5fS7L9HCq8dBsWAjGSOPj65/N9zVRQ3VB3NkqKZPs7VCC6w/SerCIJmuQS
i+f96HnVeaPsEZ9h+T1U0Atd1SsmQhIWvjrX1H5SYTIv69wVUZLt/1BBfXd8
RgfiR3I57hJpvDQwUUYFvYBk+0E0ADPLeTw8KH+7N+3ulqTBwa7EV8N/sD9E
g4+bTruN/2US/ULZX5S0afDyeqeD0F/sF9Eg2bB06fVRJlHjcMMr2ZoGul8b
NBNGsX9Eg0O/e558/8Ykcg48rW8PoMH77adcrUawn0SDNxs9KiU/MYlNTb9W
yybQQM83VfPJe+wvof1MfuqreMckXOYvO5mYToNeI4Ph+W+x30SDhO6Vpvde
Mom1JrrzWgposEL+KfF3APtPNBDwbfq8pp9J8Kd6Rq6sosGJsHbp593Yj6KB
ZmVBgBziz8M1m7sZzTTgu+P84XAv9qdooFUt6KiK+Paj3yeNH/Sj+J2zWCb3
DPtVNNj0s+qjxFMmcV7nZvGynzTg78qPrmjG/hUNGvkdyC+Iv+/Y2CMSyUuH
7kvc2dc7sZ9FB1c73/gopBf8y35vr5WkQ2I3f2QCE/tbdIjQfChFkExi/YjY
kJA2Ha7nFos51WO/iw5B62r1z6P9iSnru4RZ00Gr4+iebCb2v+hwO2Lnciek
X8bCvO/cDKBDTaZwH60N+2F0CFtSf/AYmk+eS1LgT6CDLnXJcr972B+jQ+7n
85E3kV4pG8g9EphOB1+qf8QiEvtldLi7dtP3IDT/4IrbkxUFdMgU9dbc+QT7
Z3R4krtv4hWaT/PuC+WuogMnU+2M1X3spyF8yeny7PoW2ZNt3s10aApa/GKo
E/trdMiauMQ9WcckZDsl9K/20+HXsL6Mexv22+ig1ytiyone54zg+vMzo3Q4
Vax/xusB9t/o4L2x2dwBxeelne8iN95I2H6x9qXQU+zHRUJ3snG8WSOTuJ2+
bfNlyUi46pZhcroD+3ORML5G9Mwkmn/yUd7rSa1I+K/y4rpTLdiviwSZWx/e
rUPPl8B5x9bBOhJ+3qebFT3D/l0k1NMqjmqh/boQL66fDUDzNxT7iHZhPy8S
3L2GTPl6UP5u/ys1Fh8JrfO1rT8wsb8XCcVXS/cpovvz316RYZUeCcTz76Ki
PdjvQ/Mv2xmmo+cf/mX4M68gEs4fHhEL6MH+XyQsGDhaXIP280jLP+BrZSSU
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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
AjvJxLDt6Pr/AQbcEYo=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.2172170912345061}, 
     PlotRange -> {{0, 266.572976289502}, {0.22019735566773282`, 
       0.27980264433226737`}}, PlotRangeClipping -> True, ImagePadding -> All,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.2172170912345061}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0.22019735566773282`, 
       0.27980264433226737`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.759459198725107*^9, 3.759459211883254*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxVmXk4Vd/3xxuQaERKkgwhJaIMhb0kmTPP470X97qmG5GISDJWhlQqShL6
JJWUyFDm6VKUIpQGSqlMZf6d7/PZ5/M8P/949nPOPWftdfZe6/1+bTGqn7n7
kkWLFoktXbTof////1874utV38K0eIWGFf7ZIfff+DP6qJTFu4kYXzF0UBCd
+4le1Uie3Tvfhq9PoCj2eb8zM23IWsAo70DeNLqUmOo8Ot2G719At83ECxTm
2hBLa8+72bwl8Cgv1WR2gfw9J4i3lzw/STz/YfABt665ZcBvJGUoQ4z/fR4P
REuGUK4Q9/8ttPh+33wlhGmzF8cvkM9fDas/0T4uJ8aZAbv21lmsBccNGcEH
/nsfH5g+2fbRmIhPa7VauNI8PyR7c0TBDPn+dVCsriBxhLj/4214fj1PELSk
my1F/4tnPRhN5C2/S4yjD+pxrbIQguiUWIrWf/FthJU1K+qFifdLD5gYhM4J
Q+k5n8Mx82S8IrD29nxgHDFuCrM5O5S7GbIPJkvxzJPxi0LP4lbxZ7Nt6FGi
/FfZ/C3Qk3R6/tEMOR8x2O4U4qtGXI+xV0qgzIuBcnt6leE8OT9xUKEv7VIk
4rGVUZG7ZCEB8jtuLI4mxv/OVwLic1c6/iTi2za5t42dJwmlr/s9TP77flvB
j6f2SSAx/+lqzcOc81uhSnul4uP/8iEFrPJPJjuJ+5uT9/OrW0hDQqG75gRx
/d/8SINOZH0lHzHOcDlY7J8nA7aGprbeRLz/5msbaGR+htfE2FfOwCZ/bhss
oVWeVp0n14ssjJTOjIUT8aEZ46l+8+1gtCHg9b3/8rkdVP6qxGcR969pNLsi
mLcDcmL2Be+eI/MrB0zdgm9HiOd/uGClYTwnB/QPGTu+zJL53glyJjeTxoj7
H7jZ9UeZy8PiLTHm//yXf3nYcXV1E4UY70+/C70WCrDXaUOzyRz5PRRAa8gv
YTfxPNmIe8nB8wrA1yp8pfu/77MLvh7WuWBGXOenPxjgz98FPvvNW9fOkd9r
FzQP79lGI8Yzxg+VCi0UIXBpJWtmlvx+ivDiavA+BWL8afejUwbzinB7+F1I
BfH8f7+nEiztW1UkRlxvES559TlPCfb6n3r/v/X97/dVgneiEe3HifiLl5RK
RVrshiv0reo/58nvvRsqE+r+USLGmV/Ljm6a3w3Xlfj1Q2bJ778HjLZtQSnE
fj3dXt7wOG8P3LnCIyM9Ra6HPZDv1tlQ/rcN+T2uFLKwUIaD886H9kyR60MZ
xo4GC/MTv7fJfMYcmVMGXRq8eD1NrhcVsJm9GqpGzAeiq8vi8lTg+a+nqbQZ
cv2owL35WzP/EGMZ79oVWy1U4YI97yXdWXI9qcL8yL3ObcR811rUO1XNqcJy
JdGs73Pk+lKDbTWDtgvEeEqt8a5DnhoU9Ks5LZsj15saHNOSej1PxDOwpXlh
0nwv8PXu5oj4S66/vXDrYhjn+kki3mWtpilze6HHU+Nm2Di5HvfBsOhwiTQx
LhphZ8nl7QOJz1sb/oyT63MfhE5/z88ifn/1Vftog7k6aP6ekz/6l1yv6qA9
S0PrifefevpS221OHR7mRdlpz5DrVwP6OEWjPxFjn+zO8wu5GnDucs6SHf+t
Zw1YLzmYq0GMreJff75srgn3V3DTt/y3vjWhW/gOfzHxe83Db5SV5zRhotl/
6Nk0ud4RFN4WV1chvpeUbXfMi1wEN3OCb3D/Idc/gv3bzwtQiPnEiPp6K28D
eFn84ee33+R+ANia4sSx6FcbmuX7KXAqHMDxwIi1wE9yfwBUL0ea/sSYxcUq
f9EB0Hl2+eWJX+R+Adh4T+kaa4xY31O/3EW3aQFL9efQtkly/2iBQZ8W6yGR
L7sfh1f5hGvBy2/X15ZNk/tJC9ozbqFWYn6t70cflXZoAa9A04GpGXJ/acE2
Q9NH5v+r750BLtzb9kPfmFvapmlyv+2HsQSBrlji+cX148usw/eDBC3eL2eS
3H/74Xj1T7ESYv6yZYH3sjv2Q9ehOz9KRsn9uB8S/XNFzhHzybw7aftbRhvW
yqdeiBoh96c2GC4RL8v+TuynG0cXo3BtqIuAwmXD5H7VBiN19VDBb0S8aX/z
Ezu0wUa7N+PbV3L/akN30DLqfeL6TOwx826ZA2CTY3LB/ju5nw9Ab5a6UgHx
Pr/j09PS4QcgMuf3XMZvcn8fgIN1GUKRRPwf/UKzAzsOwKhA5fzfSXK/H4Cu
1u3r3hPzt6XNGlbL6MCRM5ylZVPk/teBgovPjOKJcYt12PiacB1wyjE8pP2X
rAc6UCF3P0CKeB4YzF917tCBn609+2PHyPqgA5QyhoQ7kZ+HGid07sgchBuy
ZSkWP8h6cRAsT5qnphDz27Zr0chU2EHYV3Bhan6QrB8HoT5Y/Pb0Z2K/S0Ze
0O04CNHfimpjPpH15CBcUgn4GvaR2P8blqA0GV3oVxRcMTNA1hdduCvjsDBM
jE/zRg0OhOnCyf1VO0w+kvVGF3w3fd++hXje9PzSJIUOXbCk9vYe+EzWH124
OPjo4fsvRL0YPaUaLqMHEas0XlcPkfVID1Jo5zweEfEPfOb80BymB1pPczb2
fifrkx4UWvEdfUN8H5u3p+OEOvQA1jNDab/IeqUHS5NPtccQ36u5ZZkiXUYf
1uso8o7/JuuXPkjFPS26QoxRVWz3wzB9SC20tPjf7/+tZ/oQWVinYkU8/2HR
8qglHfpw6Yt5df0wWd/0QcDVdyTkf/Hmxm83lTGAC9923Xzziax3BvCI5hnv
84GoT5d5OzPCDEDvjFDdQC9Z/wxA4fiqpEfdRL06m3h8+KUB5J8Ucjd5Q9ZD
A/hYtnKx82si3siVW9VkDEHY4uI16VdkfTSEZTs4RYs7iXiPnG09HWYI/b66
rv2dZL00BPYmuW9ZxP0+jNVBnS8NITKV9/qT12T9NAT1rKYnisT7PjgkbRaX
MYJ36wKUBt6S9dQIdvf3Uw73EPGarK33CzOCZVGmcSt7yfpqBIGT0eaJfUQ9
3J/iV/7SCGZvFBcW9pP11ghyfsRsuPmeqI/K/Bt4ZYxB6JjBC+MPZP01BuHk
WdWLxLho2/kq2zBjoGx5Pnf2A1mPjUFewKlfnBhLi6zzvPXSGNKVRenM92R9
NoZioXYOfeJ9V9ZcWDsufQhyBsIZ93rJen0IqOV+qiNE/Ks51pdqhR2C+66r
uJ6+Jev3IRi3a32+pouI989F6rmXh8DcOUgosJOs54cga/vna6deEPF+28Db
K20CKwpP0DXZZH03gZtx/aYWzW3Iuy+9SDbMBOr0ondZNpD13gSepRdz6NYS
8b7Y6Bj80gS8ZVTsXz0n678JNG78LXm1qg3dHjBe8pHfFOI+cW+9WUH2A1Oo
GcmrsylvQ+6OZ1/HaZrCvZd7ewOekv3BFPYZmG1ZTIxFX7NvK3iaQtnRzyM8
T8l+YQr6GQsNQcT4rcnqE12pphBYZv/MqJzsH6bQL9cUokO8L7XRxCK8whSk
b3Qs96wk+4kpbNOeePCUiM9YO0l661dT+J5QXf/2GdlfTKHp9KqNb4n5LCtv
n2nmNwMtCYuU4mqy35iBfKW9oGxNG3qmvLbdX9MMsn7zixvWkP3HDMqijcdn
ifuP3zO7KeRpBhPKh4SMq8l+ZAbtuxT01InnK8umBFelmoE7ZbtzYhXZn8zA
SbPwZAER/6/sl0b0CjP4dp0vM+Yp2a/MQMo0Rr/4CZFfEX6xVV/N4OzhC9F/
H5H9ywxu+RZs2vqwDbldtJh4yG8Oo4PzxkX3yH5mDv6Td9+lFLShzWvPNzpo
mgOV427amdtkfzOHga0uWly5behNfGfGEk9zUKt73jKWTfY7c1jfU52zJYvI
L8c6//xUc1AdeDn+NYPsf+ZgDkvGFa4Q+Q23OmhaQVzvuc1quET2Q3OQhM6Q
dReI/P5N2/hnyBxk7LYvepVK9kdzWNVfPvI5mcjv4dcjGfwWMBnruaf8HNkv
LSAQblr8PtOGQocFqw9oWsDU6cgan0Syf1qAC/X+bEl8G9rjbnNxmGEBK8oW
terFkf3UAri+3HrPH9uGfvZd9EpJtYCMf8w87p4m+6sF6ID016DoNpRv+wap
VVhAjqT/a59TZL+1AI4wjo1yUUR+X24QeD9kAeYclGtcJ8n+awEmbONLHJFE
fo3shk7zW8KGrff8y06Q/dgSbOK0Q0LDifzWpj+V0yTG1gmyDmFkf7aEMcuM
xz2hbSgFdSd1Miyh/p79Y+sQsl9bwqqrES7jwW3I6MlG99BUS0jVdUngP0r2
b0uQ2d61sCWwDXEpOaiJV1hCp37tGecAsp9bQkQJVX6a1Yaq7lxZ2ThkCRfM
PFaH+pL93RJWhheF6XgT+ZV698GP3woSG07SDD3Jfm8FN19pzSt4EPm9vumR
oKYVpMW1fj5FI/u/FYCY/MgfFyK/Qk7x5QwrMAsSdNJzJPWAFSioHYxTsiPy
m5rh7JZqBa6zQ8o7rEh9YAWFR+5vWWLWhmgr+xR5K6zg7Bq36evGpF6wgtYh
2TN6+m1IJGbzsgdDVjB45cP51gOkfrCCy2LFlQe02lDXIpceW35riOgOfNes
TuoJawi+KTm1U5XIb8i1wgUNa1DQ5n55YzepL6yh7N4KM2UFIr/j/VG3GNZg
C3W517eTesMavlvnT+2QIfLru8XWONUabJSyZ4clSP1hDbtktmseFSXyO+i6
Y7zcGi5Ox1ts20TqEWtQMZZREN3QhkIoWYuuDFmDX7z5lzZ+Up9Ywypdd+2b
a9rQ7p4PnVr8NnC3cjS8fgWpV2xAY3K/XyJ3GxqxFM8f0rCBkIQRVxYnqV9s
YFX1dNCtxUR+2dSwcwwbCHjC3eo4x8Z6xgYa1RfPKU6zEU0v20w51QaaN2YE
2Eyysb6xAWF2Cbz8zUYizz9u7S23AYtrgZ+CR9hY79jAG0v1K+7f2Khrn+R0
1JAN7JTiuRn0mY31jw3wPT1Y1vqBjZKL3diy/LZg//lNELWXjfWQLWjG9RgP
dLGRoXzOjRcatsARaFTY3sHG+sgWbOf5Dv9lsxFn/uegYIYtcB675tzSwMZ6
yRbuKNzp3F/DRlXiUoaiqbYgWxhsMVnBxvrJFq67ienzl7BRyFUP0bpyWxAr
t4pZWcTGesoWpA4bdJsXsNFuwdwx7yFbUBA9RCvPYWN9ZQtv/JtXaF1no5Fz
g/X8/HZAV36zZdtlNtZbdsA9fL5xNJmN8pbLXC3VsIP4QkPulYlsrL/sYNel
3uLCaDaiRjFYFIYdGGzhKxk9zsZ6zA6cf9VOPwxio01zeQe4U+1gPOnk5R0s
NtZndjBvFXKfi85Gr4O+bigst4N0FZVNUa5srNfsIMLB0WHIjsjvr20/rIbs
4JLD68RAUzbWb3bwkYM/rUyfyC+T+WyWzx66qAurxbXZWM/Zw/7SzPXBakR+
P91Oy9awh3+KWXnJimys7+xhrW1nBucONqp0GvY0YNjDlJvoCQVxNtZ79sAv
MNYnKsxGx7q2a/5OsQeH9IotOQJsrP/swZE5uD2Hh42UzLz5LpXbw5Jn0020
pWysB4nf29V8nJhtRT+a7nzRHLKHeQOdQ5WjrVgf2sMy9x1JGsOtKO/Aj9LP
fA6gtOv+z/ZPrVgvOkBHZ+asUXcrolbInUvUcADLQ42j/i9bsX50gDsyjgOT
za1ok6ovTYnhAOddl9K4nrViPekAtl1D9sUlrej1/bsq3SkOYBe03FPwQSvW
lw7QMm6zJ+1WK0ra/pM3stwBHqwY+56f0Yr1pgN8mGayOi+0IoMc+ffSQw6g
6VRJz4hvxfrTAfY+vJk7GtGKOERZD9l8jiAeupTn1bFWrEcdQd7yyuY671ZU
eelebKCGI0zUtHqrUFuxPnWETc3GC9X2regY32/HTQxHuMx62/zMqBXrVUd4
V7V3TE6rFSkl7tpVneIIssVJmxzVWrF+dYSTtH3ZlrJEfjn9OZnljnAuOO3F
NZFWrGcdwaalK9J7XSvKPfHg7ZohR8i/5tpry9mK9a0jfNuWIe77pwVRpkYL
HvM5wde3Std7Rlqw3nWCOZt98VW9LUg4QOmks4YTcMuczk5ht2D96wSpPbMt
ubUt6PX3AGtOhhNkR2osSStqwXrYCX69T/bZnN2Ckjweyt5JcQLrnoYzn9Nb
sD52gkOD1w3GT7cgg/fj8+blTnCvZCxXObAF62UneOUgtO6pVwvisN/TMTXo
BF0Hfg2usG3B+tkJNp76+ny1Tguq6AjMvc7nDGuf7j/muq8F62lnWNcvmLtB
ugUFGz8K1dVwhhyXey8H+VqwvnaG3TuVNq5Z3oIU6ydNRujOkLft46D1eDPW
287g7n8rdlF/M/oBKpJpKc5w4gK9iudVM9bfzpDr//E9V1Uzyi09+ndfuTNs
GI7XTc9vxnrcGTY1HZ1PvNaMKLtLWgYGnYHPRNOEGt+M9bkz+M6H1H/1b0bC
d/9ej+NzgVSYn2piNGO97gJSQjvvX7JoRq+k1QIVNFwgK/fXUZF9zVi/u8CZ
mql13xWa0bmsY/pddBc4N+cb0yzcjPW8C8Ty+o2YLGlG+sKlIuEpLtD9cPm5
ZX+bsL53AeUkwTO8H5vQ0rTp35LlLrBmTOpYfEMT1vsuIDanuVe8oglVrNpX
1zzoAlxiooI2+U1Y/7uAPpPr9/MzTUi9RsNYbbkrnJJbFCwX1YT9gCu0vJS/
ku7bhIQWOz9O3OwKJjGH23rMmrA/cIW2T0HUZbpNaFIjXOy9kiv4Zdj73lFs
wn7BFYSy54/nCDShjpDMBCV9VzgO1XLHlzdh/+AKEj02p2wnGtG9xxUTp51d
4WD4n7L3rxqxn3AFJYHOK3pNjejMeJ9Ld4ArWOZwy9k9asT+whU+Sr+c0kpr
RMxdC41yca6wNf+MhUhcI/YbrrCD1zrKJbAR6fqK7o7MJOL1Mj0YaN6I/Ycr
9FbJ9tzQaUSS/6DMziJXWPLtsKWgYiP2I64w75OTLb6yES0ZcuGWaXQFreCk
r2ELDdifuIJjeJmy1PcG1C8Z4R/a5wpfJHhdRmsasF9xBeq3lCqLRw3oKeX6
O/aYK8RFeMSpZTdg/+IKx7ILpJOPNaD0zKqD4sspkNAkrMf2bMB+hgIeVqzN
i2waUFDP+3uBmylQ0nAjv0i2AfsbCpx463nnmlADstiwWLhRiQK31zu7KC5r
wH6HArIinseF3tQjBSux6E36FOCs97eIrq3H/ocC6eb/1KcW1aOVKVo//Zwp
oLfKw/hcZD32QxQ4uSVhjYFPPfrGpthVB1CgsC0ib9yhHvsjCghWrtX6JVWP
6nlPVgvGUeDUssVJ9WvqsV+iwNeOaBWlRfXopt4NOWYmBc517jgv1VCH/RMF
dI0XcwwW1qHI6OcXy4so8MM1eGLf9TrspyhQ9Dkiebt7HXJ+PrB4bSMF7srd
kM4yqMP+igIbRLRPLlevQ/sWlni79VGgtWvdHNd8LfZbFFAsyb8/974WbVCX
eP14jAKjwgIz2R212H9RQNQwYQU7pRZNBmsD73IqQN1SC76AWuzHqPBn7O24
KL0WdRTTbjtvpkKefOTyGxK12J9RQYZjzH7x4lp0bzRK4IESFfxP5cplTNZg
v0YFVFBecvdeDTojfzOcU58K79SXCv+Nr8H+jQrVY72rdE7WIKZ3zZCtMxWS
163OkNlbg/0cFR4kREnKra1BuvmfzO8EUEHolw2fPk8N9ndUsKp/u82wqhpJ
fuEoX4ilgo2QVEBfajX2e1QYLJre9OFsNVossVXaIpMK3bSsOWvtauz/qPC4
RSDdhL8a9bnoJN8qosKd/icf9ddUYz9IBafVjgpJ1c9R2VX3makGKniHfJ6v
P/cc+0MqTMjHUKrPPkeX3ka7G/dRIXw8sVpd6zn2i1RQ40nWSV7+HAUK3mq7
PkbkJ/QF8xzPc+wfqXCItU8r++kzZG5RpzbOTYP1tVNdExHPsJ+kwX1NPf9f
Uc+QfNKXbN3NNFgR5ZayXPkZ9pc0KMwwr0CTVWhlK9eqK0o0GDlHi5KZqcJ+
kwaPqt6sfVhQhb4tlw4e0aMBRNXce+xZhf0nDWaEF4KCWVWo/qDugJYzDbSY
u/s+SVRhP0qDegeuLr3HlehmFN0oLYAGKZMLrZoNldif0oCvPbLl0a5KFFkV
82golgacPpSo85cqsF+lgdjzP3cf3qlAznO5W9QzaRDTwGWRJ1SB/SsNnAuk
2a+OlqN9exvizxXRQL7FWbDhbDn2szR4NbvPdO2icrTh6ND4QAMNJOnj7Hir
p9jf0iAq5Nb6b75P0UQRt4tyHw0azq/76/y5DPtdGlyg+N3ZoViGXv6SaYwb
o0FFyOWSGOMy7H9psId6bddUYykqlNNX6uV2g9Mv5PYrrCrFftgNeu4OXuPZ
XooSmZ4ZCpvdgEPd1Ez77hPsj92AdnaIa9m3EuSZG7fslJIbrBGcWtG97An2
y25AcWIsy0gpQQc/5R/u0nMDo7YpuS11j7F/dgOufP6Vjp8eIwmxph5ZZzdI
YuiG044+xn7aDQbnc/5+vfEILXb+phMe4Aa7Ky1eT1Y9wv7aDdyKfbNHHR+h
vss8917EusGRQ0oSHRHF2G+7QeKWEipfZjEq65LduDXTDfZdW5N2S7sY+283
OK6lfM7I9SG6JGB4KrjIDfxsXVQ3Hn+I/bgbdPpLK/duf4gCzbxGmhvcQFj/
wmSTVhH2527QLs0+dMKhCJmfTbAV7XODhJZVjX/WFWG/7gaaYevPNWx9gOSb
/3nuP+YGs5b2C0/UH2D/7gb0P7lhjkseoBXcLTvquN1BOHNjYt2K+9jPu4O0
o80Xwy330dcD3y8IbXaHxvFLv47+vof9vTvYPl1VfXWkENVFrljso+QOZoEy
cc+47mG/7w4zDlZcYfWFKLtih1eVnjvcXb0HfW4uwP7fHTz0JwLpHwpQxIzR
K35nd+jntv5lX1SAeYA71HRI/c188A9yUvVB9AB3uMS3eU9y+T+YD7iD37vC
rIu5/6C9gWfyS2PdoW3D64J1N/MxL3AHjgjvVYzsfLThQQH/qkx3GNB7EWWV
k4/5gTuEtd5Xyc3KRRMjrWGUIndYLLG2z/d8LuYJ7jDxV2Ffc0Euerl9ZPBh
gztwRpQsenYnB/MFdxi+EPhYKyUHFTJWmXP3uYN6Z+T5/c9zMG9wB/+0Z4rv
6rJRYs7Opw5j7vAbUpxSMrMxf3CHOAETF8FP2chz4JBUIbcHqP5IjQr+nYV5
hAfse83JL1GWhQ6K+iUt2ewBm5WKZQoFbmA+4QHDEfsWC+68jiQcz01bKXkA
b2Vo9ImOa5hXeIDhgvvPcKvraFF6oVu+ngeMRzCGHGavYn7hAc3TCnu8bK+i
3ldt7FknDxBEIaf/mGRgnuEBRyr6+q3q0lEp3y9V0wAP6L6YmJXCnY75hgfQ
GsUOKgpfRhdN1mRnx3rAaG4z77OnFzDv8ICFXceabAfT0JFEhZV/MjxA03go
MHL1Rcw/PAAl5i/nGkhFZo2mRw2KPGBX8cl1n/6kYB7iATxfeszT5M8jea7D
HzIaiOurZ6yQajLmIx6wEkm7cmskoRXayYa/ez2g3lxMeTgsGfMSD9Cte7fM
5uQZ9PXE/eIDY8TvBXOM3P0TMD/xgLzcl/3Hp86guqcvRC9x0+H85y+TOrOx
mKfQIT6pkr/g3WmUPfU7bliEDtuSYXjMIQ7zFTrIyRk/FHl/CkUo841rKtHh
ctO40LOyk5i30GHv7OMAG6lo5BSg6JyiR4eljyInGndGYv5CB4bNvf4C8XC0
9555w2cnOmxeZZcxYR+JeQwdjpRt5rncHorW//BXVAugQ/TpLsdvZUcxn6GD
rsDsrROToWh8W+rVxFg61MfpPT69PgjzGiLe4qOO77X80QuPIq73GXSotWtj
n1wdhPkNHQYkPV++2XkY3c3uYCkV0eG1ZvWVEooX5jl0OCihZKe86DBKeD/W
fbqBDvY9vCq94kzMd+jQbWwkVsvphhgiAjrdvcTz6bd/rEj0xLyHDhMblPP0
DtOQjv3uQrkxOrypu/xFvtIR8x86lPBc4RR9QkUSFy2FIrkZIHWjRPX1YUfM
gxhQ2+16O7PYEi3qPBLVKcKAxti8poxJe8yHGGA4Gal8nG2Jetek/ZBWYsA2
n62P5o+bYF7EgFtXzuvdjLZApcbFNqF6DGBWJq6cyzDB/IgB/WvKpxYOGKKL
8a+esZ0YkOzM4J37bYx5EgMOd3NVlCQYoCP1E9vFAxggJkn3/6BrhPkSA3jG
7u1L1jVAZhyCFwJjiefNLRFZz2GAeRMDzMwi7DwWTNFOLeVFjRkM2L5T/u+R
HEPMnxiwlj/NpybTGPGGWzM3FTGAz7XP2eO7FeZRDJAfiVC2bTFFQ6VBnX4N
DDide2HrVJA55lMMuLORHSKe6Yhq/1zQrO5lQELQ3NT2F1aYVzGg3fDSrrhK
G3Rj9+M8wTEGxMXlNEpSqZhfMeAo986MtVcd0YnDXXxMbk+Qc34cWefjjHmW
J3Dw1v6Y4qQjx7t/jpeLeMKu0eD6Q4epmG95wu69lyOcxWlo7/D6wTVKnnCq
ftM22zXemHd5wlUVRZ5XsnS0XkbVzE3PE6qthYs3RNEx//KEjobzq33/YaFx
N9uyx06esP2inhmvmTfmYZ7guyk0LlrNG73ICt7KG+AJjG8XW1/aBGA+5gl8
zgzjw+9Y6G7fpXPOsZ5wtkWpajSFhXmZJ5w8d+jxiqlAlCD8ZOp+hicsP6rO
q3olAPMzT0h8eUtCRyAAMWzf0jiLPOHLNQmJ7tBgzNM8QTFh16J3h4KQTtpU
q22DJ6w4dkmQPzkQ8zVPKA47sfsIOwSJvxRSvdNLxPfBJLL9QzDmbZ4AbsPu
AtNH0cKqvTcWRj3BpOEsc/79cczfPMGaWbvyNApF7wztV1hwM0Eow0g8DUIw
j2PCnqLapF854ehJbEjQLREmKMwNfltqFYb5HBM4ciyvPbA+ji7UXn4/pciE
040+FWrLIzCvY0I8v+y3mLUnUMCSMgNjPSbs2vOd55p8OOZ3TKg0SQ22PBeB
zFDPw+tOTEg47a6QrBSBeR4TGuaYlV8rT6Cdx2c2j/sz4cqZr1u+D0RgvscE
xdu7vLJyIhDvE+E43VgmrG2uy/sUHoF5HxMyNBKiNJZGoqGJfWOXM5hwMb3j
x/meCMz/mJB/Nr34/q8IVKvo6DTygHj/mMkKgd8RmAcS81XN4xDujEA3/I7X
azUwoeCMYfdpxUjMB5kwGLZ2S+HdCHTiztVdab1MQBrLLy5JisC8kAnbHzcm
PdsfiRy/Pr0yNMoEQa+5E+koAvNDJhw8pWqhxBeB1KR6OdW5vYB79+8XHGKR
mCd6QR9N+8+w6QkkSJvzOyfiBVbVNXOileGYL3qBi/WDkv3sCDR2TaR7QNEL
Kko5YuJ7wzBv9IIHWrzpsXPHUfs7jQPKel5ww9HK6KlRBOaPXtCSX2Bhtus4
KhByvhvn5AUDZk3uS3+FYB7pBTuMdSR/ohMo3jp8Q6+/F1w9bOFjYBeC+aQX
LM9eR3HOD0b01MyTCrFeIBlzc5ddehjmlV5wxNo4poMajHTaK75HZXhB7nlb
J1HNIMwvvcCh8PYny/uhSHxlv3XXAy8ISYYlux2CMM8k3m+drlpTHYAW9Beq
ZBu8wFjCZw0z7Rjmm16wcZ+kJTI5gt6dFt0e3usFjm9UqDMmhzHv9IKE8FSZ
Esuj6Ek1Snsx6gUSttFunIb+mH96QVPkFvr9nz7owiLXBUlub+jkH8q4sHAE
81BvGPjG255sx0IBGhGewSLe0EB4+nWZnpiPekOP7Uov6Vx/ZBpyvaNZ0Rv0
K69fPLLcB/NSb3DO+iAlw3ZHco+rNET1vOHEJ6e3bx1ZmJ96Q0DrhsSZfE/E
M/4+19/JG7TH2ybEMqiYp3rDe32aXinNGw0qLOar8/eGjrAMyfc3PDBf9QYT
9UQZMTFXVOMjdlwo1hv6ckVMBHwYmLd6A2/chCZzgYaybmt98c7whhHOlfOr
2x0xf/WGLMfCGq8xNxQ+SDGteuANE3/SI9c0UDCP9Qa/NQNFbj/skaPkyVL+
Bm9oTnOKWLuGivmsN1C7ztLPL3FFapQbkvRebxDzmjo5mWSPea03yLVdOL+9
wAUJZj4/WzrqDbGrzT85uDlhfusNjtf52wIzHdBY98Dfldw+YG8yLcSZ64h5
rg/Eql3+5VHogNrXL6VRRHxgxzc1o5ODTpjv+kD3n6d7PQUdUIGlROtDRR+Y
cEo1Cf1oj3mvD9xf9Mi+74Irik/WVuHW84HC99Mpy0btMf/1AbF0rq/eU/aI
zqZlOTj5wKOdS1WXplIxD/aBZa0hL7JEHNEB3lO8hf4+MN3Ri258dsB82AeC
A/8y6RVuSEzvZuCSWB9I3KEnqsN0xrzYB6oWPeltueiE5k/V9Ftl+ID+/gSB
uz88MD/2gYvmGyNGml1Rz7NP+vkPfMB4UaBqwLQL5sk+kF4Uk98yyUAl8xwP
Z+t9wG+d/bzEHSrmyz6gvbS0f88xCkrbt3Wzaa8PPGNX8XA/ZGLe7AMp970o
U/luyD9YJzZ71Af416cEqcjTMH/2gXKxr7vvcnkj02L30cllvvCAp+n5x4se
mEf7wgY+tXURvMT6HY12NBDxhanHijqGb70xn/aFHpXf0UsNGIhH/lZdhqIv
DJu5PmP98cC82hfunzE/vVrMBw161Sn81vUFq7B1iiXpnphf+8LaJW/ei3Uz
UE3el8sHnHxB5W3iP+p93phn+8LVtHchMwwmyvrMxXnJ3xci5wy6qOlMzLd9
wTYHbUgS9kbh4tJ+wzG+cOSW77hEDhPzbl/It/j0cyNx3cFF961mhi/UZEuF
ln5nYv7tC8/XOZWW6jGR6lW6dsoDX+hYrCsyetAH83DifVvY2Vu8PdG6tzEF
n+t94WTszFlZR0/Mx31ho8rZGFFuXzS6Lm+9Wi9xPdGif2sJHfNyX1j65Vab
wgQdtZk3RCaO+sIV5xVz0ia+mJ/7guL+tL+Wv9zRnXNDw/3L/CBlVbnsxj0e
mKf7wd5HjGBffl8U18JtrSTiB3enou4XKrphvu4HT4fbBUZ13BB9+baq04p+
UPTnt76NpQ/m7X4w+25y2CWdig4c1Jft1vUDs8L1wR+tqZi/+4HDVRGexRu9
kViU53k5Jz8wKXRpnFOlYB7vB+F+EfqrLrmi+cq4+Qh/P7BoiZY0C2RiPk9c
33xcNVSUWL+z+YzOGD+YceWesPR2xrzeD0petG0KOUGsX7Wml9IZfkB9+kP3
Wq4z5vd+0P5P7MmTdxxRWtA39dAHfsC7025xsa0H5vl+gKKdrLPvOCH/Ip5c
dr0f+HysE6yXcMR83w9e5Cn0+0i5IZNfsmvFe/2I9WnmGqrthHm/H5y9sknR
fMgR7ZAzDA0c9QNmtaxUPlG//uX/fjCkYMofZOeEOIuL/T8tZQFXbY9byU9n
fB7AAp7fZzJnNV1RQEet9NlVLLCXdXQL6HLC5wMs6KviFli3jIIGfr96pyLE
gspLjFKx2074vIAFSzf6HG/IcUama74kf5Bggfidrb7HZqn4/IAFxgu0z9Dn
gCp3Th5M2MkCfmpkaE2hCz5PYEH0p2c7kBSx/4y5ZnerseC3mrK+pYYDPl9g
QZf4SJJkgCu66iV4v0+bBYd2Jm2tNqDj8wYWvK6VT7zZ5oB44qU8Yg+xIJw5
rnh8CwWfP7Ag6XpsWupOT3QsT1lY0Y4FD98N1Nw54YTPI1iwUvPWzMs+Chqs
O9jeQ2OBmIqYtvoVJj6fYME6x5608RWuyPqzdXS0Lwumr465zN6l4vMKFggX
vU2keHihmqX0vfLHWGB7xkRYPI+Czy9YoNIWfLk0mYaUxI/+fBPFgrlT62/M
HfXC5xksmJEquHPTlYZuQMzNk2dZ4G0zedM02g2fb7DgZ5J2AmcbE61xuWi3
I50FzG+pkVGL3fF5BwtGUs97CUe5oxNhuateZ7Ng8E2UrEaUJz7/YEFe+7iF
EbHe/g/+PqzO
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
vm/blWM4durJubE5NRo8OrFErTYFJ/Q6GjS6uo7dTcexGK57FtZmNNCw7U7X
R/WGrd/R4HDQTq+MRJS/2NDNi9406O3aGxeQjBN6Hg2WO3G5c6Sh/N37W3o2
mgb5NT8LJ+NxQt+jwZ3oq7Ode1D+3l1zyDSTBlVtdwf59+KE3kcDqauvxN7u
Rvn7befXcwU00A044bYuASf0PxrkqjtG70H7PVHz8v5YTYPw1ALf3chm64E0
MGscVPBF84sYe1v0W2lQWKzUFobqJ1sfpIHkroUDh9H5KdfPq+aNILvW9F0K
ug9bL6SBQ3XC1ylUT72m6vMnZ2hQuZxDgxvdj60f0uDNzuCgCBQvrQ0jPDr8
YRAaFznwA+3P1hPDIH5Gzq5+H46JB8wzsqXC4Pd7/lRu9Huw9cUwcAnXnj6K
/Pt6QWpwXC0MZD686jmUiRN6YxhwduWPCKDfmzmsa6RpFgZyzgVS55JwQn8M
A4p5VZ12No6VS/hUHPIOgwe91BkM5RNbjwyD7ukIQw70+x12SV41Eh0GBtUW
vedQfrD1yTBILEs84FGAYyG5hftUMsPgfbhW/rlDOKFXhkH50/GqXSifjZmN
79MLwuB2weF9fKj+s/XLMLBwDr+ufQLlrxDu0lcdBvfnvyvnonxn65lhUHVO
6tPnGyh/zRcebGoNgz2Wja7XzuKEvhkGUoxKrqYKlL8HZDYnj4RB6drdog/q
cELvDAOham+Z8iKUv01YHmsGjU+HT3ehfsTWP8OA575qwdrHKH85/Bbk+elw
1zfzCud1nNBD6eDNvH/nbCPKX93U0HgpOozppPQ0of7C1kfpUPzU0T/gFo7Z
7bnY1a5Gh8xGpviHJzihl9LhsU51ZUA3jindfqArY0aH6MxzZ7LQfmz9lA60
5xP819F+i2fHSqK96SDpt7z+CepHbD2VDru0GEd2oPozocIp2hxNB/4ntVhd
J07oq3Q4MlHR0IDj2ONw2b0SmXS49ZjSt/4FTuitdJhdvm8zZz+OXbqm/5Ze
QIeFGc7PyqjesvVXOlhdilOU6MWx5AmK3YNqOqx49meUMYwTeixaL2WVL4r6
nZf8vjqxVjoMGC0M46j+svVZOriMq/T9QudrUYrkQ0bocIY3SYCB5rP1Wjps
Cw3rdhhD+Vv46FjdDB2+l6+5nD+OE/otHQLeqxymvEb5Ozj+U4g/HGp53v5y
Q/6x9dxw6AhaetYOjTNXcgdQpMJBorkmaRVaz9Z3w0HY8MmpKTRe7rSu46Za
OJTSb+yXROez9d5w4D5pYdg5ivL3hOF2frNwWM8T/lMIjbP133Cgz4nn8iI7
5HnAJU9vtH4ue24AxZ+tB4eDRsZWn3Hkj5HgfsHK6HBQlXvgvRqdx9aHw0Fq
6SbVdBQ/WbPLsVyZ4dB/e6wuD/Uvtl4cDjymcupU5O/f/Y9x54JwSJ3qLZZH
vx9bPw4Hv/YFOSryb+jha/Oy6nDgP9KSxYPixdaTw+HS5+vBos9x7M7fRTf/
tITDkCX3nRLkH1tfDgeOLDgpNIJjeTvXS9uNhENo8vSn009xQm8Oh6uKukLX
kX/R8caZxTPhMDgkeuIS6pds/TkcniidKp5B+WV3K2jmO18EfAnbs4OJ/GPr
0RHw6mjPwmQPyt+ZDC8LqQg4fS421LoZJ/TpCDglNfszDOXbYuWrzQVqERCI
JUkvQ+vZenUEvPf4OtaA3sNEWLPKF9MIEOzJz36G8p2tX0cAt51evSW63+PS
t+eMvCPA6W3pAUO0P1vPjoBhk8UCWxHeu/SGl+dMNFpPs9fuQPdj69sRUJ/6
Am9F/ifLKTDeHYyAO3Ir79xC42y9OwL8tq992obGPX1NB/QKIuBRtcCRDWic
rX9HwJDxkcMRaP8d50MMc6qRP9FP1kQjf9l6eAQ0B9xpVOjAsRUDB8vftETA
LP/4NVNks/XxCDj56vODT004NrOidKXWSAR8dtO/mY3wBVsvjwCdar/CFch+
4dCaljUTAZYTPDcoaD5bP4+AtB5hFxlUH65nT77D+RgwnXGtPa8LJ/R0Bpzf
unTdAJp/6Bm/i7oUA5b9PH/xHMK7bH2dAUo+vWt2ITtEYOODA2oMWCVJt3dF
/rP1dgZYiipCB8oXIxPzTYOmDChjLtVyQO+Xrb8z4MXjd/PtKD6y6aEnlbzR
OIQvOobyia3HM0B+gf7qBcrPv/cP/U2NZgB9ttZ7BYoXW59nQDNftsBD9P6H
/pRRuw8yoPjH4v9yUf6z9XoGUPyaBTlRftzRetqpUPA/f+74uaFxtn7PANfd
SUmO6H3lxU3rJFYz4Jr1fJ4Nuj9bz2dASlGZlyN6P9E1i0uetzBgrdbUjmE0
n63vM6CqUF++Bt3f9vOmZXIjDLCuuLC/Hs1n6/0MoL3qKF+J5m9RskyMnWFA
6rWa8lF0f7b+z4DuyveHrqL5PLduRb/mjgR9+XxTEeQf+3tAJMi9fsS7D90v
puuJwjHhSBgtzs9SRPPZ3wciIf1jX88XFK/xLz3D2yUigX7aeNQZjbO/F0TC
u5z07R5oPzuRtyderouEGzfXCfGh34P9/SASeM6vvi+L6sn9rd9NjmyNhKvJ
+3faoffP/p4QCXp7r6bV/O/9WfP+0dCKhGdttf89QvPZ3xci4f660VoJ5N/5
MPGqUcNIuIbfTKAhvMv+3hAJwIzxVEHzFx/eEJxpEwmqK8/x3Uf+sr8/RELz
x+7+IpTPCaWaa9TcI2GD1E7HVOQ/+3tEJByu4fcwQP1gotmEORQQCWcbEg62
offD/j4RCXbm3eJv0fkub1wyMiIi4fkq4CtC92N/r4iEQqu3OuqIzz3mDtFW
ToiE935t9yrRfuzvF5EQLNx+eBj1J3W53Z/60yPhN/PeIhE0n/09IxLuXLla
q4fqVREcvLzvWCS4iNX6fEP1jP19IxLexE/NUpA/Ir6n3becRffr//PzD4oX
+3tHJAz3KrbNofeVklQi3FscCU4/r2XMofrD/v4RCUHibiG2KN/+Dwk+4Nk=

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.49920605536861035`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.49920605536861035`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.757466473459405*^9, 3.757466524491395*^9, {3.757466604613537*^9, 
   3.757466632249634*^9}, 3.757466674142399*^9, 3.757466737534959*^9, 
   3.7574667749354067`*^9, 3.757466826303165*^9, 3.7574668985443974`*^9, 
   3.757466944824728*^9, {3.7574669826727057`*^9, 3.7574669995476418`*^9}, {
   3.7574721335121393`*^9, 3.757472152935192*^9}, {3.757472194861333*^9, 
   3.75747222667072*^9}, {3.7574722588108253`*^9, 3.757472403655299*^9}, 
   3.757472449775796*^9, 3.757472485916154*^9, 3.757472519574252*^9, 
   3.757472551920939*^9, {3.757472657404592*^9, 3.757472687638173*^9}, {
   3.757472755659018*^9, 3.7574727798582087`*^9}, {3.7574728206679792`*^9, 
   3.757472846907539*^9}, {3.757472939414609*^9, 3.757472951554398*^9}, 
   3.7574729842289352`*^9, 3.757473021475237*^9, {3.7574730668627033`*^9, 
   3.7574730987680387`*^9}, {3.7574732325165567`*^9, 3.7574732702124577`*^9}, 
   3.757474224191978*^9, 3.7574748949420967`*^9, 3.757474966381847*^9, 
   3.75747504216359*^9, {3.757651887040472*^9, 3.757651909101837*^9}, {
   3.757651949737117*^9, 3.757651990038888*^9}, {3.757652120770522*^9, 
   3.757652135463567*^9}, 3.757652168139825*^9, 3.75765231563063*^9, {
   3.757652477826109*^9, 3.757652490265019*^9}, 3.757652520910859*^9, 
   3.7576526034824343`*^9, {3.757652656521366*^9, 3.757652668755231*^9}, 
   3.7576645066527452`*^9, 3.757664579652319*^9, 3.75945920263795*^9, 
   3.75945924028899*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 266.572976289502}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757466473459405*^9, 3.757466524491395*^9, {3.757466604613537*^9, 
   3.757466632249634*^9}, 3.757466674142399*^9, 3.757466737534959*^9, 
   3.7574667749354067`*^9, 3.757466826303165*^9, 3.7574668985443974`*^9, 
   3.757466944824728*^9, {3.7574669826727057`*^9, 3.7574669995476418`*^9}, {
   3.7574721335121393`*^9, 3.757472152935192*^9}, {3.757472194861333*^9, 
   3.75747222667072*^9}, {3.7574722588108253`*^9, 3.757472403655299*^9}, 
   3.757472449775796*^9, 3.757472485916154*^9, 3.757472519574252*^9, 
   3.757472551920939*^9, {3.757472657404592*^9, 3.757472687638173*^9}, {
   3.757472755659018*^9, 3.7574727798582087`*^9}, {3.7574728206679792`*^9, 
   3.757472846907539*^9}, {3.757472939414609*^9, 3.757472951554398*^9}, 
   3.7574729842289352`*^9, 3.757473021475237*^9, {3.7574730668627033`*^9, 
   3.7574730987680387`*^9}, {3.7574732325165567`*^9, 3.7574732702124577`*^9}, 
   3.757474224191978*^9, 3.7574748949420967`*^9, 3.757474966381847*^9, 
   3.75747504216359*^9, {3.757651887040472*^9, 3.757651909101837*^9}, {
   3.757651949737117*^9, 3.757651990038888*^9}, {3.757652120770522*^9, 
   3.757652135463567*^9}, 3.757652168139825*^9, 3.75765231563063*^9, {
   3.757652477826109*^9, 3.757652490265019*^9}, 3.757652520910859*^9, 
   3.7576526034824343`*^9, {3.757652656521366*^9, 3.757652668755231*^9}, 
   3.7576645066527452`*^9, 3.757664579652319*^9, 3.75945920263795*^9, 
   3.759459244803598*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"c", "[", "200", "]"}], "/.", "AdiabaticEvolution"}], "]"}],
         ",", "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{{3.7594592592786694`*^9, 3.759459269611575*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw1U11IU2EYPs2rvBCjdbtWUJiYiVOoaD1FsXZRlPYDjWNOIaEL3XJSMKku
bAZiCeVFSYSxGd04I/KnGy1N/GGa4mTamnraj3O/KW0XQdC+873nhcPhnO+8
z/s8z/ucA/WW6tsqQRB0uYvdlSqNPysfupdGq9p9QbJ3o6Xd3/1AUJ5dOOxo
sZzoS2JE44hXjbghXswKLnuczj+hZ+vpTpMzip5XrD6jzqAN7LsUpu9HUfH2
TGdev4REFXvzFZqTxkHLXz/1f8PYqcAu47YX+T6nVZ8/hZCp9vl6zRzhzeBW
g7vfUjqBI2LXeKbIg976qZVHiWHCn8fC+9l0weUPcOW6fc4FmDUDY/rsAM1b
hPbYY1G1MwSdXEsYfTE/Hawdp/leaMum24xnPZjIFOUmLMNgWLJVnlb4+GA+
urvwziE/quWBKzh/7l9xhU4ifqt4WFhyPDIZgmRngD/wRmpdFfZEie9PJBvT
vYb1GO4yetYArtvCKnOe4ucaru31PBk0pcC3sYHI/Rrv6+8p0rOBm3Ru5ANg
on6uT8IfwmfTxK5feEfzud4g2okflxPEFeLP9YdgI337GR1NGDdIP/cjjDLy
p0GuCL6Qf9yfTQjkL0NTuzdhJf+5X1G8pP1kGVwmCivtj/u3hWLar2yPPoaP
tH8uN4Y+yodMzxGHQPnh/iZQQvma87BKwET5434n0UH5lOWqU7hK+eX+p3CQ
8i3DiWk0U/75Pn5D+T/+A0gikHY=
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw1U11IU2EYPs2rvBCjdbtWUJiYiVOoaD1FsXZRlPYDjWNOIaEL3XJSMKku
bAZiCeVFSYSxGd04I/KnGy1N/GGa4mTamnraj3O/KW0XQdC+873nhcPhnO+8
z/s8z/ucA/WW6tsqQRB0uYvdlSqNPysfupdGq9p9QbJ3o6Xd3/1AUJ5dOOxo
sZzoS2JE44hXjbghXswKLnuczj+hZ+vpTpMzip5XrD6jzqAN7LsUpu9HUfH2
TGdev4REFXvzFZqTxkHLXz/1f8PYqcAu47YX+T6nVZ8/hZCp9vl6zRzhzeBW
g7vfUjqBI2LXeKbIg976qZVHiWHCn8fC+9l0weUPcOW6fc4FmDUDY/rsAM1b
hPbYY1G1MwSdXEsYfTE/Hawdp/leaMum24xnPZjIFOUmLMNgWLJVnlb4+GA+
urvwziE/quWBKzh/7l9xhU4ifqt4WFhyPDIZgmRngD/wRmpdFfZEie9PJBvT
vYb1GO4yetYArtvCKnOe4ucaru31PBk0pcC3sYHI/Rrv6+8p0rOBm3Ru5ANg
on6uT8IfwmfTxK5feEfzud4g2okflxPEFeLP9YdgI337GR1NGDdIP/cjjDLy
p0GuCL6Qf9yfTQjkL0NTuzdhJf+5X1G8pP1kGVwmCivtj/u3hWLar2yPPoaP
tH8uN4Y+yodMzxGHQPnh/iZQQvma87BKwET5434n0UH5lOWqU7hK+eX+p3CQ
8i3DiWk0U/75Pn5D+T/+A0gikHY=
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.9832411754099206}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.759459248118634*^9, 3.759459272004291*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Threshold", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], "]"}], "&"}], "@", 
     RowBox[{"ReducedSpinDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c", "[", "250", "]"}], "/.", "AdiabaticEvolution"}], "]"}], 
       ",", "MaxPhononNumber"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.24731787153318083`", "0", "0", 
      RowBox[{"-", "0.24312636593633494`"}]},
     {"0", "0.25268212846681737`", "0.25266175346062897`", "0"},
     {"0", "0.25266175346062897`", "0.25268212846681914`", "0"},
     {
      RowBox[{"-", "0.24312636593633494`"}], "0", "0", 
      "0.24731787153318266`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.759459292822962*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
If during the adiabatic evolution you keep Ising interaction constant, you \
can get an entangled state.\
\>", "Subsubsection",
 CellChangeTimes->{{3.757664838713068*^9, 3.757664941729403*^9}}],

Cell["\<\
For the fully entangled states, Bell state, no matter we measure it on Z \
basis or Y basis, it will remain maximal entangled. Therefore, if the \
behavior in Z representation \
\>", "Text",
 CellChangeTimes->{{3.757664979877515*^9, 3.757665071747793*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimulationTime", "=", 
   RowBox[{"2", "\[Pi]", 
    SqrtBox[
     RowBox[{"40", "*", "45"}]]}]}], ";", 
  RowBox[{"NumofIons", "=", "2"}], ";", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", " ", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"vi", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vf", "=", "5"}], ";", 
  RowBox[{"Hamcar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"adag", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Eta]", " ", "a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"\[Eta]", " ", 
              RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}]}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
           "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
    "]"}], ",", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"vf", "+", "vi"}], "SimulationTime"]}], "t"}], "+", "vi"}], 
     "]"}], "Hamcar"}], ",", "True"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AdiabaticEvolution", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataYRep", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{
           RowBox[{"SpinRotation", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "]"}], ".", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
            "]"}]}], "]"}], ",", "i", ",", "MaxPhononNumber"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataYRep", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", "\"\<00\>\""}],
       "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"ReducedSpinDensityMatrix", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
              "]"}], ",", "MaxPhononNumber"}], "]"}], ",", "2"}], "]"}], 
         "]"}], "//", "Chop"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "300"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982437065268*^9, 3.756982574281869*^9}, {
   3.756982630906192*^9, 3.756982682909855*^9}, {3.7569827521009483`*^9, 
   3.7569827645313883`*^9}, {3.756982808758478*^9, 3.7569828159322433`*^9}, {
   3.756984219086583*^9, 3.75698429553036*^9}, {3.756984482677462*^9, 
   3.756984553193006*^9}, {3.756984590893515*^9, 3.756984591416934*^9}, {
   3.756984626994535*^9, 3.756984627404067*^9}, {3.756984668968157*^9, 
   3.756984669106083*^9}, {3.756984724603725*^9, 3.7569847620372963`*^9}, {
   3.756985183789019*^9, 3.7569853699996243`*^9}, {3.756985403098816*^9, 
   3.756985405672268*^9}, {3.7569854481518917`*^9, 3.756985450266583*^9}, {
   3.756985491170484*^9, 3.756985588234439*^9}, {3.756985634063283*^9, 
   3.756985641930625*^9}, {3.756985768902295*^9, 3.7569857707264977`*^9}, {
   3.756987037059238*^9, 3.756987044709035*^9}, {3.756987109851344*^9, 
   3.756987118175552*^9}, {3.7569873177192698`*^9, 3.756987321047307*^9}, {
   3.757319971995852*^9, 3.757319972509303*^9}, 3.757330273828147*^9, {
   3.75733032588451*^9, 3.757330353664363*^9}, {3.757330442667632*^9, 
   3.757330443222568*^9}, {3.7573304742106447`*^9, 3.757330525802122*^9}, 
   3.757330700097691*^9, {3.757330797840852*^9, 3.757330914252501*^9}, {
   3.757466295552644*^9, 3.7574663178864117`*^9}, {3.757466373801754*^9, 
   3.757466426247713*^9}, {3.757466463692524*^9, 3.757466515665208*^9}, {
   3.757466588386499*^9, 3.757466642710381*^9}, 3.757466726030395*^9, {
   3.757466762452621*^9, 3.757466791804352*^9}, {3.757466854886403*^9, 
   3.7574668630092373`*^9}, 3.757466913189487*^9, {3.7574669726425133`*^9, 
   3.757466991895626*^9}, {3.757472130353787*^9, 3.757472132888494*^9}, {
   3.757472188142934*^9, 3.757472220143003*^9}, {3.7574722522643967`*^9, 
   3.7574723887989693`*^9}, {3.75747243112044*^9, 3.757472471088176*^9}, {
   3.757472510110084*^9, 3.757472541602565*^9}, {3.757472614174223*^9, 
   3.7574726153573017`*^9}, {3.7574726613169518`*^9, 3.75747268572908*^9}, {
   3.7574727595618258`*^9, 3.757472762199213*^9}, {3.7574728109616337`*^9, 
   3.757472836662491*^9}, {3.757472937609859*^9, 3.757472943033309*^9}, {
   3.757472982404356*^9, 3.757473011696568*^9}, {3.75747305930366*^9, 
   3.757473091463759*^9}, {3.757473222260315*^9, 3.757473263130239*^9}, {
   3.757473858367423*^9, 3.757473898017995*^9}, 3.75747413661721*^9, {
   3.757474201970292*^9, 3.757474216612258*^9}, {3.757474854301653*^9, 
   3.757474887193388*^9}, {3.757474953362226*^9, 3.75747495886067*^9}, {
   3.757475032163362*^9, 3.75747503476652*^9}, {3.757651872390626*^9, 
   3.757651892034471*^9}, {3.757651933302465*^9, 3.757651982945315*^9}, {
   3.757652029489764*^9, 3.757652042525775*^9}, {3.757652073768285*^9, 
   3.757652204037105*^9}, {3.757652299919091*^9, 3.7576523087745123`*^9}, {
   3.757652430915778*^9, 3.757652514096414*^9}, 3.7576525955418997`*^9, {
   3.757652639917604*^9, 3.757652660754683*^9}, {3.757664495985628*^9, 
   3.757664499697365*^9}, 3.7576645709617567`*^9, {3.757664948521311*^9, 
   3.757664948667152*^9}, 3.757665028073182*^9, {3.757665067475251*^9, 
   3.757665080930954*^9}, {3.7576651397901297`*^9, 3.757665140035578*^9}, {
   3.757665930418998*^9, 3.7576659925810843`*^9}, {3.757666095855496*^9, 
   3.757666158502522*^9}, 3.757666204891837*^9, {3.7576662595402412`*^9, 
   3.757666262626359*^9}, 3.7594499147241087`*^9, {3.759456901780374*^9, 
   3.759456906843151*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
579/RILiNHfZHzTf/wE6O/Ej
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxVmXk8ld/zwCVbiYoWkn3NHhKKZ2Qn2ff12u7FtUTahAqFpPBRqZSo0KZC
oUgpS4vuqlJKKktKkpT9d3zv8/R6/fzjNa9zzpw5c+ecmXk/skExzqHcXFxc
sgu5uOb///8/GibSvVkmwoWN0c1+TxeMv8TlL9jdgR7931MvsTN2PtrSMz+w
8ftNzy79JcZ/Y9H7Pxbum3yJua/YWm5ePomJk3LXFvwl5s9hicZpD7qmX2Kx
phveTZdzg5hPw6vSf+t54WtZ50EeNF692zzk1Qw/pKil1ND/EPoWg/B2ybTb
aPxvpcu3W85C4FFDszs2RuhfCrcEbKKq0Pi5+PVGLS7LQTfYrO/aX2I/Eahf
ync2CZ3HdKlhsu6sKETrf3g6MUvsvxJaepb97UX7fboCj4rLV8GviCZB7QnC
ntXQKSg7tAr5J93Smk/YRRxkWvm5t08Q9q2B6UNTJ1vRfsq9DraJMxLAX0Xa
bI3mc+yVhC2hQbVGMy+xp0keOQNlUuDgvnV77h/CfmmYceLlMkf238nWGlSt
kIFS2SXfr84R55GF03L/KexF44e9dY+QZmXhw8uWJa4TxPnkwH9lF5cs2t9T
ZaPGKRd5EN+PiepPEeeVh9Tnc5SVyJ5140YvO8oVoORrXwjj3/kVYb9Z9+BR
9PtNNpts551VhNSF6Td3TBD+UAI7uRGGHNL/LHeL6GYXZWjV37Pd6S/hH2U4
Orm62B/ZVxRgWRNXrgJP1fN2fEPn5fhrHcxmbN1Xh/aL1rD1qJhZB4fUbiee
QPZw/KcKw3v/LNdFMjZlP/HBWQ2o/AlmL2cIf6rBMceXKfeRvKzd6cyqcnWo
gWeWOf/iQQM81MsTR5D9H0+4GdvPaEDgi7+irdOEvzUhj3RQ5jOSb4d4fUh1
1gJNXQPJon/xrAWLpHRvpyP9WwpvQLeLNujZvB2hzBK/hzaYhWjGNaJx1f03
c3fPasNFuRJ6xL/fZz0UeQ597UGyKPl2r2jFeuB5Pli0eY74vdaDspD6gVJ0
vin7at1KFx1gpciM/5kjfj8dOMrvkO+B7PmsdyfNdlYHPmnatHNPEr+nLuRR
di2ORb/Hc4la9pdyXXjuuXFOYoL4fXWBdCeweDE6Xw13vdIBFz1YWD+zXwXp
5/zeepAmI/2tet7ewXu71s7qwcGBDy9V/t33DdAw3pn8Cq0/RGtou1u+Ab5U
K+om/SXiYQOkx/6V3IDsi7n7QNzFRR8O0cmTImg9Jz70YaveqnpJJHucexgx
PKMPbp4l1UazRLxsBL3Vu+WS0HkgvfleZvlGGAx5KLR4koifjTD37JaXGVqv
Qn2yRNHFAFQsx4TOIZkTTwYw9CmBvhmdd7lLq1/TjAGcvyR5cWCCiC9DWHxt
/eh9NH/CsP2GT7kh3HLsedb9L94MYaDv0j5lNL9X5tncuLMRaLofTVKeIe6v
ERhHuh+novXP+F845s0YQabfcLUG8gcnHjfBw6nlYpPI3qrhjgsa5ZtAo83B
Yf494MTnJpAoZLxOQvudZdNG25w3g+gCIZfWSSJeN4PzziPPzyP/p91nmIXM
bAaG/YmTpnNE/BrDbvLbOSHk36hS1n9zZcZwa0zBhBfp58SzMbxdljucjvS7
ZXV+Oe1sAhMNseduTBHxbQLe8fzU3Wi+yfbX+vozJsDlcHbJln/xjsHK825q
NHReJc+uw/QyDEJPr+lXR/M58Y+B2dKOhauRvYelo6n66wB2ndhcVIXGOfcB
QH4XQ9MJ6ZsW+bEiLRlAwvSlmdW/9wqAl/yOeQnNj+WLbaAzAX7baZjdnyDu
C8BO3mXte9H454mRUOl1ppD0xX9X1BRxf0zhyY7azkbkD6/v24Wjkk3h2gr9
hR7TxH0yBdfMvjM+6Pwvekbv1DNNoeD6vhmff/fLFPj6Ut5Qkf2mrPgAgXVb
IOmZR4ntAuK+bYFD2UIaK9B4TesYv3vyFngrkaN7ed7e/92/LSCz3JhRjuxR
vZdws5S5BUL8xmjz8cS5j1tg7/JUf2m0/tyNcc+fKmZQL+9acRzp59xPM5DT
+23thcZFSnYtwJLN4Fzd993v0HrOfTUDQ9pY3C2k/3DB34psphnwt3Y08KP1
nPtrBs7cEQ+C0PqpjD3OXSrmEPfz/eYgNM65z+bQnOvyqmv+/u2bnFRONocE
D77ygX/32xyi/7bfikP++RSTWJrANId8777mlFnivpvDTHtzSTuSPYOn7ZpV
LOB7vODmuBni/beAfdHWvM3z9ronjS1LtgCzHXUtGyaJ98ACVo00t1ORPWA7
e9afaQGBgxpGl6aI98ECxOZeDK9A9lQbp1hcU7GEyVrJXcVzxHthCZbXh7Zo
ot9z3Xqu4YkkS3A7OzW159/7YQnihumky0hfkcKBE1ZMS3iclSbr9+89sYSI
apV+d2TvcjFurEDFCpZpbddgThPvixV8/srnYILsOySY2t+bZAXNU+T2ggni
vbGCSn7zrTVI3+TswuPaTCvI4xYihc8R7w/SN/Ru/3F03ujRNINkFWuQjDxz
zHMB8R5ZQ4C1j7Ya2r/3C+/HZ0nWELngl57fv3xnDd1s9sUENN/jzaFMcaY1
jHx71lk5RbxX1nCtOeiS1/x7+Jxfh6xiA9bH9wwILiDqCRuwaKOWh6P5WFNG
V3WSDVztMj+dhuzjvGc2oKi1pGz+96muWpTKzbSBI9947XOniPfNBpq6aqhs
NF+lLEvNUcUWCo2qhZhoPue9swWZvUuNq9H8s6cFWUVJthAY9aX2xBzx/tmC
iOvK4aXInmU52fuGGLYQ8X2pg/y8f//3HtoC62js2jRkf/oBIUVDFTuQ97xs
m7KAyNd2cNnhw3px5J+JHTkvDiXZgcldp7i2aeK9tAMb0ohrCZofRVm6k8Ww
gw+u7wuN5oj8bgcv9/o18SH7Pvocl5JT2QpNIoIvVqP5nPd0Kxw7lZg+NV8v
OCxvjUnaCt/1KoVp/97XrXDx6Heb98i+p1vyYhoYW+GylKvHDFrPeW+3QnOI
yLgXss9EX1RMUMUebj+hb+qbIt5fe4gN/LZiHOmvWvdfk2eSPYTNvrWsRTLn
PbYHBeP/tP6i+cqSK8MvM+yhy9Oc69EMUW/YgzLDgdUy/54uO7F8THkbFBQ+
NtqBZM57vQ1Ef4tyZyB/LOVZXW+atA24ag84Nf+rT7aB2VPxTwbz9v45GXSM
sQ2U5f3eV/57z7dBX/Yei9fovH+/igl2KzuAYIdlmMAM8b47AP2u1ud3aD31
fWGVapIDnMklX9iI1nPeewcIefPyzIt5/9LX+O5mOMDlCZOV8jNE/eMAUvqf
+RLQ/Cu99tyfRB3hzUP+Nx1I5uQDRzgdqs5wQP4N9c3pzDRxBOjiIdVMEvWS
I8gcFuDzR7+ndGfHFe1wRzC+/EFbg5uG5wtHSC7klfJE428clqa8yncEZVfD
AYMpIn84QnThzo4kZE9+u4NLcqMjFAanCCX8yyeOoFa4eNsYku3NjisrDjrC
QNQvi8w5Ir84wlOpBSosZA9/A23qmagT7BSIEd+F9HHyjRNoDxte+oT881B/
OS3OxAnqUu7pzSJ9nPzjBCl/33fVovn7bjpdFA93gqdxnRJm00Q+coLxjGZj
CTSur5q3uynfCXSSgzbcQ+s5+ckJchySBn4g/SOljK3kRqS/TnjdyL985QT7
PuXmWKHzXpEUlRUedIK+rXsWzuczTv5yAr53evStSF/ISZff1aLOoLM1K3HX
fH74Xz5zhrAbGxP0kCy1/L92HxNnmBatN3+P7OPkN2eYeeN+Vgrpf53FKuIO
dwbX6FkNlzki3zkD7yKrufn7k8+zMq4i3xkcB/8Yhy4g8p8zCLySPjU4799k
N0vHRmfI2C86+HGayIfO0DoSLjX/fvD/LVjzZ8AZxu9+3SP/Lz86A7P56ZDq
vH+3dw4XibpAWdOD4+lI5uRLFyBZqBycz3eJQ6uazU1coF3sh1bADFHfusBn
896+7Uj/hlCPk0MUF9h7f73Kj1kin7qABp9ubR3a78f7k5F5+S7wSPv7vcoF
RH5F+2l2S3KheKvwfI0ZNrqA6wGvtu45It8i/YoXZbzQeUIYYit6BlzAdLng
mlMzRP3sAtpbDnfzovlSW70GDom6wtZbqyt/ztfr/8vHrnC75W5KNNL/+knh
fQ0TVzA/s5Y3+V9+doUbsnX1lmh9HtZ1nEVxhTxameDnGSJfu4K39q2KF2j/
rXVrQhPzXUG9T0bQcpbI365grbniiz/Sx6frYyjX6AoDX0/yrEP7cfK5K3gx
bpc8RONN184ItQ+4gmt8heLaef/+L7+7QqHbY60hpC9R6d3HGFE3GE/3Wqk7
TeR7N2B39K05h+zZULz2zioTN/Ap7DGqmCPyvxvY18gr/p33r7hfVgPFDdoW
LmzcwU3UA26gpRz0OXTev/lF/iH5brDyykXN32g+pz5wA+8byXQeJAcLvdcR
bHSDV69cEtSRPZx6wQ2O+EltHkL2SB6W4r894Ab9VclqTnNE/eAG/ykaPBhF
619xBbz1FHUH65AvN0rR+Tj1hDvsON94JBztn7f3fOWcsTu8lrB+qIpkTn3h
DrYBsUqZaP3WsQ+plynuELNyijr/e3LqDXfwfungNoXOzxct42mf7w5tdrtp
NdNEf+sOHljDWA+yt6k/UH2swR3irWgJ8/HKqUfc4cnFY1z3kLyXdIHrzIA7
DN/PX/Sam6hP3KFC+GK1/0Iapvf2I8tU1AOyFHcZC6FxTr3iASn3/VKWoPXD
rnIVA8Ye4LfyhmD8fL/xv/rFA3gGHKd/IvsqOoKSjlE84Ft55LPXSObUMx6w
SfCTLw2dJ9i61Ek/3wOywzNWKKP1nPrGA2LW+y53RfolH31S7G7wgD0bRzIu
cBP1jgc8v1BuqY/kV5sUJlMHPGDdlSPf+ZDMqX884JnHidcLkJxbE9KhKuoJ
sTRvcEH6OfWQJ5y8pxpki/a307pUQjf2hP79IueX/uvXPKFRNmHJDeQ/3oov
O3dTPGF7W5Gwxnz98b96yRPeRh/8yo30N8kp2Unne8Kb91IDBtxEf+cJ+wVz
zlkh/+09Gybd0uAJZxYcdqniIeopT/DTrHnEmPfvqrJf1AFPWL7Z9M5mJHPq
K09Qu7SywwbJw8f6W0VFvcCxSs7SHfmDU295gf5wcds6ZE/5IpWz9cZesHnT
y8fO/3iOF1TpRXxQQ/YHpVJiSRQvOCo7+TBmlqjHvGBif1TXSTR/7Uy5uUC+
F/wIKqve+a/f9ALG7uJzhWi/zp2DYpUNXqDbECfruJCo17zASOFrzMS8f0fW
fXcb8IKbH9I8j6NxTv3mBdnJFo2p6Lx2EREPp0W84cucVuj8+Tj1nDcoZ1aY
za/n/XyloNTYG/ZONDcmLSTqO/Rb8eXW8aPxB35D4bYUb5D9HXd+Ph9x6j1v
MGzx6JhG43teqZn8zPOGRYrxAfPxwKn/vOFrRp3XKyTrOlFFTjV4w0XD1s/J
PEQ96A2j6udC1ZD8/em1PpMBb8iSye9+w0P0y95gPa6bacSH/Gv+vf6LiA/Q
ZVrf7OOl4fWiDyz4eLjLF8lBjRrHso194Hr9Bhc2L1E/+kD1jsoDfkjfWoPo
YF2KD7Q6FEZno/Nx6kkfSL3XcWIfkjtv3djYlYf0reNa243Ox6kvfaD+CPmU
C5KPq/0QPNDgA6t3H/a8/K/e9AF/cVXeef5ie0mrR3nAB/SdLJeqLSD6dx/I
arZuI6Hz80jHVneI+IIZ2zVEDcmcetQX3G/UPr6M9n9w6mZGgrEvJJ4HxVhe
oj71hWt/xijHkbxH5KfvWoovMDz4JjT4iXrVF2SvP5dvF0D+zV6/vjnPF4yS
S3suIZlTv/rCoxw70+JFyL+8cbwRDb5grKn5IH0xDa9nfSE9uHjRJzRelnL7
zbIBX1jWpim8eDFR3yL94vXRGJJJE6PX74r4wY4v7AF3NJ9T7/pB5/SDE/xI
lojXPehv7AcjqblrfwsQfNIP3AbsxTSR3Pkt3p2X4geXK8JXfuUn6mE/SIp8
1TmO5ONh1arX8vygKoDr3XF+oj72gxL7sc4iJNv2jM06N/jBoJ3GxyEkc+pl
P3BxFIrqRjKP9wbmRL8fVN+YWKEhQPANP2g5wRQ4i+RGZkJZsYg/BMQtf3hd
gKin/cFH1Dpm3v7d9ncSrYz9IXHtoGfYIqK+9gcRrSNqZCTrtI47DJP94WRx
SP0FJHPqbX9YImMg3TPvX9ioUJDnD1qv3BXakcypv/1hcmF+8OC8f+t3/d3U
4A8V/D4/FBcT9bg/jAsvOCEx71+92ue9/f7Qwsi+a7uYqM/9ISfHZksDkiVu
/C3OFAmAsrnpQ7+RzKnXA+C/qJ3nAwRpGFvZMEHbOAB69UjluktoeP0eADeE
0ybZSD52YY/NK3IAnK1V8csSIur5AKDnPPR+JEzDbCTqJZPzAqDvV1YWcylR
3wdANuxxqF1GwxYWTP5UaAhA8Z0WoCJCw+v9ABhbtjY/UxT5V3hTy7P+AKj1
vmQVuoLgPwGgNL7R8vFKGrb5sbG94aJA2L5pRNp0NdEPBMLRSoF7dCSLL/C/
my0VCDMSjZ/ZYkR/EAhVke8/G6yhYePGybI9uoGwPr8o2w7JnH4hEFLHdYuf
IJm599wRXZtAMPiQEzooQfClQLh4dX95OJJv3m38fcg/EJ7wuh9xRTKnnwiE
OfJDJY21NOzo2PuArvhAuHTj55CyBNFfBIJPyOzCK0h/xPq5do1MpG8HKFig
cU6/EQhi7mSlj+I0zCpaWu/AuUCI8hY1MUUyp/8IhAPPmskPkKxwFTvHqgqE
hzXXuLXR+Tj9SCDMNouZNKPzcw8ECKi0B8L9+LwX9mJEfxIIaXYO3E9W0bAP
CvvjEt8HwpXBI9/eriL6lUBY5P29/DRaf59U/K7jVyDYK7QmmqBxTv8SCFZ3
r5SuROOF55os5RaRoM++9IMS0s/pZ0jgGXKwUhCN73zbczNBigSRWSbPH4kR
PI0EgQGLKvXR+V3EFki065JgsDngnL840e+QwO7ZcME48oe2m2z6WhsSxCt1
/nwhSfQ/JDixrydGHclCeaY/YvxJsP2p8IYjMjS8HyLBHh4zrzo5Gva1g+TV
HI/2E92ZZoBkTn9EgqcK4z+0lWhYq+DB5lWZJLipdn/1eRUa3i+RYEebU68i
ki9al2hEnCNB60SLwAF1on8iQaLKo24RLRp2IP3RyYYqElSPty/M0iT6KRL8
5vZVXaZLw/wf9S5Y3k4Cl5GS4bINNLy/IsFp/nSrGT0atmmOmxryngQ5C7Yo
JRnS8H6LBNKDfiZzm2iY2Gb5zru/SFBzMtVDGcmc/osEmRkTxXsxFL+7zUBw
URBkxa/UpJkS/VgQOK2rGXoCKH5rgq/4SwVBSrZXIdOc6M+CoO4hNjpkieJ3
NHXFbd0gsBU+cLLSgujXgqCUfxsr0gbFr9bFZF6bICB99SEb2xF8MgiKT9Af
MtB4BPXxgKd/EMjZnt1hbE/D+7kgsBo9sKBlG4rfis/O1+KDwIRb66sOGuf0
d0Gw6O6VdDdHFL99PA1zGUGQYeEicNqJ6PeCILdkqfUXBxq2QF5R2eVcEHRq
7p1+6Uz0f0Ewe0h33zsXGvY+wCL3clUQnB7LXijkTPSDQTBc5h/JcqVh986G
Tk20BYH5xksR99xoeH8YBAtMdDxfo/Wn3qSH2r8PgqmRpIE8dxreLwaBdvXF
KqoHDUtYdfll8a8gaCzTt0lyI/rHIEgP5HY09aRhzi4thmMCwaBTmz2s6kX0
k8EwWb63Rx+t1zreV2olFQwrJh/UiHkT/WUwyMJ6bx0fFL8v+ITP6AbDpoqk
EVMvot8MBom8PbrOvih+FynvHrYOhldOjsUNfgS/DQY+2/MFb9D6VkurXlP/
YPiTd0FSIYCG96PBIKzknM5NQvGbSt5aEB8Mv85ufqeLxjn9aTCc7fZMawxC
8dt0+M5ARjB0/Rit1Awl+tVg0FT6ppUcjOJ3pkxm87lgMCnfvcuaTPSvwbD8
ZfOS0AgUv0ZtWceqgqH1v4bHXRSinw0GCLt2tZuK4nfXwFhvWzAccJuruxdL
w/vbYLixNSDHP4aG/a4SCNB/j/bbAAPZ8TS83w0G7jF3l027aRhjRKU981cw
fDM3Slu2i+DPyN7Oqm8eiTSsUsNGt1sgBKSPeU6/30/D++EQ4PJlTw2m0LDs
iPAibakQSC2wfKmbRvTHIWBbmFhVkEXDwssy+dN0Q2BwY7PQ60yiXw6B5/aq
7xbn0DDLzxXbX1mHgN5mtyDzAqJ/DoGLY1OPG/6jYfKyT9+q+oeAgZ//xcZT
NLyfDoHTd2ZM2opR/Pp/tUiODwF+SYy5E8mc/joEVu4ovqh6EcXv6cU36Rkh
sPwP9mTiGg3vt0PA5kaeaxeS771SXaN4LgSafggPKd0kvoeGgOmXCoHKOhS/
K+zSdleFwCVdo30NdUQ/HgLso+k7su6j+HWKHH7WFgK3abvNG1uI/jwEwsoG
p38j2TnniKf0+xCgRNXYa7QT/XoIlGS8+W+OieL32dVHcb9CILj99X0fFtG/
I/uHVbS/smnYEoHn6i0CoTD+nRy27SMN7+dD4cjv44eeInnQ/NsJcalQwHwz
Gs730vD+PhTC2xpysoZpWMuBJQuidEPhcEjiHbkfNLzfR/r259msR3Jpo3pk
k3UobFt4tPHUFPH9LxTqTfdJ2E7TsP1TW9mi/qHgv7py/+EpggeEAntp9spg
ATrmZxCFkeNDgbrWWl99ER3nA6Ew63J9z3F+OmaUcLSiPiMU7lXkyr9ZQcd5
QSg8lvGwr19Jx8RuXxcVPhcKCy2114EoHecHoeDQhYmOyNCx38MvkkhVobCk
91rDkCwd5wmhcMvAZPlxKTrGUBvur24LBZYqOb9EnY7zhVCQpu/Y36BBxyop
ws4C70PhRfPY9pR1dJw3hIL8na2tIxvpWPYlzfs+v0Lhw7BPso4hHecPoTBY
SV8rqkfHwnu3KVUKhMFz6opVPVvoOI8IA3avIZeLOR2zlI45zi0VBo/Gzyx1
M6HjfCIMhC69E0i0p2Pyvscm3XTDQOrWhjPqDnScV4TBmVKPq67WdIyrsDKk
wjoMBmQUvtM86Di/CEP5PucT3YuOdbNfdkz7hUHRl9F6RWc6zjPCIHHqe9pv
Eh2rFxkxcIwPg5uF2D2vEDrON5A9755e6fGhYycdlpWWZoRBYeLHAi4qHecd
YaDezyX9IZqO7cjWFvpTFAaPdUSSL4TScf4RBvoaT2WEdtIxp3bHXbZVYbDt
412+/XvoOA8Jg1SFKrPDMXRMi2/7x6K2MKj6UT5ssJ+O85Ew+L0pu8M3jY4t
Mcu1+9kdBhlq+mFVaD2Hl4TBwlORhqVZdGww5VaN+a8weCGV+vfEMTrOT5A/
huSWWaP1Lffp0qcEyNC8KGEisoCO8xQy7GG8/+5who6VTvzMHJIkg9jEigoy
Ws/hK2Rwf9jqf7uYju3XFxkz0SVD7YYr98rK6DhvIQN/VvMdHbTeL17HP8+a
DOXX59Lzr9Fx/kKGd14jUfeqUfzedG774keGblrfeAtaz+ExZOC7UmK/ro6O
rf4ep2MYT4YHtl/aSh/RcT5Dho979G8a19CxsXX5Z7MzyDA67JmX0ULHeQ0Z
etLn6PF0OkYPq+LrKULn01c2vdJMx/kNGZYFSp5pYtGxG6XMWN0qMsg+4Gna
+JGO8xwybDtnHSPOpGNHen51HWojA8nzZumbT3Sc75BhUOKW+thPOkaRXGHR
1U2G7QGrhI+jcQ7vQbK/z13WLzpm4a1XqfGLDGvzsWuXFjJw/kMGZQkFPcHf
KH5PuoofEKCA/uU75Ks8DJwHUaD+q9JbWMXAuFg7UlmSFAjfuOxzCj8D50MU
OLneeNoBjXcvK/iurEuB/utLBm6vY+C8iAI+8dufvl3DwOrtazwSrSlQm8qT
eEOFgfMjCugevRXfa8zATmaxH3b4UUDPulOHT4uB8yQKXJAYdb6+iYHtaP2t
JhdPgR8tcX03nRk4X6KAar+z0kczBubEs+pEQgYFRowurNJyYOC8iQLN2waH
psgMTNNUn6u9iAIr9PsU7LwYOH+iQOOe5XdFgxmYYLJ7xNoqCmwCMdHzSQyc
R1FA/GhJgUwMAxuo38mKaaOAwY1hQ6NdDJxPUcDizHBKQj4De/LnhElzNwU+
76lLMU5n4LyKAq4kG+WDRxhYid7d8lW/KHBY6Y+3TwUD51cUkLvSMJl8hoGl
bH8lEiEQDvfPfP3+/DwD51nh4FEbskXrAQPzvfFnX4NkOCRJko8+vsXA+VY4
mDt7jc5WMTCjodX9y3TDoTap35bJYuC8Kxzqe67L/WxlYKtVDJxCrMOha3vP
ca42Bs6/wmGEvLtP4ysDGwvxvHfXLxys8r4Kf+tm4DwsHPx5eK42vmVg9Au7
FQXjw8HT1zNMdY6B87FwOB3v4HPhFwO78f7UMf+McHj4+qOQ2g8GzsvC4eyO
Er86USZ2RKJu4lZROISftffhXsTE+Vk4DFps+7CZm4lRPN8E81aFQ7/k7hs0
ZSbO08Ihg1ZRyivFxCwKJl54tiF/JF5WHVnBxPlaOOS/XJAZuYmJyTHEDa51
h8PavxP9l3WYOG9D/pGgky2Rvjlho5K50XAon9BVzdrGxPlbOGx41cTTb8nE
3tl5L3ERiIC2DW1RFoZMnMdFgEelTNR6EhOry9i787JkBLDeWS1/5s3E+VwE
zCiq5/+xZWInnpzumdCJgM2ThlER8Uyc10VAuWShn280E4vnvmdrbx0BzNVn
XkT4MnF+FwHU02syTdOZmBP2trrYLwJquYNkyg4wcZ4XATxXXc9URjExzX1T
UmNxEZD7WWvoyQkmzvci4PSlSHrdf0xMsE4i0yojApRS6ltfJzNx3hcBYjl6
sgLlTGzg96Zfp4sioF7jgeDFMibO/yIg4MASyYljTOyJjq/f8O0ISPMIMBGv
Y+I8EPlD5v3MjnomVhKzr9W0LQIub3ziKX+BifPBCLC6FXp80VMmlnLt7PqC
7gigyfDdNnrBxHlhBOyXPPaGfJuJ+Q7ePzMwGgHbPvkr9ncxcX4YASUjfZJc
PUzMUKmbd7NAJIjmLupgNjNxnhgJ769R1jYMMbFVwTMxxyQjYUze9NjzUSbO
FyNBscnNKJbNxH6dl+zq1YkE3wSfn7nTTJw3RoL3PgVSCS8Lo70zNte3joRt
iZaG0M/E+WMkOAwejCALsbDr4v43Mv0iASg8ocliLJxHRoJeWlix6QQTy3JP
FuuOi4QD/PHFhlIsnE9Gwu8t/d0eaiyMnH/uoHZGJMQo7doeKcjCeWUkmIqF
rZvTZGEWtMZvqUWRcGonyUDGhIXzy0jg2nhFq1KShckJfXB/dTsSyl6pXKzA
WDjPjISrr4ekHjuysDmbuSbVtkiIOyo1+leLhfPNSPgcLjKpiMbfHZJWS+6O
BL+cS/zqwSycd0YClvuNrL2FhdU1YwX00Uh4F1Rm4h/IwvlnJLzZ/rTJOIGF
neAKnFMQoMLhx2ymkSsL56FUCNQqdDGKZWHxxvvDd0tS4ean1OHuQyycj1Kh
fWDptalQFua4t5j5TIcKBu7RK0pSWDgvpcIKy9rjP0+yMI27TcbS1lTgNhTy
8tjFwvkpFdakJVck57CwxWM9ZXF+VFALjOkJKGfhPJUKCRRDAb0MFtavvUCk
JY4KG4eoQvfPsnC+SgUBEYmTorUs7HGU7D7xDCq0VlCvJJ5i4byVCnfFf9y1
vcLCLlwx7aMWUYHx87LfdAsL569UuKbHlJVE+yX3kxybblNBOUrfROYuC+ex
VLhXLH19KZuF+SocrBdto0JFYevQEjTO4bNUkN4QdsCgmYUZkkoUyN1UuPKL
4WvTy8J5LRUgpEPY8gkLW3XuUU79KBUG6PGXCzpYOL+lwtposXdXh1nYr67e
v0ICUXBvb96zdgYL57lR0Gz5fTO8QfG7emEwSTIK5ALl+rBJFs53o+CQfWfR
+Q8ofl3lX1TrRAFP4c/rlp9YOO+NgnzFzDFRXjaWlWu2UcA6Cn5xbSSzhlg4
/40Cen9m2v1vKH47gi/4+EWBktULn01L2TgPjgI+7sJje/6wMHPBNMHKuCjo
xWqs636zcD4cBbcKrOVfiLExWeuLCdwZUbAluu9hKTcb58VRUHxZPshjloXN
pj3+4FYUBUGbMhm9smycHyN7Os62hAuxsbcPP9tU3I4C7tns87f52DhPjgLd
P7uETqqysdpZnurp1ihYlMb7vXc1G+fLUVC1Zt3HPmE2VrBJUcqxG52fcsOL
R5eN8+YouOazhFdJjo3F7bbIKB2NAlKt15gwWs/hz1GQ+SGs02wTG3OsCR0d
548G7jWaE1bqbJxHR8NG6dmxLdJsTGM03ddWMhoWn2DrU83YOJ+OBvW5zlZv
fTa2WOtyS5FONGgoBPw4qczGeXU0+OposI/bsbH+yBbtn1bR0HQneoQKbJxf
R8MJMZqZlDYbe1zed9rcLxpsyAO/m1zYOM+OBmbKVucMWzZ24Qsf76m4aOgt
4Kr7aMDG+XY0PNs6Hczvy8aS5ZRjhg5Hw6Zw+4Tbrmycd0dDq9zhugFTNuYT
YPXGpCgaeuLKRsJD2Dj/Rud5s6lmyJ+NGZwlm+XdjoajK88v0UP2cnh4NHw9
KX9hkMrGVr45fP1LazR0hTQ1aIWzcT4eDXJ9g4kP0H6jK8tXG3ZHw5InHQkH
E9g4L4+GszolJQnxbOylc9uB7FHkz7+GAgfQfhx+Hg3dt9oG1JLZ2LVjA0Mf
+GNA9WAk780kNs7TY2CpfPHBCAoby3wu4K4rGQO5uXzYm0NsnK/HQM56umrH
YTZGXrSu6ZBODOzyaVsZHsfGeXsMnPyzcHLPMTZmbmmj2mUVAxckD/69l8vG
+XsMKLIKLoTtQ/GbGv6fhl8MyOxN/Dx5ko3z+Bj49C4oLPgMG5t9kDm7Py4G
KD8ox23R/hw+HwMzL7lJlsUofqcrKKzDMfCLLTZ27SIb5/Ux4JETYD6J9q81
fMpQLooBXX6tMYtyNs7vYyA4uZS+/zqK351fNyfejoGr/uPqPoVsnOfHQKLt
8PPeShS/VYvLOlpj4Ox4HF9bDRvn+zEgf7TsvnMJG3MYUV0u1x0De1QdZfjv
snHeHwMXu6gmUQ1sTF3DLjFhNAbOt/mdb7vCxvl/DLR8anE/j8Z5a2riPi+M
hd3jTZr+j9n494BY2LCRV7fsNhuLZz5RzhGOhV0SNbWnm9n494FYkDMYtct+
ysZ6f7LfbRSPhWiSS927Ojb+vSAWTgTFLf3ehu7Xsr7cj/Kx8OGbGeP7Szb+
/SAW8sv4sn2b2NgDzXHLI5qxoL1x+k7OCzb+PSEWZs5RApJZ6P7Z803rGcZC
d16xrHQLG/++EAv7JARZSXQ2djZy1a33ZrEgZTIYgb1m498bYiGEzVgv/wzd
zyylsIxtsZAu02TSiPRxvj/EgvfBOWeDt2xsT7m+hI5XLAx4VctFIfs43yNi
QWGvcrLXK3R/Wyxpb4Njwe6pl+vObjb+fSIWWq8fUONnsjH3L+7p6dGxcMfD
+Zb/Gzb+vQKdr0j4seAHdL8Xko209sTCT4GRI1ydbPz7RSxMu4lafexiY7py
u368To2F1NCpqKU9bPx7RizUmX3LpaLzlMDhiwdzYiFPoDPrL7KX830jFjwW
qbqcQfOXBZz0Ui+MBafg38kkpI/zvSMWsjsnnje8Y2MpSWXCnaWxkLXTWP8Z
ms/5/hELO2ZZK/4gff8HQGvjIw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.3418453244865779}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.3418453244865779}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.759449993630398*^9, 3.759456933188601*^9, 
  3.759458719198697*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxVWXc81f/3j1JGJKRUiOzIjFK8jmySvee17rVFSmUkKhooiayGPqS0aCrt
jIbusLn3lrJairbo9+p73+8ej19/6HEer3HO69z365zn8/lSCI5zCeOfMWOG
wswZM/7+////0ZEEe92ySNcOJKkTlun14wVhDyKhCPni9qkXqNTeV0d+agyF
8r1/HPiTHP+Kvi/9c1gej3tIbThjceYXei9h86ruFzn/D0q4/0n/v98vULzZ
qv7fZ/jh+wAYKP4i1wvA1emgwut4/ZVki9CuqTlwQ/ZM+94f5H7CoF6q4OOL
4/tx0fX9ZRdRKC3TLXz5g9x/HoxGKkWun36BKhJ1jZtc58NXh7ndAf/8SQCt
uKD4IPZnNm9Nmv60JGRXOhSX/SH9LwCtuLdFu/B5Xp+FByfOSMM3AaGvOpNk
PAshJTEn/CWev9vKZraYqwy4V4Re4PtFxrcYIky1WIfwetUBR7sdU0uguj6l
UO9fvLLg8T0iNwuf70mqZ+5ItRwI6B14G/kvfnmw0vo9txXHe+2A9qhGzTJI
dzw0o/8PeR4FSHmWp3oIn2+vj/5+yrQChPKfYmr8Is+nCO1Rsel9eD8vNSOt
YtflcLqam/tmijzvcnj+6NVPORyP+jfjF21nlMB6tK4k9N/5leG/naJLVbD/
Xw9NNwlMK8PFW94TWf/yoQIXZmQqX8H7Pz20XnKdqyrMXWF+7s2//KiCbsiD
cAXsrzzQ6mrCGTWYbewyZIP98fKlDpyEes0obMdq2XnWTKnDh8zTRiewzcuf
BuTu6v0Sgm006fCT67ICNLeri0X9IfO5Ai4nXJNaiW3xVudS6TOaYGj0fH8e
9sfLrxao+Lv2vMb2q6PuJg5TWjA2Mim+7TeZ75Ww8Vd/vgEerwv15ma6aENR
gMTGWf++Z21483rdnwhsrz92AdiuOrDgEbV8+zT5e+iAyboHGTOwf42dlw4l
T+vAycTmBEscL+/30YUjp6rcUrEtSa0bkKzRBZP5yymCfHTi99IFxe/D3Bt4
fNLhiv5FVz0obf+oLIJt3u+nB8H2Zdqvsb83Btey7Kb1oGrjsh1bJsnfUx9+
BLVHhmD72ZIbHYNn9OEY5UDl5Z/k76sPqRst377F8V/lb1DJcDWAyVX+/VQc
L+/3NoAE8zotcxxPxeitrUunDeCKxiVrlX/3fRX0I6EFtThfe+iNLdfPrALH
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
7GzpePz/AE7pyNU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxVmXc81e/7x0VGSYUSFdJAoqyUeV9CdvbMPji2E0kRETIqMzSMpIwWoawo
ex3niKJFUiJKiZT9e3++3u8ej59/PK7Hva/zvq/rej1vISdfYxdGBgYGISYG
hv/+//+/LsTVr7TDw+QVWiDr1/YwEfYwCtT9Wbp5VRe6oXtcUnDxB9JfXsNv
+K/9N0o8ESZHwdrNN+kVqBfMofMzxxPyGIn+ywhls7o+wNopqgffLxQwQkr8
h+EJRmI8M2SHGRzcjbWXnVZ37ltkhe2T9zY/ZSLmWwv1bU91tZfp6G+RybdH
xhxwT4r8OIGJmH8DRLd/bx/A9p/lL6XQbMIJXG9mU7r+rccF9TJPZCqx9VQ3
yIfKLHGD7P43pVL/zrsZTreuLVPB5vt0F+pvFvDAzNngKDIjsZ8toH20mroB
6x91VItlvQkfvC7uFF1mJPa3Feoc3HkOYeNFhgx0ghe3QfdVllfX/+2XH46s
7qhQxvbTHmIRP5ovAGwjlXHt//YvCFZfw8/cwNqfXDrwVaxwByhali9z/juP
EFD5DnuVY3a0tcxFxyUhqF96mDbGSJxvJwi2a0EyNp+l6CGJqya7YI94YgXH
KuK8u+DcKaV19dh+9s4o0GkFu8H4Yl6J/r/z74EiNDv5Des/16BygnlpD+zb
aXJB+Z8/hCH7nMr3O5jdkXSEW8lEBMI97O5y/POPCDjRsvR8sfGZ9kcf+xWI
Avul4zI+2Hor/toL+7dey9uL2T4SOhaFi3tB5u+TxGdLdNx/YvB+TofnMNaO
5vVnPxjvg29Hxk/rMBD+3Ad3mm//dsPsjW1GN3gKxMHRmU/hMLbein8lgGJk
zr0esz+mmSnrL0pAJPv5wIZ//t4PA+eTyl0wu8TZ6kOE8QEo7pp5HfLvez4A
m+IdGXQx+8i1h9BvIgmT/HqP6hmI30MShj4KPDuH2WJhxUmnlyShhPfE1gBs
vyu/jxS8ryoxZ8ZsbnLJEHehFFzpr1T+sUjHfy8pyOSUhHjsvPP6ZTJFJtIw
Z76z7CvWf+X3kwbpt1Ju8dj8n2WfROosSQP1tW+9OiPxe8qAJz1V5xhmU7dV
vBoukAE5uvx+ESbi95WBV5b9cWux/T9mrBION5GFfucXnHrYfCu/tyxQzty4
fQbbT9bX6sDtS7LgeDebUoqtv/L7HwReh+Dfhdj4C101reUFB+HkxQ7b14zE
93AQ6ve4/t6D2b7lz/hMTOTgb+Bb79/Y+JXvQw7Mdpy/O47Nb5FV5zGxKAfB
v1svFDAQ38shmO/1kZvExkNUQ3VswSGI+HMkV/nffT8Esdd2sLpi84l6Na3b
Y3IYaPu+P1PA/LXyPR2GLd15LB1Yf06TFtvni4dhT8mxA1GMxH2Uhzz9l2kf
F+hoVr7t4fECeUDOW4+e+fe9yYPTnhlPaaz/0I6O5RljBRg81H0rjoG4vwoQ
/rRhnRe2Xgdrp2HyogJQ0wwc/vveVr5HRTArMeSewdYvnaDlSBQogooTN/cB
bP6V71MRdEsUSt5j4zNedf1qNVaC5hyzRgoj8b0qQa9T13NHrH/k024150Ul
uJ9Zd717iYgPytDzIOx7NNbfO/flleV8Zbho/j3nONa+8j0rw6s1lylbsP2Y
xfUOXzdWgXLzLzMajMT3rQKq64f9M7Dzq5x4LSe3qAKO9qOs1v++dwQih7vC
JDBb2PJt9It8BKEK3PmGWP+V7x+BzvaLJ1Sw+aIFfbzk9gJoXf1YW4mtv3If
AOa/GdkuYvtf4PqxKTIU4Irqsbmof/cDYOstM6tmrD+FhVLzogcgsj7M4u4q
4r4AmAy0Gl2fo6PPsz9dBPeqwqzfsWpeRiK+qYJCcd+3D9h4q+8n1nuHqoJI
oUq58xJxn1QhV11jmQ9br3Pw15OqHlWofirv82OZuF+q8En58s//4r/qS397
tr1HICtg15HN88R9OwJWFlTFn//dj5ZpVvPQI6AvqXpi3yJx/45AWJ2EJfy3
3+qA4tyeI3DkwTYWBmz8yn08AnqxW5IV/tvvwxnLSVE1OLiT4ZEu5r+V+6kG
QWuO+dli47luBa5CoWpA2u++Ow4bv3Jf1QD2F0pMYu3RqX8LL/WowQm++Ts9
WPvK/VUDtrPjrs5Y+3zMGeO3ourgZrm+Ig6bf+U+q0PJGQb5P9j5fM/OzYmE
qsO0TvFc2gIRz9VhPj7MXwNr/+QbnBvQow6FfOSN6/7LH/+77+pwIqx0sBI7
ryVpQbdBVAPO5Gxdfv/v/mtA4JhO0dH/9mseMr0xVAN0nkQXrWEk4oEGrNFb
TI7G2kFnKcOuRwNEfDqvVmDjV+KDBjgo8zuYY+1lyuc07osehXqnyfr/4v1K
vDgKVQzrNC2w8+2VYpiYDTkKurrSTzbMEfHjKJjLsg8A1j9zd3iaZs9R+LvW
8YTmHBFPjsJ4gSebAnYeTl5GlCqqCZdMRE17/8UXTbgdEpq2dpaOLrBHjAyF
aEL/2++drtj3sxJvNMGlttShB5tvbokpUbJHE779leW8jrWvxB9N0Gm/Ke2G
7c/nV+ThUFEtSDs7dbrtLxGPtKBkUZvZCvP30DDzx44QLdBqt1sNi0R80gLn
N08e7MLOb/HmQixfjxb0sb4MMvkXr7RgFfWsdRs2voPKKk0W1QYST9B+pb9E
ftQGCuJQGcH2g57HvC0L0YaS6CsOpfNEPNOGJg1dPTtsfFnpmgjGHm048E4v
8z12/pX4pg3Fp3rCrLDziebH7TMU1YHzLQqPV2H+WIl3OvCw7HtOHubfjOvs
LzNDdMD+jYPyw3ki/+qARslF8mVs/Mb4S2fHu3XgFneMJft//v1fPNSBl7vu
bYnE+keFc+yRF9WFU4xy9rv/EvlaF0zH9fXbsf3PnozvvBCiC/sNerJfYv5Z
iZe68DdSb6zpDx15u2049bJbF1YvzXHfnyfipy6cHJa9bfZfvDueKLBTVA8Y
0ss//fxLxFM9YKr7KIiw/ZkbcLb4hujBgYUt/bnYeVbiqx5onbOTGsDa248k
+9Z064Ha8C5Pw99EvNWD/btKqsYwf6jIcfOyi+qDsFDGXM4iEX/1ocatdKER
ay/de+W5ZYg+jPrAieuYvRKP9eEd86ZshO1PhH+ze163PrBo5hcbzBPxWR/6
J48Xpk5h8XRjGue0yDFo2ins9WaajsfrY7C8rnNyCOu/YfWWKtWQY/CnhFno
OvZ7rsTvYyAln1n4Gjtv5J90p4RuzH5wd555jojnxyCPrJOhhfX/O8bL3i9i
AJPCSWYHMX+uxHcDkBd0DS75SUdeA9dKxUIMQH3iGb3lFx2P9waQmeEc/hWb
7+OLrTanuw1Alv1wiNoiEf8NYGuL77Aldt67Q/qMn7gN4VqZn6obNv9KPjCE
2dYJ+nas3cUmvjdWxRDGrIMCk/4Q+cEQlh523hOdpCPBXtpdSXdDqDiqpXF2
gsgXhmBvfqr/L+afNwYbzvWlGAKzS6VlE+aPlfxhCE/aqg89wM6X0mZgElpr
CGHMoQ2f/hD5xBDmlLccCcH8qa+WKLLnqyHIdi1FS2K/70p+MYS/nDobtmI2
a03XfAe3EciRDRIWfxL5xggi6oOF7b7TUZ0cZ5efihF8y+7Ij/tB1G9GMBf1
TmJhho7OFhvd5nM3gsbspz/fzRP5yAj+OMfsW8LOLyeWfPp5ihGsUgosHpsi
8pMRnBvNvmaJrfczt1uPXGsEBS9ee9AxeyVfGcEyX10HE/Z73OXnFlr/1QhE
BDK9XX4S+csIRPmueR7D9uecbvK7jNsY+qXfkNgweyWfGUPzL5lJT8y/ApxX
2o6rGMPwvh3Sv2aI/GYMl+t+Tjdj38/ruJeZjO7GUHnk1cIM5q+VfGcMSLvU
ax123pTVm/0KU4xhKBzJuo8T+c8YJBr8Lkh/w/wbanbUsNYYpHy3597Gfr+V
fGgMfhbN04HYeNa/qVv/jBpD6l3ZofTvRH40hm+OpQVO2Hx1J3onMrlNoDwm
LfA2Zq/kSxMYvswq+w6bL3icp0FdxQQEWOCwxi8if5qAqX3xxnHMPuhikT7u
ZgJeb1lzLmLrreRTE1j7VPzxuTE6+jGQ7pmcYgIXBC9VlHwh8qsJWEec3FeD
2YWWr5F8rQmkLd57EfSVjudbE3h1Vf9bCnY+527eTYOjJvDa6EGM5Hci/5pA
564EIRFsvwJ6VqMXuE2hXOnjto8jdDwfm8L585ztq7H5XzddeyqhYgrCM6+K
wr8Q+dkUkpKMXt4fpaNk9DbxpZspkHt/KVhi+13J16ZwclNC5Bi2H73KrS7B
KaYQOHjxs9AIkb9Nwe6G2INrn+iIRea4/M5aU7AvuVMY8JGO53NT+Gq14VoF
Zj+/f4OjbdQU3s0IfVL9TNTzpkCSeBm9BZsvWPj9R19uM6j2qd5xa5TI92YQ
/G3hmj3WfvDm9ic8KmagVhXP9ucTkf/N4PSj9J8WHzD/8tnG1biZQXR3zfzT
d0Q9YAYby2Tue73F/JuSaeecYgair1L+qmLtK/WBGYg9UFt26acjEseANHut
Gbz0aD4v84GoF8zAqkJ1+jNm80cLsJaMmv0XT8ZXfyDqBzN4Kli37r/xfQz2
7yy5zaFQbu2a5ndEPWEOuesGFiQxOzkou2hZ2RxuyGpMt70j6gtz8L09bLAN
G683/SEiz80cxE8oRW4YoOP1hjkkxjnwZ2PtLD47LPVTzGHwSOONA++I+sMc
1uQntbf2Yv4dcRCfrjGHbbPGLPMviHrEHLJvjjnt7KSjIMcchhuj5jDV3lHZ
1EbUJ+bQsv+ndk8rHcm++/hSldsCeKX8JBnb6Xi9YgGjMgoV81Q6mjDdWTiq
bAF6Pte5DnbR8frFAt5bl7Eq92D+pTmFJLhZQNPzole8r4h6xgJk5247mWA2
SSvXSC4FG0/J0VR8SdQ3FjAzsjeAtxvzb/2nPf01FiCVf4bpC52odyygUvYA
QxG2/z7F3XMRoxZAtvm2/X4HUf9YgNVQZi0vtt+kx840MW5LSMrcXWCOnWel
HrIERfeekl9NdKR74M6tF8qWsKbbqUmsgaiPsP7hZztjntERc+HwqdNuluBg
+DqEu5qolyxBTicjTKwc8+9OYV3BFEtY8hXrKSwl6idLaI4j5+59hPk3w1Ww
ucYSrp9YYA0uJuopS6A4mYq7Yu2yPPlTXqOYHVD0iaeMjtdXlvBCIUXFF5t/
ImGkhZvbCjiWnQaOVBP1lhVkGe37IIDtr2CNaEaVshWkZrtbx9QR9ZcVqOo+
uHqnno6cItwojm5WML2sLzVXR9RjVrB9ocDhGTZ++2KBOluKFRzsFQoTfkrU
Z1ZgY/WR8/MTOuo99ZW3qMYKejhiX5Y+Iuo1K6g81P/B5j7m3597v5uNWoG8
x5GuC3mEPrUCy8/6D4dyMP96eNQtcFmD0rPx6N5Mop6zhmEPZDB4DfPv57up
ucrWwFQzIjuZRtR31vCAHvE56AodPbMdd9dxw2yh8DaGZKLeswYDiVdXeBPp
6EzfPpXJZGvQmeK9HRZP1H/WoMqj4PLnEh3JGHlxXa2xhugb4g8WLhL1oDXM
ab8qDMXs7+33v6iMWoNLrDtL5EVCL1vDQQ+RN9ux8QXq36uGuY5DQ77ycenL
RL14HDbmLsXOYOs51UokXFI+Dhys1fItiUT9iLUf+iwahe13+2Efkozbcfii
IrlK8wpRTx6HjPq+BcVUzL+PHh56m4yN11XyJqcS9SXW//KuR/ZY/8R9P9jD
a46Den7h6j3JRL15HJpuSS0xJNCRzp0DgyKjx2H6ye/iqlii/sTmSzLZVBtB
R6sFKWU0Lhs4xcx7Jz6EqEdt4FtSr/v+AMy/V4tjApRtIKSsdZ+IN1Gf2kBJ
7gWLZRfMv1yTNtvdbCA4aNrEzZaoV21gV9WPLVvMMf9ekpJqSLYBswaxq1aG
RP1qA2L+waYyOph/mf2YPWpsgPsLPTFDg6hnbSB9iHdr4hE6yj9X8mbjqA3c
WtcV0oeI+tYGnqVZnTVWoSPH2V8PyrlsYVogOr9Kmah3bcEh4pXrPcze5i9z
3k7ZFg6P5avtUSHqX1u4wWKg24XZvd/8zZndbEHS/A2lBRH1sC3Mqd46+AAw
/7qWid1PtoX0b0PvdVWJ+tgWuNNKJxsxW2dwesm4xhbMBDriulSJetkWAm89
bgvD7NXWB3tmR2zh6blT2qlA1M+2EMVQr8OLrVfbE5B/k8sOXt+nxp1RJupp
O3gH4XJ9CnR0Wv9JsKayHXAHhadePUTU13ZQs8HZ8LosHUm3zBhMkO2Aw4C5
Q1mSqLftoM+5uVx+H+ZfOLQ7NdkOnEr363wVJupvO5hMzNMa34H5tyrwr2KN
HUxbZvPKbCXqcTuImxYeuL8J869sBXVoxA5oJQ/GlDmI+twOEm5omjIxY/59
+PdmLJc9rE6s5Q1fouH1uj1IhNptZZihoVci8gGSyvZQOJtJKv5Gw+t3rH/2
b7brwzSUkHNGu49sD9/Ll0Zz3tPwet4e/lCdb05005D2tir+0GR74G544t3b
QcPre3tYYxM3Lt5AQ0ypc5O7a+yhhv3r+clKGl7v28OFoq3kwFIaql2v2Nwx
Yg8bOTgjPtyj4fW/Pcio5awZz6UhpUZlffk1DmBGS1FMzqLhesABTjHorkq7
SkN8q+zKLwk4gGS6rpZvMg3XBw6gt45r5+l4GppRDhUalHEA8o81GRBHw/WC
A2y7X4AWomioJyjrooy2A0TWdAYYRtBw/eAAAmPcMtfDaKi4vPb3BTsHEAp4
GtwVQsP1hAMkeqjxs56locvTA/Zv/R2gR/zcgGwQDdcXDsDWMxPDe5qGPKSW
2yRiHWDOvkIr/hQN1xsOYFrvvdh1koY0fQRlw7Mc4IzxU3NbPxquPxxgyMBO
wpJCQ7vvoayXpQ6wOKgVNOBNw/WIA9Q+E5Bf70FDjKP2bKJtDuBav4F3yJWG
6xMHGAmWOMZIoqEPu8P8ggccoGSqdo7BlobrFQdQt67YL2FJQ08db76nTTkA
65fQsTBjGq5fHIAlUKadqk1D17KeH925xhEyLtVrcKjRcD3jCBvsnd2DFWno
1LvB4gABR2DL80uZOkDD9Y0jSAt8ZtIQoSET3lXb2mQcQaqQJ3uen4brHUcY
Nq/683YDDUmaCUVt13YE3ZCKMH9mGq5/HIGyYKXYO9eJOJJVf/jaOYK4mOen
7LFOXA85ws61GcyDA51ojOZo1eDvCLJbNn+l9HTi+sgRtl8UMX5Z14la2M83
8MQ6Ah/ZjkX2cSeulxxBdcM5xrOFnei21i0JjyxHGKDKT8mld+L6yRE+a3OV
SMd1ovCo+vSaUuz87MqDD0I7cT3lCHuvxGWd8OpEdvVDqzjbHMHQ3X/2jH0n
rq8cgb61cCzWtBMpLjN6OQ84QkyRRe2XI5243nKEO+Ff1EzlOhGv0q7e8ilH
aLIJfnVYvBPXX45QEOSZkrStE82cVgP2NU7AE/raP3NDJ67HnODds+FCf5ZO
1POYdNdOwAnshl3m/s5QcX3mBPFX9qpXjVNR8a+ITSUyTtBBKrxx7hMV12tO
wF+h9UfqFRVdPnA7lFkbm6/cJDOrnYrrNyfoNk42OtRARR5ejaOWdk4w9Sbx
w/fHVFzPOcHdcrvEgXtUpFn42fi+vxN8uvlViv8OFdd3TsDUS89LuEpFu7+s
rlmOcYJSefngpngqrvecgPpoIN0vhopW7dojYpLlBO+9Pc+on6Xi+s8Jfteu
TvT1o6IBe42kvFInEJ7ouGnoRcX1oBNA03rf7Q5UVJ3hMj/b6gTi4Zt6hsyo
uD50grSmix3PDKjo6psoF/0BJ5iXKVIUUqPiehFr7xE6v+cwFQXw5NFvTjmB
J1X3N1WKiutH7PyPY06676YiY5Nm+Wk2Egjxvms05KXiepIEN4fCTl3npKID
iV9yNQVI8KXYr1iEiYrrSxLsvfTnc9bvDsTRybL+hgwJDh3IY/We6MD1Jgmk
JaWPPB7oQGNrRE5PaJGA9nJs+SS9A9efJIiUe61f1tKBWo5qDqnakeBJ9caU
q086cD1Kgv1yTQfd7nSg2xFkvVR/EuxeV7ZxQ2YHrk9JoJze7Rsd14HCn0c/
GY0hQQe/ZYlKYAeuV0kwonWyTtenA9kt5u9QyiJBsv65ahfrDly/ksA6lqb4
Xb0DKSq0xiWUkuCy6eIZF8UOXM+SoIDD9YCqcAfiDRydHmolweDtSyVJ6ztw
fUsCl6Cv50NXd6DfpWz2cgMk+GY68kZnoh3XuyRICLeo8nzZjrp/irbFTpEg
PZ9r6HVbO65/SVAzQVGil7SjIgltmX42Z/B8eH2mJ60d18POcOy6RU/nxXZ0
ycM9U1LAGTIGNZ5InGzH9bEz5PzYs17GvB2558eyRso4Q+ubIOEmnXZcLzvD
mIKnYJd0Ozr6ufBEn5Yz1Ext5p7lasf1szPE13Z0iLO2o11C7e/E7JyBekiG
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
fGBy5zkXb2xT7SrdDQvxfrbagYMLSHzjA0pzYh9O4PWy914ps5t8IE/TcnrO
IhLv+MD9iNHtath/9xqlyaxRHxhh5H5WX0ziH2yLXToxge2DV8LbNSR9AS69
P9uBz8PDQ75AcTxSNVuWjhy1/zvFMPOFz0dcymlyJD7yBdU7FkfXLKMjgdqh
TanRvnCrW9JikyKJl3yhpe/SHZoSzq+iiqN8oS9wW2jSK1RI/OQLGSZOK2NV
cX7LIuUfNfmCZAtf2j1VEk/5wrn2zjEnbBtIV0/EjfrCKmu1/C/KdAJf+UJB
2NVQO7z/h4KRFklJP9iyo/1AsCKJt/zA3Id2IAnHVyOsVnbTzA8cdJ4w18iT
+MsPtvnX6p/D5wnLik6iRPuBygy/EX55Eo/5geTOs67L8PqlUzVWQoV+ILTg
4513CiQ+84MUz3nf92P/XZvGFl1o8gOjLbcWqKiSeM0PjMPnH2Co4/x+Un/v
NeoH4485xY2aJD/1A/bc3hoxbZxfGu3ubwl/CF8m0iilS+I5f9jrENozTx/n
9/WZokozf9iosC9ijwGJ7/xh8aLb+++toqM7QW9jHKL9QSIRHftjSOI9fzCL
KboyYURHW7pXmH8+5A+muyfO3VlN4j9/jEfDnLON6UjfPU6ipMkfltTH1PKZ
kHjQHwb9F5wFbL9/XDdsPuoP2mue/DYzIfmyP7Ac4go/4/U1Vu9vDkkEwDxN
CjPSmMSLAbD+/Ixb2dhf2G2tgn1mAbA5TZFaZkTixwDY9np/bBOOd+nqBKp+
dAAUvYjaPrCKxJMBcFvuMF8YtrsunTfqOxQA+/oo9k6rSHwZAMuNE1Tp2D6w
4qNoZlMAbNI8m/7ekMSbAXBz5ciO7di/w3/aL1RHA+CE0q5qxTUk/gyAI0Zd
X5eZ09Es+aTL7RKBEDqVcm61BYlHA0HxmtSTaGuc35KLORvNAqHzvyW0OHsS
nwZifmK6boYzzq/E58Cl0YFAvyfQ5ehO4tVA+KEotOHLOpzffbq69w8FQmDF
G32WD4lfAyHW5p7XsD/Or0CyAK0pED7OKbmmG0Ti2UA4kz8xfi2Yjqq31/eK
jwZCxc+FFlKhJL4NhDwD1t0ubFN+jp+7JhEEtCTTOkUKiXeDQN+8yEkD20tS
9HcGmwVBi4hm8PtQEv8GQVGab18xtrvepXgLRAfBg3WFtktDSTwcBC84KyNq
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
PxGOj32FDc+5SFPLcdvG8URQPZfc3tTEJfT/REj+VrXQrZ2LBK5cSX49Mwm4
j1ZNre7iEu8BSeA3xy1n1UMuSmE9VM0XSwJb5saRnywu8T6QBIe2q370HuCi
wc+dA0YySaD0yPXp8qdc4r0gCeJyRm+p9uL7JT588OXyJMiSflnf+ZJLvB8k
gVZ+YPk+JhfdWfnNZu/KJOisnep8weYS7wlJwIl68qlxGN8/59m/DYyTwKO9
73FKD5d4X0iCupJ7upqDXFQWK32JY5kE2R96TKTecon3hiSg3ZK2YOP9RPJU
InNckuCb0vxUcbwf7/0hCfYqumi8+sBFW2oMl+j5JYFUwo2rT/F+vPeIJDjr
Pjbj8Bi+v49s6P3UJFh1TXmZ7jiXeJ9IApct/N3WI1zkPeS9a1cCzs/w97bG
d1zivSIJ8kxlNwp8xfd7ZpSJ9pYk2BP2UNcJx8d7v0iCK1yr7Qc+cpG+4uaP
PVk4P2U710V95xLvGUkw7/GR/8V3Cvac3pmfBMlXDyRKYf+8940k+CK8uz3o
JxeJhxT7aR5NguVzXZaJ4XHee0cSoI9ixc5fuGh7erVYV2USsCe+vPo4ySXe
P5LgdKaDPR2P/x99J8Px
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.49969098340426205`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.49969098340426205`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.757466473459405*^9, 3.757466524491395*^9, {3.757466604613537*^9, 
   3.757466632249634*^9}, 3.757466674142399*^9, 3.757466737534959*^9, 
   3.7574667749354067`*^9, 3.757466826303165*^9, 3.7574668985443974`*^9, 
   3.757466944824728*^9, {3.7574669826727057`*^9, 3.7574669995476418`*^9}, {
   3.7574721335121393`*^9, 3.757472152935192*^9}, {3.757472194861333*^9, 
   3.75747222667072*^9}, {3.7574722588108253`*^9, 3.757472403655299*^9}, 
   3.757472449775796*^9, 3.757472485916154*^9, 3.757472519574252*^9, 
   3.757472551920939*^9, {3.757472657404592*^9, 3.757472687638173*^9}, {
   3.757472755659018*^9, 3.7574727798582087`*^9}, {3.7574728206679792`*^9, 
   3.757472846907539*^9}, {3.757472939414609*^9, 3.757472951554398*^9}, 
   3.7574729842289352`*^9, 3.757473021475237*^9, {3.7574730668627033`*^9, 
   3.7574730987680387`*^9}, {3.7574732325165567`*^9, 3.7574732702124577`*^9}, 
   3.757474224191978*^9, 3.7574748949420967`*^9, 3.757474966381847*^9, 
   3.75747504216359*^9, {3.757651887040472*^9, 3.757651909101837*^9}, {
   3.757651949737117*^9, 3.757651990038888*^9}, {3.757652120770522*^9, 
   3.757652135463567*^9}, 3.757652168139825*^9, 3.75765231563063*^9, {
   3.757652477826109*^9, 3.757652490265019*^9}, 3.757652520910859*^9, 
   3.7576526034824343`*^9, {3.757652656521366*^9, 3.757652668755231*^9}, 
   3.7576645066527452`*^9, 3.757664579652319*^9, 3.757664955620368*^9, 
   3.7576650349832697`*^9, 3.7576650885318747`*^9, 3.7576651466797943`*^9, {
   3.757665937162162*^9, 3.757665999214513*^9}, {3.7576661022641563`*^9, 
   3.757666164824539*^9}, 3.75766621155166*^9, 3.757666269064302*^9, 
   3.759450021148679*^9, 3.759456962343726*^9, 3.759458746831438*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
W12+jfH/H/ZkVr4=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5453053177387074},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 266.572976289502}, {0.5669574454654357, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.757466473459405*^9, 3.757466524491395*^9, {3.757466604613537*^9, 
   3.757466632249634*^9}, 3.757466674142399*^9, 3.757466737534959*^9, 
   3.7574667749354067`*^9, 3.757466826303165*^9, 3.7574668985443974`*^9, 
   3.757466944824728*^9, {3.7574669826727057`*^9, 3.7574669995476418`*^9}, {
   3.7574721335121393`*^9, 3.757472152935192*^9}, {3.757472194861333*^9, 
   3.75747222667072*^9}, {3.7574722588108253`*^9, 3.757472403655299*^9}, 
   3.757472449775796*^9, 3.757472485916154*^9, 3.757472519574252*^9, 
   3.757472551920939*^9, {3.757472657404592*^9, 3.757472687638173*^9}, {
   3.757472755659018*^9, 3.7574727798582087`*^9}, {3.7574728206679792`*^9, 
   3.757472846907539*^9}, {3.757472939414609*^9, 3.757472951554398*^9}, 
   3.7574729842289352`*^9, 3.757473021475237*^9, {3.7574730668627033`*^9, 
   3.7574730987680387`*^9}, {3.7574732325165567`*^9, 3.7574732702124577`*^9}, 
   3.757474224191978*^9, 3.7574748949420967`*^9, 3.757474966381847*^9, 
   3.75747504216359*^9, {3.757651887040472*^9, 3.757651909101837*^9}, {
   3.757651949737117*^9, 3.757651990038888*^9}, {3.757652120770522*^9, 
   3.757652135463567*^9}, 3.757652168139825*^9, 3.75765231563063*^9, {
   3.757652477826109*^9, 3.757652490265019*^9}, 3.757652520910859*^9, 
   3.7576526034824343`*^9, {3.757652656521366*^9, 3.757652668755231*^9}, 
   3.7576645066527452`*^9, 3.757664579652319*^9, 3.757664955620368*^9, 
   3.7576650349832697`*^9, 3.7576650885318747`*^9, 3.7576651466797943`*^9, {
   3.757665937162162*^9, 3.757665999214513*^9}, {3.7576661022641563`*^9, 
   3.757666164824539*^9}, 3.75766621155166*^9, 3.757666269064302*^9, 
   3.759450021148679*^9, 3.759456962343726*^9, 3.759458751228805*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"c", "[", "250", "]"}], "/.", "AdiabaticEvolution"}], "]"}],
         ",", "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{{3.759457055358953*^9, 3.759457069947247*^9}, 
   3.759458310986597*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw1U0toE1EUDa1WyMKFplQFIy4iLbgodGPBcpb+UGgsqJCFEZOAWhuxQmxL
qmB1USGCVTSxRmzcuBgwWoxgi5+ilTRa+2HaaNJJ00kmmWmixehOnTfv5sIw
zLy593zumZ2nuuyuGpPJ1KJf7F6tzjrhiFhcRa9F2JfpGcK6uv6rf8PV5wi0
qPne3gkNMeuA2h4T4B/vnBx2qXT+AjHp6JZAsIDgfVavcOZyytJ9JU/fj6NG
u/sh3ipDa2dv3iJUG7TWasvUP4Hdz5oiDWMSzOKIt838EW9ONzudj1M07xNm
0ony01tJNDkC7yqNU9j10+mL+xZo/mdE5bXril9ERO8WR6bxqHvrWYyKhPcV
bn/05a9ti2gxahbHmg/mGh58I/w59J2YQXLTEt5XGnWEebjzoUNrkQzxEbF0
skOe/ZeF3QBcwOv1CVvrpRzxW9Rx1dvX0goyPWxgEp5Rm2esXiW+39GlFjaU
/2i4wOh5U5gU7wwe95SIfxrDF/dsP3C4DL4NCcJmm2swVCY9EsJ0vp8D4Av1
c30Z+Gg+Q3MElnGe8LneLJ4TPy4nizjx5/pXoJC+HYyOVYaX9HM/ZNwkf9xG
5WAn/7g/eTjJXzbNIuRxg/znfil4SPv5zcZVFGyk/XH/CgjTfg172ooYov1z
uUXUUz4MegMq+ik/3F8NKyrPV2KKlYYOyh/3exVPKJ+GXEsJ5yi/3P8SJMq3
Mc6h74Hyz/fxA9X/4z9U06N8
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw1U0toE1EUDa1WyMKFplQFIy4iLbgodGPBcpb+UGgsqJCFEZOAWhuxQmxL
qmB1USGCVTSxRmzcuBgwWoxgi5+ilTRa+2HaaNJJ00kmmWmixehOnTfv5sIw
zLy593zumZ2nuuyuGpPJ1KJf7F6tzjrhiFhcRa9F2JfpGcK6uv6rf8PV5wi0
qPne3gkNMeuA2h4T4B/vnBx2qXT+AjHp6JZAsIDgfVavcOZyytJ9JU/fj6NG
u/sh3ipDa2dv3iJUG7TWasvUP4Hdz5oiDWMSzOKIt838EW9ONzudj1M07xNm
0ony01tJNDkC7yqNU9j10+mL+xZo/mdE5bXril9ERO8WR6bxqHvrWYyKhPcV
bn/05a9ti2gxahbHmg/mGh58I/w59J2YQXLTEt5XGnWEebjzoUNrkQzxEbF0
skOe/ZeF3QBcwOv1CVvrpRzxW9Rx1dvX0goyPWxgEp5Rm2esXiW+39GlFjaU
/2i4wOh5U5gU7wwe95SIfxrDF/dsP3C4DL4NCcJmm2swVCY9EsJ0vp8D4Av1
c30Z+Gg+Q3MElnGe8LneLJ4TPy4nizjx5/pXoJC+HYyOVYaX9HM/ZNwkf9xG
5WAn/7g/eTjJXzbNIuRxg/znfil4SPv5zcZVFGyk/XH/CgjTfg172ooYov1z
uUXUUz4MegMq+ik/3F8NKyrPV2KKlYYOyh/3exVPKJ+GXEsJ5yi/3P8SJMq3
Mc6h74Hyz/fxA9X/4z9U06N8
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.9877373671994201}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.759457062681715*^9, 3.759457072493313*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Threshold", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], "]"}], "&"}], "@", 
     RowBox[{"ReducedSpinDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c", "[", "250", "]"}], "/.", "AdiabaticEvolution"}], "]"}], 
       ",", "MaxPhononNumber"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7594587750170107`*^9, 3.75945878024198*^9}, 
   3.7594589075648823`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.16285749359786614`", "0", "0", 
      RowBox[{"-", "0.1519168287099821`"}]},
     {"0", "0.33714250640213594`", "0.3370848038545586`", "0"},
     {"0", "0.3370848038545586`", "0.33714250640213256`", "0"},
     {
      RowBox[{"-", "0.1519168287099821`"}], "0", "0", "0.16285749359786525`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.759458780928232*^9, 3.75945890789128*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ideal adiabatic evolution", "Subsection",
 CellChangeTimes->{{3.756986940279478*^9, 3.756986946540194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AdiabaticEvolution", "[", 
  RowBox[{"100", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{3.7569866362915583`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
6+rdshk1jP8Bm5+0nw==
           "]]},
         Annotation[#, "Charting`Private`Tag$2356940#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {0., 0.24999999998766753`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
5x+fduifs7LdxufmaGBpjbr88//SWTF0
           "]]},
         Annotation[#, "Charting`Private`Tag$2356978#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.24999999998766753`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {0.24999999998766753`, 0.5000068786630099}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
5x+fduifs7LdxufmaGBpjbr88//SWTF0
           "]]},
         Annotation[#, "Charting`Private`Tag$2357016#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.24999999998766753`},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {0.24999999998766753`, 0.5000068786630099}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
SlZuvu/E/Dyzjx5odiikVLL+B76+sqY=
           "]]},
         Annotation[#, "Charting`Private`Tag$2357054#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 100}, {0., 0.24999999998766753`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.756986637661108*^9, 3.756986646682621*^9}, 
   3.75698690965248*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bang-bang evolution", "Subsection",
 CellChangeTimes->{{3.757330137151523*^9, 3.757330146319542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimulationTime", "=", "50"}], ";", 
  RowBox[{"NumofIons", "=", "2"}], ";", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"vi", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vf", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hamcar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"adag", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Eta]", " ", "a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"\[Eta]", " ", 
              RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}]}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "3.1"}], "]"}], "Hamcar"}], ",", "True"}], "]"}], ";", 
  RowBox[{"BangBangEvolution", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataYRep", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{
           RowBox[{"SpinRotation", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "]"}], ".", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "t", "]"}], "/.", "BangBangEvolution"}], 
            "]"}]}], "]"}], ",", "i", ",", "MaxPhononNumber"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataYRep", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", "\"\<00\>\""}],
       "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"ReducedSpinDensityMatrix", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], "/.", "BangBangEvolution"}], 
              "]"}], ",", "MaxPhononNumber"}], "]"}], ",", "2"}], "]"}], 
         "]"}], "//", "Chop"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "300"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982437065268*^9, 3.756982574281869*^9}, {
   3.756982630906192*^9, 3.756982682909855*^9}, {3.7569827521009483`*^9, 
   3.7569827645313883`*^9}, {3.756982808758478*^9, 3.7569828159322433`*^9}, {
   3.756984219086583*^9, 3.75698429553036*^9}, {3.756984482677462*^9, 
   3.756984553193006*^9}, {3.756984590893515*^9, 3.756984591416934*^9}, {
   3.756984626994535*^9, 3.756984627404067*^9}, {3.756984668968157*^9, 
   3.756984669106083*^9}, {3.756984724603725*^9, 3.7569847620372963`*^9}, {
   3.756985183789019*^9, 3.7569853699996243`*^9}, {3.756985403098816*^9, 
   3.756985405672268*^9}, {3.7569854481518917`*^9, 3.756985450266583*^9}, {
   3.756985491170484*^9, 3.756985588234439*^9}, {3.756985634063283*^9, 
   3.756985641930625*^9}, {3.756985768902295*^9, 3.7569857707264977`*^9}, {
   3.756987037059238*^9, 3.756987044709035*^9}, {3.756987109851344*^9, 
   3.756987118175552*^9}, {3.7569873177192698`*^9, 3.756987321047307*^9}, {
   3.756987398280258*^9, 3.756987415155097*^9}, {3.756987469535994*^9, 
   3.756987471450007*^9}, {3.7569875133566504`*^9, 3.75698751834231*^9}, {
   3.7569875679147797`*^9, 3.756987684248178*^9}, {3.757319315264946*^9, 
   3.7573193748912153`*^9}, {3.7573195575347643`*^9, 3.75731956863619*^9}, {
   3.7573196228260603`*^9, 3.7573196331188087`*^9}, {3.757319826300984*^9, 
   3.757319923803653*^9}, 3.757331009659992*^9, {3.7573311354736357`*^9, 
   3.757331160943964*^9}, {3.757331388994005*^9, 3.757331493275215*^9}, 
   3.757331550569544*^9, {3.757331582062825*^9, 3.7573316212148523`*^9}, {
   3.757331660302064*^9, 3.757331691511792*^9}, {3.7574731281658773`*^9, 
   3.757473201422647*^9}, {3.757473322994841*^9, 3.757473323143469*^9}, {
   3.757474127532192*^9, 3.7574741290720987`*^9}, {3.757665178317944*^9, 
   3.7576651785994577`*^9}, 3.757665249494314*^9, {3.757665304259116*^9, 
   3.757665342442894*^9}, {3.7576653884230537`*^9, 3.757665388923155*^9}, {
   3.757665426928895*^9, 3.757665486415987*^9}, {3.759456937181198*^9, 
   3.7594569523540916`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
bb7Cg+VbYBFHUTDAlOVbouiTX88V7OfDtcTDtoFbB9uwfEv8kG1Y4eXL8i0x
53uE7AA7vtwS8hdnrh5k+2ZaIvdq7Cq5Pcu3xOU0w9s9+CzfEjFOKxbMtmD5
VlBdfXi8tR7Lt4JII9wh2JHlW+HomKB7NmD5VtglTKlN/ZtvhWdTV240+ptv
hTWF8p9pbF5hBYMdwf3y/+ZbQUXd/YTW3/2tUddmPn+tLsu3RvrvhSWjHVi+
NYyD+v7a4cfyrSET77/U8vfnb40VY822ztBk+dZ4vmTyod22LN8alb1qXjR5
sXxr5NYE6voYsHwbpC/2vVCtxvJtcD3u9KcplizfBsbxx/eccGX5NnjxtdWq
4+/vnw1qI9YUPlJm+TZ4Pmrzn1vGLN8Gd2/d1H3Pzke9DfhLWpfxWB7HFpKt
MQdjf7Lff1tcnWnuds2Q5dtC8eizbS77eUfZYq1rx7kPf9j3r2s+q5a/5+/3
zxZ1nOxb43RYvi2myx7/eD+A5dviXVFLghv7fnPssLLNKHoRu15w7VCc3PIo
Q5Xl2+FbxxXby+z3O8oOqQ+r+LpvWL4dhoSdyer5jOXbIePnO/uNnez6Y4fS
Ws9jJuz7WW+H8P0FaVuesnx7KCf6BATfYfn2SLo/dZrjF3b9sUep6GGjSRu7
/tljWszkfSfZ9VJuj/b0o/PGX2L59vg8KLR+y2uWb4/bhekjr7PPW2+P9ANv
Nyw/z/IdoJrep9o5j+U7wOrS9cSTf6+/DtD3kFj3ZtfXKAeEPI9y7ZbN8h3g
JzulU7uH5Tug1fia2q7rLN8BPP1V47sx1zsgeYvVaHEKy3eE1nF//vhklu+I
41Fj6oPOsHxH5Fp1b8srYPmOeCFJTxm6hOU7Qulm0qTL81m+I9ST5odUZLJ8
R4zcUZmuuZflO0Kw+AK4k1k+D+++9QvsEUXW4qEycWqY3Wb2eXjQXX/W3mkt
mcfDpfApbbeGsc/Hw/JpiYu9g8jBPKh7VT+PTmCfl4feG/5E680mx/NQMvrY
t6C/9yc81L4afTzahZzCw/7drQ1LJrF9eFiUkWZXNoZcwMPt8RerCwaw/XhY
uEDTdx1zBQ9PNoxySRzC9uVhrodjdqAfuYUHK7Gun5IS298J9++2dhxXZvs7
oS9/k+FE9nm4Tnj48IJ+lgnb3wkG62x6ihrZ/Z4TgnIq06qbyMFOUNHJL/Q0
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
olOh
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxV2HdYzf//P/CKKIpUkqzT0B6nfZrnfs7pDDs7OyJklFl2ZtnZ2VHISkjI
qAgZJSMqo4xIS7Iq5Ot3fR6P93X9/OO6XY/n43U/z/Ps9TrP19N0QvigSRpq
amqmLdTU/t////+/AvH//k8VP2+sfPTo70Nylji13UaLvv85V6z13vLUjGZ2
gbjYpqZG+If9VHzx0dnA/b/YRWI7o3P+ZxrZL8WGiZrus3+yy8TtEmcl5n5j
vxUXDtKZUvSF/V5cbnDu29Ja9gex4vPPYZWV7ArxzH1uBYUf2JVi78jKJ9vf
sqvFY3HTPv8Vu1Z8zu3AnMoidp14dszX6xFP2F/Evr/Kd9XksevFxcLRfy/d
YX8VD0jXdI7LZn8TXzo0z/BKBvu72CVtelqrNPYPsb/73SkTT7F/ik+aDuup
cYTdIO7Z22la6T52o1g1qfqKzg52k1j4osfbP+vZv8TePQfODV/J/i3utLeu
XG8h+494ld6g8W6z2M3iG+5nqzNC2X/FU94aBLYfw1ZDwcPzu9cNIker4Zpo
d9FlFdfVMSJbbW6RL9fVMXuO7gSBC9c10D9J89smS65r4Fy/BkVZF663wHbh
IdmedlxvgQH1JR4VGlxviRar0Xbyj3yqt4RmTKr6l0qymiZqJ5Z59X7JdU0E
nG8169xDrrfC0lVvC8bf4HorfG4xttA7neutsSp78THPo1xvjRZpKQ4F8VzX
gn0ry5An67iuhaXmt3p1WMp1bXR8YR2VPp3r2sgvbjbaNZbrbVC9PEzPMJDr
bXBkSvXZ+1Kut8WZxlMTuwu53hZrPceeCzblug6CMi1TlulzXQf76ltvyWnJ
dV10/LlAfK8uj+q6eDFn+sq1b8hq7VCYU7h97mOut8PImUkrgnK43h5XZH1q
jM5wvT3mhw2wizjIdT3EH5aUDYojQw+J/R6fKV/O4/XQdapR+YRp5Cw9dL/9
O3vuKO7vgAiJ275Ffbm/A+4bLnl4z4/7OyB1lrG+riX3d4DvhQX3fnbkfn24
Zt4uHNCa+/XR6t6QOaEND6hfH9E9P42eW0rO0sew5HNXRzwkqxnA/J6eoTCb
DANYaiaGGZ3jfgPs2brt/o9d3G+AmSNDNZpiuN8Qnm+l/RYt5H5DNF9S3vKY
xv2GcDubnF83gPsNoXXt3SIPcH9HVG/qs2mTK/d3RL9L0cmmFtzfEW8KDr65
2pr7O2LUQZ2HYQ33qd8IY8P+GudUk2GEY3oLXB1fkaONkO1avvZcJjnLCJKH
plc+p3J/J1S5qv2afZT7OyHs9p4FqTu5vxNCurhMtozi/k6IKx30zCSM+42R
nrFqW20w9xtjx37vjIZA7jdG9EQbp6nO3G+MkJvvr/lZcH9nuGT6/F7dlfs7
Q7NnpcFgHe7vDIMViht3qu5Rf2cMjR5jcrSUrGaC5xq5DSuLyTDBolz9ya3v
kqNNcFq1MmndMe43wVnvP/X79nF/F/SfnDnIMZ77u+DV6xV7g2K4vwsWdgs/
8n0i9//zKtcjoaO4vyvqx937eSuI+7tibXNG59VK7u+K0+7yLioL7u8Ku4S+
R6Vdub8b0vFw85ou3N8Na7OXfLmlzf3dMOqxo/7V8rvU3w29cd93WilZrTsk
LpGrj5aR0R3zvQZPHJBPju6ODkUpbWOOc393DPXTudzxCPf3gNuOlr+HJXN/
D1wzn740cAf398CCtEyn4nDu74Ff71a2nj2D+wW4mSa8cHM2WSDArEyJ49ex
fD0Bvs6uLn8lIgcLcENubHqSHS2A+FlJfwOQEwQIXjpp32g7zhMgUDE15UpL
cpkABvnRNz+04nxTbDu/3WayHuebov6v1pVTTbmUb4pNO99rbX9CDjbFpIaQ
6/IicrQpWoR2ynjxjpxgioTvZyz+PiBnmWLNhJfuq46Qy0yx9lWS4ftTZDUz
LPTZvT02gywww/iczxvDDnO+GSo0385NWsj5ZhixeWNT0SrON0MrrWHp0ds5
3wy2m5y3qC/ifDNME6RItQdzvhlWfAwa4xnM+eYw1Z2e+ngW55tjysvorY+H
cb45+nqZH7zhyPnmyGp0Pasr5nxz+Dqu/Bk7iPPNcSW7uVWFO+ebQxBrX/VS
l/PN0c/YNz7UlPMtsKtTVocTHpxvgfSq6kaVMedb4E+fpb+D6+5QvgXWxuY/
UrXmfAusih7SKOrO+RaQLDtW1PCHxmdZ4PLndq2HPCOXWSB2/MWjF/l6aj3R
/YlBX3dtzu+JktXF/Rs+UB09caU8//ylTM7vCU3NDJ/zr8jRPTEw+FTi3p/k
hJ74VH1ZXf6E83uiMe0uNp3i/J7ouqV+jyif8y1RUfeudtInssASCcN9FSU3
ON8SszoLWzzex/mWaGzbOFHK9WhL2Duv37j+NedbIkhrtNPZC5xviS0nhIeX
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxV2HdYzf//P/AiFMWRJCunJO1O+zTP/ZzTGXaysrNCRgmJjBBlJTs7ClkJ
CRklIasyoqwyIg2SVUa+/a7P4/G+rp9/XLfr8Xy87ud5nr1e5/l6mkwM8Z/S
TENDw6S5hsb/+////1co+d//aZKnDZUPHvwrIGdL0tpuMOv/n/Mk2u/MT8xq
ZBdKSixrakR/2Y8l5x+c9tv7m10ssTQ843Oqgf1Cop/UwiXsJ7tMops0Jynv
G/uN5JG/7rTiL+x3krcdznxb+on9XuL7+efwykp2hSR4j3Nh0Xt2pcRtQeWj
rW/Y1ZJRuG6T/5L9SZLqvG9uZTG7VjI75uvV0EfsLxLx7/IdNffZdZIi0Zh/
F26xv0r6ZbRwiL/G/iZJPzDf4FIm+7vELn1mest09g+Jh8vtaZNPsH9KjpgM
79XsELteIuxrP6N0D7tBIptSfUl3G/uXxOp5jzd/17F/S5x7DZ4XspL9R9Jh
d225YBH7r2SpwH+C8xx2o+Syy+nqzCD2P8nENx382o1la+BOwdmda/3JURo4
L95ZfFHNdU0MuaYxr9iL65qYOVdvotCR682gTm7xLc6c681wYkC9sqwr15sj
TnRAvqst15ujT90z14pmXNfC32i0mfojn+pa+Lc6TfNLJVmjBSoml7n3fcH1
FsDZlnPOFHC9JSKj3xROyOF6S1Q1H1fkkcH1Voi6tviI22Gut8K/s6m2hQlc
14ZVS/NJj9ZyXRuRPW/0ab+U6zrQf24RkTGT6zq4W9JouGMc11ujYnmwwMCP
662xf1r16bsyrrfB0YYTk41FXG+DlW7jzgSacF0X/lnmqcv0ua6LHXWtNuVq
cV0P7X4ulNypvU91PRTNnblyzWuyRlvczy3aOu8h19tiyOzkFQG5XG+Hs/J+
NYanuN4Os4MHWYfu57oAmw5Ky/zjyRBg94CHp8qX83gBDKYblk+cQc4WwPDm
n2vzRnN/e0yVOu+J7M/97ZFjsKTgjjf3t8ehOUb6eubc3x6icwvv/OzI/fqw
yrpZNKgV9+vj7+2hc4Pq71G/Pub3+jhmXik5Wx99U85cHllA1uiATncEBqJr
ZHRA5xZJwYZnuL8D4jZvuftjB/d3wMRRQc1+xXC/AWzeyAZELuJ+A3y9oLrh
OoP7DWB+OiW/dhD3G+DP5beRruD+jngd1y8uzon7O0J6ISrFxIz7O+JJ4f7X
l1txf0cM2q9bEFx/l/oN4R/8zyi3mgxDJAgWOtm9JEcZIt2pfM2ZLHK2IZwL
TC59TuP+Tih10vgddpj7O2HszV0L07ZzfycEdHWcah7B/Z2wstT/SZdg7jfC
4czoLZ8Cud8I0Xs9Muv9uN8Isydb2k934H4jDLr+7oq3Gfd3Ro8szz+runF/
Z9SZVXYYosv9naGxQplzq+oO9XeGb9TYLodLyRpdcLNZXv3KEjK6YFqe/tRW
t8lRXbBbvTJ57RHu74L9Hn/r9uzh/q7wmprlb5fA/V1x+9WK3QEx3N8V07qH
HPo+mfubHO10KGg093dD2fg7P28EcH83LGjM7LxKxf3dsMtF0VVtxv3dYJTY
/7CsG/d3x0EUbFzdlfu7I/zaki83dLi/O1QP7fQvl9+m/u5wx12vGaVkDWPY
Oy5YdbiMDGMEuQ+ZPCifHGUMjeLUNjFHud8YSm/dix0PcX8PmG7T+jM8hft7
4FjPmUv9tnF/D0xNz7IvCeH+Hqh6u7JV2CzuF+JMuujc9TCyUIhxWVK7r+P4
ekK8DqsufykmBwpxSmFkcpwdJYTNk2cDO4CcKMSApVP2jLHmPCG8lNNTL2mR
y4T4dz/q+vuWnG+CpWe3Wk4VcL4JXv7TvnTiVx7lm2Dh9nfaWx+RA00wqH7S
VUUxOcoENVM6ZT5/S040wbrvp8z+3SNnmyBk4guX6EPkMhOEvUw2eHeCrGGK
SZ47t8ZmkoWmGJD7eUPwQc43xaMWb+YlL+J8U/hu3PCrOJrzTVHbanhG1FbO
N0WHOIdNmpGcb4ohwlSZzhDON8XMDwFj3QI5vyfa6M1MeziH83ti8IuozQ+H
c35PuLj33J9jx/k9caTB6bSehPN7wtRu5c9Yf87vif3XGltWuHB+T2jF2lS9
0OP8nrA38koIMuF8M4R3ym5/zJXzzbCtqrpBbcT5ZnjVb+mfwNpblG+G6bH5
D9StON8ME6OGNoiNOd8MxsuOFNf/pfHZZtj+uW2roU/IZWYImnD+8Hm+nkYv
/H7Yob+LDuf3wsVVJQPr31MdvbC3PP/shSzO74VyrUzPsy/JUb0gCjyRtPsn
ObEXbldf1FQ84vxeKE6/jbgTnN8Lf+LrdonzOd8cebVvP035SBaaY+kIL+Wz
HM43x+DOouYP93C+OYrbNEyWcT3KHK0d1m1Y94rzzeGqPcb+9DnON0foMdHB
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
KWPn3xdDEhJHG11k598XW2aY39U9xs6/Lw7E7Z50dig7/7443XZn7ekn7Pz7
IutvU4VUSvXAzvnIRp/DNvT7F+KLMsGaCXtqqB7hi4Csmrnf1pIjfXHi6FhD
/XZylC80j4RfzHlG83JfjNROOKO0kxzri7Xj6ozqZeQ4X+TUFzjsLyQn+sJs
OSdh3CH6/qT44qnO3qzqYHKGL27ln1aW2bDvvy8mre/qvSSLff99wZ9w38xv
Dfv+d9aDt9x9LWXff1+EJJ/Vu29DLvfFLlXjurnnyJW++OFxZ0FANF1van0R
dfKx+80R5He+aFcueaY+lNzsC9czlfFD7pPbffHrs+ognR10/eKI4VhRnMed
R1YRw4q3K3PnSjJXjNdfGl/rcuh6qSNGkc3ZCXa5ZJ4Y0z09b01II5uJodpa
pnnvNpkvRpJh670FRuz6L4ZR2K7NCavY9V+Mcv91S3pEs+u/GH8EV5Ye2E32
F2Pf4BdK3x6RA8XYOeyiK0zp702IGGeKTgoDLMgRYjwsSZy5148cKYa/Y3nC
va3kKDEyff0jJ1aT5WLsOn62m28DOVaM5GV1ftvU6e9hnBi2/XMUTsPIiWLM
HmZZNDCRnCKGU3q4d6+T5AwxRIvfX86sIGeL8bZyUeYMLfb3Xwyf0fv73A4m
K8T4bB3W/80ScrEYapMerrHKYH//xXh24eex3XXkSjGCQ8a/3mVG9wu1YgQo
Vw76LSW/E+NcsL4f5ORmMbYYP1nTnkNuF8N7ydAHil9kjgTttvz6nfp0/6Ii
QQ+dewEGU8hcCb7P2Lb9eTxZR4KbayKnHHxE5klQdSmvfw2H7p/MJPgb/+ml
ppDMlyCnmJO5YhHZVYKAU6vezztLhgTX7vikmDSQZRLIDyULxv27/5Og+d6s
UrPx5EAJ9iRdCt0cx+7/JLjQ5X1r7n12/ydB6GWPAjctup+MlEB9yxd1Vy9y
lAStjxY2CpeS5RI05MzhN+SRYyXoXtyg168L3c/GSTAgMY/X3ZScKAGv9NjF
v8HklM7P96Jie/eT5AwJlj/5vVH8lZwtweSew8x+9KH761wJ9vWw9jKVkhUS
XJomvr4qiVwswf24fI79G3K5BO9dto9ZxqH7+0oJHLtvjLF2YPf/EgQt8TK5
vIPd/0vwpGBiqV8FuVmCER+ab/z3mdwuQbRxVs/tPHre4EixfdHfWuP1ZBUp
ipaeK1ApIXOl2ByaO1PzJVlHiqXpA+4U9qbnH54Uo07zFsiWk82kWP1Envkp
n8yXIryputzhPtlViiFb8iLCOsiQwiRmcHjqXHp+kklRdun18JhzZH8pFpbm
7mtjz2uBUlxzOL674wM5RIrJm2boKqbR81uEFFtgZB6Uxp7/pLgz6nxBy0ly
lBRuWaMGmFaR5VIc6PvFWteSnh9jpQgcMfaR8jBynBRdnhv1CWNOlELp/doH
ilByihTqukGh99LIGVJUhV9NHXSLnC2FVvx65943yblS3D65+VTlc7JCivn9
kVOoR8/PxVJ8Vl/4Fu7kcil4dorUEidypRQ2F6TxtqPY870UvVsS7z3bS34n
RXq05jlpNnvel+LRn/8EC0+S26UY2Lg5K/kWe/6XYYKRes5TdXp/oCIDv++K
y8rGZK4Mft+ezq8aSNaRISWAr9viTObJkOcQ/nLPerKZDEvn7fs+NpG9L5Fh
p7HTzVfbya4ylEdxrTRPkiGD+qdF2W9byTIZBh7xMVVTY+9TZHib2eYf9Ifq
gTIcbfnyoWQA1UNkKDm7bH36LHKEDHsqB876G02OlKGNv3eT6WxylAylFh6f
f8aS5TKMPnYhLL2KHCvDM03zd6rvyHEybK4bcGhwBTlRhpAXQ6qXtpJTZKgK
7Tb22lB6f5Qhw9puliHdxpKzZag+/jFIF+RcGdQWbXjbbzp7fyXDmHTzhfmX
ycUyjNPLcizMZ++zZHDVSnv/nb0vq5RhkMfMyOxS9n5LhlN9hp5frU/vz951
5t21fGFgzN73yTB90mR5TC9yuwyF6wwidB3Y+7+hiJKLVpRvKRT8HwJzVAw=

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 50.}, {0, 0.45437781032898883`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {0, 0.45437781032898883`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.759456970808819*^9, 3.759458822833241*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
aLRmXCJGUcX1iFdDGCvESEs0OFBkw7hcjPW1jfI/vRlXirG25NnPTNpXK8aW
lS9vWAxn3CRG0BZOiosr4xYxOtL3R2oLGbeJYdp+9UAc7esUoyqSu3WNI2OO
BGePR0Se82WsKsGolIi1J+WMtST46+uo82sEjA0kODN2R7u+J2OuBIfr91uO
EzO2kiB9ymXjhUGUvwTh/93SfS5j7CmBitQl5A6fMST4NERQ+yWAsVyCWdE+
CyLHUf4SzPszIT11FOUvwcxVoSEnpIwjJfg6asnpU8GUvwTFZ93VFk2g/CWI
1Sp8GzKW8pfALVB8oCSQ8pfAZspY27QQyl8C/4eFU85NovwlsHw42yMhlPKX
4OTfmXbvxlD+Eni8CWuKnkj5SyCb1V/ZNYLyl0ByIn/UHaqXSLA0SL9+NO1T
SKBxfeGOqHDKXwLfpUM2PplC+Uvw2rR82O9Ur5Ugecuq6kba1yTBfad82TLq
b5FASZ2XUz6V8peA49e1JYLqnRJMCisO2En7OFLsSy37r5T6VaU4KLzxdyux
lhQG2x7kZxMbSLG+yH/9atrHlSJh9NRbhpGUvxR7vYOWj6F+nhT9yq866VDd
s3vfKTflAqpDimkB7wfuIZZLsa1txeouen7BUkz5sMbyCdXDpLhygG/3hThS
ityxUcZBdJ7Y7vOpZ05+M5nyl2LJwPTYH1RPkkLPPXjbUppPk+LEgfRpNvQ8
MqVQK3dMtqTnmyVF0u/H7sXRebZJkZ3t8d6L9uVJcfPqzzCPnvylsCwNn3yK
Pk+FUrz6vZDvQOcpkWKAd9tLO9JTSPF8ecmmJOovl6JrbeKijfT5qpTC/Oyb
leIwyl+KOaqC4Ik9+Usx+0PcsXb6/LdI0dKQbXuZPt9tUryt2RN3cjzlL8W6
OTuUL5EeR4b6jJrRB0dS/jLIHvd7PIr+XrVk8AtYdS2R9hvIsCR+9McYOh9X
BkNVFbcdEsq/ux5lWudG7wueDDoOGSFbab+nDGFPuswC6HyQ4ci3R8Z3/Sl/
GaZufD8rld5XwTK0qxU/Hkh/72EyBFYezo/v+fuXYetdYX2QB+UvQ3xISaWl
C+Uvw95+f5q8ofdNkgyT9ow4VEucJoPKk5yR+vQ+zJTh54Az/p62lL8MFloO
jWZelL8M691vRK2i91+eDLy65FEO9D4ukAGDot+dNKX8ZbgtmVZz3onylyH6
ZZDHUh7lL0NSuFL3BZTyl6Htk1pXjiHlL0PT3nvXS+n7o1aG4Xu3rb9oSfnL
0DwgVDlMm/KXof/+11vealL+MrhWFawaakL5y2Ces+PNKPp+7P6H+5nuimu/
0/e1qhzJSlcq/1ah/OUYc37XnWZ9yl+OFR8Lf9jS9yVXjj53jIJa6fvbSg7+
xfSKj3R/4HXvv1+0YtAAyl+O/sLs5PB+lL8cmjzjsvL39P0vx+m/hh08Qhws
x9FdbQsLe1P+clQ+uDjy6Xf6/pfj0NnVU/o/o/ufHE+alGIeESd0632szSmm
+0JSt56S4QxFO93/5AhavTiurJruf3Jcy19mu7GG7n9yhL8IfGb3lu5/crRN
eP/pSzPd/+QYWmcw4SHd7wrkeG698uvlG3T/k8Mk/NEY7Sd0/5Pjlpm2Vzbt
V8ix5EnLgjln6f4nh8Zg987FdP+slCPqkPvAWVV0/5NjX21G9rrrdP+TQz1y
vij5CN3/5PhHqmt+/i+6/8khe7TFyZ3O1ynHqbr8ra2ldP8bgYJNXYJeuY38
/wEjfjfT
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxVl3dUk1nXxaOA2IAASrFAQKlSQguhZqfHSsbKjA2s2MGuY4l1AAsoomDF
gmBHFMWGUVFRB8E2iFhQZEABwQpi4c235lxcn/+wfmvvffa9OfDk0W7crMET
23I4HDs9Duf/fv7/f8Wi/35mieau6/ylpaWIWCt6GDel6RcXiL4d8/rxi4tF
g79YXv7FD0Xa9s9+/mzlx6IbCvelv/Snoh8nFA2/uFy0tHpT7C//K5F/6MXl
31r5tahvxNT6H638r2jn5+a3v/LVoujrjXq//G9Fvv90cPvYyrUi0ZwYu+ZW
fie6dv2G7Fe+QeSSHPTlQyu/F/l7Lu9Q0cofRLIek9W/9I+iJdVzN35v5U+i
spydil/+z6IJl6YvvNnKX0SfvpY4vG7lRpEg7nbi51ZuEhlV/NQvaOWvIrt6
15CdrdwssmkJPP93K38Taf06Daxq5e+i0cf7zv7l/yHydFkYN6qVf4p+41/b
ltnKLSIv350/C1uZA6+uTh1HMtZwsOJjp/Z6rXob1LztkTenVW+Dzl7NPdNb
9bYYnyvb+OMn09ti3HzRv3GMOXpwGmR40KU1r4cBP50mTW7N60Nc18t8aWte
HxcHasvf/mC6AW57b1Rcb9UNUGagX2rcmm+H8gPjjO4zv6Ydvm/OHWTbmjcE
PyPKWtyaN8S3cLtbW1rP1x7Xs8ZHfvrO9PYwFCvceIw5HWARc5+3rXV+B2Q5
z3/xvnV+Rxw3mhNT9o3pHfHTytD132amdwIe9nqnbZ3fCTcnbXGyac13Rldk
eS5jfk1nfO/QNXvKV6YbQaj3M/1s63wjZDbetjZtPZ8xqo+3d3/QxHRjbJpp
9n1fI9NNEBvp32lu63wTOC09euBK6/m4+FaTdLj4CzG4mFMVbBL/mfm5OPm0
bvk7Nl/LRbv6ZpFj6/lMIUpwODr9E8ubouFi8wOLjyxvivzyInNbdh6tKSbc
Lqv3bT2fGVbvfqe36z3Lm2GOsrG7uIHlzdAu7dKaH2y+1gwfy3aPrWDMMce8
y12nj3jH8uaIOtF4kFPH8uYwFGLQig8sb47rYZEVjow5XVAy933cprcs3wXe
6m3CgW9Yvgsin+88vLee5bsgt/afhE+sj9MVl3mzOon/ZfmuCLbFBptKlu+K
7Y+xfVgty3fFphc/FOIalreA+TSbwyNfsrwFov++vXB6Octb4Jb55K9J1Sxv
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
p6vIHy3G7YaaWef3HqT96+77NsY7LoTma8RolFvOctpDHCtGiqIkZLaG/Ili
3PrtWc3O0+m0fzGEF9rG6g+k+WliGBRF5p/eTpwpxj9cI/n6VeTPEqP+ULJg
ReEB2r8Y8S8kJeMjab5WjDWK1KCcHcQFYgyZMbHn8A3kLxZj0ZesG8tq99P+
dZ/nPP5ftxbT/HIxvn3m7hu5j7hajORtVn9+2UX+BjH+WCwtOWpK3CRGtmSj
/YhUms+R4M4I3+5PjxO3l2BnZ5PBSTn7aP8SrPfxLukZQmwlwfOwynlul2ge
T4J21x4cm3yF2FmCT2sDjg18uJf2L8FNh9LllTOJhRL0LTkumPovzYMEsrKq
UPcnxCoJzD7Urpc1p9H+JbBY/X6dWQZxuARjjz477t6V/BESNGwqDR75leZH
SfC++8SMJCfyR0swYne/vyff2UP7l0B9o93O5L7k10iQvKwc3W2JYyX4/HhD
zYHc3bR/CS696tflyDDiFAm06ws1l1bR/DTd/VUtk7b1J86UoLb7Mj0Pr120
fwl2GYRuaFu3k/Yvwbawi1tW/EXn0erOf9O235sfNL9AgvRPExQVuTto/xLU
b7i3WbOJ+LEEL3db2s8xJ3+5BB+O2Vsfn0191RJMtLgeVxG2nfYvgekbwRtP
KXGTBIKZXQuXHaHzcKRo1/af4LzPNL+9FPaXsgZJv6TQ/qUI1Ya/7N42lfYv
xY3z+5ofhpGfJ0X0+pyooX/RfGcpLG/OTzc7uo32L8XxR7f2q+4SC6V4M9Wr
ZheH/JDCsLRjQoYTzVdJMTs+ZeLImK20fyl2XSyZeC6DOFwK1crvz/Xy6HwR
UoxOSo2u/IfmR0kx9NF1O1tFMu1fijGDJLYzNhIvlCJx4T0911jya6RI7+bQ
ISCZ5sdK0cZgVbfRrlto/1J81j1kx64kTtHdt21xsPdY8qfp9MDmUfnjaH6m
7vOLbZnX0SaJ9i/Fh4v5eXGriHN1+cCyyUFS8mulSBr72DJdRPMLpPg0r/Zb
N7vNtH8pokYdP/FyE/FjKcy1STljfMlfLsXczJVdPvSh+dVSvBu/K3ixzyba
vxT5r97uGnmMuEkKjwiLZzne5OfIYN3G68EFJ5rfXoZ1QTOGcYcl0v5luufr
07qqR8RWMtg6OeYPDiU/T4ae73s0GLE+ZxkGnUlXruyUQPuXYUfYqaJ5nSgv
lIGz1MtDNYL8kGFqpX5F7UDSVTJI1D2bHsZvoP3LcPX+3OqKHRtp/zLw5Dk7
9y0lf4QMbwauuX6ygfQoGRYHTpXdd1pP+5dhZZhr04ZAmrdQhh+XCweWjqPz
aWTYevzOlG0TSI+VQXyjMNzxVTztX/f5WLRLv/hhHe1fBqu8qeNHVZI/TYaw
YYmCeY2kZ8pwcenuhCXn4mj/MthVKP8Izad5uTKUGt5QPFxJ59PK8LvH+1F9
DpFeIMPD2t6v5x+Lpf3LcL42Vq/8OM17LMOSdSb7FUHUVy5D9NC6y4mLSK+W
YcDYWTWnLv1F+5ehsFSsnJZN85pkuFDxMeiYMfVx5ChR9Ps0J4r09nKsOa3e
cvfNWtq/HOGxGJ55l+ZZyVGfkfN3mx/k58mxKm5Cpx3zSHeW47P7acNRXpTn
y+EwJ3LSaD3ShXLsDdn2u187ykOOw8ufNuankV8lx5vopIXvk9bQ/uUwia6L
CVOTHi6Hh6nnMD9Xmhchx5HQ+YmH3pA/So7RN53P2ZgSR8sx+f2PvpIc4oVy
XFowf0RNFM3TyOEXcDq5OYz0WDnOn3ntMjdzNe1fjmPnVpt99SI9RY5Jqjcz
A68Sp8mxdNurT+MfkD9Tjjk5s5ct/504Sw43v/j+ghvEubrP18Nil76A8lrd
eZ4qTq6fQ3qBHHsEiT3u9iIuluN02jfFxRjix3I8HWQU5pBPXC7Hy2upnSz5
xNVyfNz107quHXGDHC2jczHQl7hJjq8fuhyaP52Yo0Bd38Sove2J2ysw4NBZ
xZS2xFwFKpvd1hwxIrZSYKCbS/hdD2KeAkUmFnNvfF9F+1eg22HhP0VdSecr
UPZdcTP1B+lCBWwu9F3U0pF0KFB70uJqz87EKp1es7foOIjVCqRk7zUu0yMO
V+C0vNPCJxziCAUuH042DxYQRymwbf3PjVtWEkcrkHZ3ab03j3ihAtFBXz+7
cYk1CgxWTSs6tZg4VoFv39s94Zax/SsQcSLm8MTBxCkK6B81sr4qJE5ToIvc
sLxLKdu/AsvORW053Zf2m6WA4973HYTb2f4VGHKxqc141qdVYNaV+oI6NfkL
FLi1zMPU9C5xsQJbS2NXzmpk+1eg3fvnjY8esv0rwD0ZOfv2S/JXKzA68sCG
85Pp97tBgU0cg+n3p5DepEDOgOzpL5TEHCWeSUwMBOvI316J37vm28gs6O+L
q8SyMxYmTu/Jb6XEMWOzreIHxDwlCprHjD03gP39K4GNp8pkpcR8JVYE/RHm
t4HmC5Xo+GC/5sJ8YihRFAX9pw70PFApoTYz3jc4i1itROUemw75ITQvXAnl
p+vxnbzZ378SW++kb+ttQc+/KF2f+nO1wQ7iaJ3/9rLCHW1p3kLdec3+tqjR
J9Yose2Z3gaLnvQ8jFVios0yl6YU9vxXIvNrSODqMvKn6Njt3FrzeuI0Jb6U
5KsFgez5r0T34Ut9rh4izlJCLCsxlxfQeXKVOGHayyKggVirhPush3v0ZtD3
QYESBtibxykkLlbi6ZUj1w8W0Hke6z7f0poBxu3Z81+JJLvQeS2n6fuoWokF
S45IBral78MGJfYuqOw46yn5m3T3tz62XiKg+br/cE+IvGSSYUrfh+1V4BYt
r5L3JeaqsGWIym2SHs23UuHMhpcumsXEPBUybcxtgsT0feysQk3H04bX1MR8
FbJWOBwKC6HzCFUwvni2MPohMVR4+KPzoLl69D6gUuGInsPuYQbEahWOq2rF
7+PoPOEqPN/UVlZmx77/VYidMMEysIj8USq8anh5wuUqcbQKjYXRK9fOJf9C
nV43a+PXCmKN7nxTlMK+B+h9JlaFOVcNVEZ/ESeq4JLqdcfLneal6PLLO+6N
yCJOU4E/Y/bGP1bS+1SmCvsiCpXFQ9j7nwpXg11fPXlH/lwV+l59NvPpWpqv
VcG/Kuak8xT2/qeC2ZjdS+BMXKxCdmxy7Zhz7P1PhStz95UIJtP8chUEP28V
TAun98lqFRI3X8hz1yduUCHDdd+/O9eTv0mFsvFXkwW/0XxOX8x8Pby8LGyr
6H9uy17T
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJxVl3lYzPv7xiflSGkTla2maKNl2vfmnn1sNdY4tuwRyh7HMvYKlZOlQrKk
ELIlW0YqWVoIIUtkCUVZKiW+/a7zvHP9+qfrdd33/dzv9zzNzCfzKWHDp3fg
cDjm6hzO//3+/z+l/P9+Z/IXbe7S8Pt3CbGKfz9qVtMfLuS3HHdq/cOl/OEN
xlf/8H2+SvPZr1/t/IhfILVf+Ud/ym89Ka37w5X8ldXbIv/4X/E9/C+vbmnn
1/yBwbM/t7bzW/6e780f/uSr+eH5jep//B/4bg87231t5xo+f+F88+Z2/sS/
nl8g/pOv49vu8Gn40s71fA/H1Z2r2vkLX9x7puKP/pW/onpRzM92/savOLdH
+sf/nT/9ypyIG+3cwP/2o9zydTs38t2jbsV9b+cmvk7VL43Cdv7Bt/jc329P
OzfzTX97X7zTzi18lZv20Hft/JM/4cTABX/8rXxH24io8e38iz+cd31Xejv/
5ju57vlV1M4cOHW31hrHWMnB2q/amurtuho+fuids7BdV4OOU3Of1Ha9A6Zl
i2NafzG9A6Yu4b+NYsxRh01Ap8O27Xl1DPllPWNme14Dgtq+hivb8xq4MlRV
+aGV6R1x2zlGmt+ud8TTjhqPddvzf+HloSk695hf+Rc48dkBZu35TnBNC+kh
aM93Ames+c3t7efTRFHm1MnffjJdE3oCqR2XMaczTOff4+5qn98Z2TZLXtS3
z9fCeZ2F8ytamK6FTj069X/bzHRtDLzf95Oqfb427szYbm3anu+Cnsh0XMX8
yi5Q0+p+etYPpuvAT/1X6vn2+To43nirh0H7+XRRe0LTvqyJ6brYOa/rzwON
TNfD1ske2ova5+vBZmXGoWvt59MHpyb+aGkDMfSx7J2vXvR35tdH1tPa1Z/Y
fJU+unxu5lu1n88A4ljLjDnfWN4A3y83lxl9ZXkD5FeWGJqx86gMMP1WxWfX
9vN1xcbkT+p761m+KxbJGnsJ6li+KzRTrmxoZfNVXVFXkTypijHHEAuvdp8T
9InlDTHjZONhTi3LG6KjJwLWfGF5Q1wPnFxlxZjTDQ8W1Udt+8Dy3cBT7PIc
+p7lu2HS8z1H939m+W7IqnkY+431cbojhxumLXjL8t3hbYatpm9YvjsSHiFp
VA3Ld0fsi1ap4CPLG8Eg1PTouJcsb4SwO7ci5lSyvBEKDWf+iK9meSNEqoVe
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
wpeD81dPsyZWOSHb6LFDvAdxqRP0v3wIGJFEXOmEulF/vQ+cTVzXdl+u9svl
72/S/Z1x0V3/vv8vYn1nPIoOSbs4mfxcZwwZLTmyyI6Y54yH565ww46SH84Y
nFYS/eY6scIZS4eFR1ay8wU7Y966XdF+taSHO0OcpB8rn02sdIa1V+q16Eji
OGdIN3buWlBDnOKM4WM65J7MIM50hqKL7yBdW2KVM/KiRq53HkJc6gy7XmVn
5mYSVzojf8nl8lLWV+cMR42iBzfeFtL9XWCbfO9kpS67vwvcE3gujxcQc12Q
hVxemjUxzwV5xlOnrDxIebhAdPzu0sRSYoULMgqtErVdyR/sAssd/GFeVaSH
u2CKQrHLfRKx0gVnuPZuk7cRx7kgcDO3sNM34hQXdJh2bG/MXuJMFzzfd3zx
zx7EKhe80MqU+A4jLnVB8F2x0d3TxJUuWLbg6LkTo4nrXDD440iD8rIbdH9X
lH3Qn+moT7q+Kz7cXZoVGk7MdcXMITlP9usS81whHG6WUbKF8nDFlKhSH34x
scIVSY6yvyvsyB/siorXw3PD80kPd8Wl7MkDPouJla449qT5evhm4jhXhIS/
DrSsJk5py9fWrOv3D3GmKwJGb0j1/1lA93fFwfermgtlpJe6oiBrsFHAAeJK
V/C1fucXOBLXueJUVPDLG6cpz3FDcuz37kPVSdd3w6IjU7aPG0fMdcNoQ86y
yVXk57lh39Gwa/EhxHDDjR3HgjvkECvc8FRyM2aEIeWD3WBkMKjz7x2kh7vB
6djW6Iw+xEo32F73DPi0lDjODf++W2/re4s4xQ399T4POCojznSD/RY9Wa97
+XR/N0xyK5lm5ER6qRtk4RqbeyuJK91gOmTyz7lN5K9zQ69zx7p+2EDMccc6
HfOxyvfE+u7wUtpatbhSnusO10Vut0elk85zh0prXJSFFzHckSe588FpP7HC
HRPjHW0rq4mD3bH7rPewuUHE4e7w6e/sWvwxj+7vjtwku1beGNLj3FGzWqf0
3m7iFHdkzFg8QtWRONMdxiU+4sa9lFe5Q6FoSFinS3qpO6Kqwk5VDCWudMfG
CbM1xp0hf507dnbdePlwIDHHAw7vcrIc84j1PfCocL2/+m9irgeyqgpiBgYT
8zygu8Tx81sOMTyw6tCWkz7LiBUesLiSYzL8JHGwB6xVyycldCEO94Dk3ZPb
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
PyNwW98=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxVl3lYzGvcxqeESEpFhWratNe07809+0gqW0Ip1BGiHFQijeTInux7pGTJ
mXBIcQzHkrVIFEn2EIqD5ODtvd7nm+vtn67P9V3u5/7d0/yezCcnjYxX53A4
5t04nP/9/f9/qvn/91vJl5V/1fjFKr6+/7Vuv7iSr2Y3Ve0XV/PrNeZyf/Ed
/t4F6xS/uI6/I2qa4Bc38DWKG3r+4ib+ea2TFb/4Cf95kznUu/gZ/0FVsKZa
F7/guy3N6v2rv5kvNdFY9Kv/Nb/Z4Nu0Hl3cwp8klb3/VX/HN925I/rXfCs/
0fNJ9q/+Nn58Ahb07eIP/Eezr9/7Vf/I/2flxbJf5/mXr19YGvWr/xN/+J4r
osFd/JnfvZvBW+0u/sJPqNjm3b2L2/npaxTfB3XxV35yzvTHrl3cwU9WPNlr
3MXf+Nz49HF9uvg//m3bB5d+9X/nT3sjqhjRxT/496aaHnfo4p/8l89LOb/2
cTB1Xkv6SGIFB4E9OhYs6qqrYeWKNq60q66G+S/VZzt11dVRVfDQZ3FXXR03
xE19Krrq3dAS+Z/jjK56NzzgtISEdNU1ENNrVsq5rroGLOp3r+2tRvXu2Pqi
LGpnV707+n3PWJ/WNd8Da0pCvw6gfkUPZJ4oiEzumu+JhMPD5jzqmu+JrFFJ
2//qmtfELpvQqqVd85pY+Kjh1fuu+V6Yc3lTkkdXvRf2vxHr9uyq94bNfKlM
T53qvZEx57/Xq4g5Wmjo/y5nd9e8FrZf92z5db4++PTIplnVNd8HP9M/DRnW
jeramPyD42TVVdeGXfbAOV+65vtiZfGCaZuoX9EXJys/L3bWoLoO/MPiOi52
zesg8dwBp91d59OFWu8TBzdTP3QhXTWp3a879euiqF8vVQ7tV+kiI0e9KbHr
fP0Q4/P2wBXqRz/k7FHfNLcHzffDbh2jlGTar+qHmwP1cuK7zqeHM0rNRa49
aV4P4iiN3x8RK/Tww8U8cDHtV+lBM48XvoaYow8J99PQO5o0r49httmHM3vR
vD6+PX0UeZbOo9KHWWTYmhZijgE2Snr6n+xN8wZ4Mfb4lHFaNG+AmtxSexfa
rzJAwXKDsqXEnP7YnSRPf9SH5vsjrjXmVLI2zffHX+sfudXSeVT9EaC7OCqG
9DgDkHa11X6kDs0PQOXWbf9cIVYMgElKSLcTdB7VAPhnBnMzSY9jCFWkyyQD
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

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 50.}, {0, 0.490240525801021}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {0, 0.490240525801021}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756982494723208*^9, 3.75698252609367*^9, {3.756982567878085*^9, 
   3.756982607808539*^9}, {3.7569826418386383`*^9, 3.756982688410695*^9}, 
   3.7569827332728233`*^9, 3.756982771821471*^9, 3.7569828230177107`*^9, {
   3.75698424460603*^9, 3.756984301023197*^9}, {3.756984487857339*^9, 
   3.756984525523018*^9}, 3.756984561462879*^9, 3.75698460718929*^9, 
   3.756984641717375*^9, 3.756984683597506*^9, {3.7569847319929647`*^9, 
   3.756984768933049*^9}, {3.7569851923321667`*^9, 3.756985308445128*^9}, {
   3.756985380933154*^9, 3.756985409883297*^9}, {3.7569854809215937`*^9, 
   3.756985501002739*^9}, {3.7569855339889383`*^9, 3.756985594282954*^9}, {
   3.756985637385233*^9, 3.7569856481424723`*^9}, 3.756985776700481*^9, 
   3.7569858558478622`*^9, 3.756985907047635*^9, 3.75698706231597*^9, 
   3.756987124960692*^9, {3.7569873278867073`*^9, 3.756987364531405*^9}, {
   3.756987412248629*^9, 3.7569874226891117`*^9}, 3.7569874784533653`*^9, {
   3.7569875165209017`*^9, 3.7569875239713*^9}, {3.756987576563612*^9, 
   3.7569876899906263`*^9}, 3.757319000855772*^9, 3.757319380182405*^9, 
   3.757319574290019*^9, 3.757319638863521*^9, {3.75731990536766*^9, 
   3.757319929949354*^9}, 3.757331015884241*^9, {3.7573311568895187`*^9, 
   3.7573311676001987`*^9}, {3.757331400714942*^9, 3.757331501136137*^9}, 
   3.757331554650779*^9, {3.7573315914448347`*^9, 3.757331626491968*^9}, {
   3.7573316756749372`*^9, 3.757331698005171*^9}, {3.7574731551404877`*^9, 
   3.7574732085125523`*^9}, 3.757473327383896*^9, 3.757665193791584*^9, 
   3.7576652534872913`*^9, {3.757665308803747*^9, 3.75766534677297*^9}, 
   3.7576653929146137`*^9, {3.757665431277872*^9, 3.7576654905449963`*^9}, 
   3.7594569989157333`*^9, 3.759458850143676*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV13k81Psex3EioVMhW45kX0b2wRjLvJkxM7QJ7ZEUhaI9R4u5tGlf6CSl
knRaiE5pvaVyikQhbbcN2bUhieh27v1+7uNx5x8Pj99zXj6P+i2fn1F4XGDE
IDk5ORt5Obm/f/7/55Ngyn8+fwlsQw5Z3h/4yH6vEew+svRDfe9HwX/dW8EA
dzT3QhcdbxAIj73/Ydf+UXDm9N+fVgH/sebng2/JfxIcTXrXYFJNxzsE3R1D
ZIfu0Pe/CKqXumWcyyffI+g6VmIvPES+V9C9JMHcaRP5fkHF6drI3xaRl8M4
vdLoA5PpuDza07OWZjnT9wfBJS0/vkqLvCIqii9Ymn35wPxgVLR19Ko+/sC8
EnSHmxz+nveBeWWg0jjcL4W8CpScVXbVziOvioih672S+OR/wYmjTTHH1cgP
g5XOyG8VTe+ZH45Hlra62tfeM6+GjJ3XUj/uoONqULpo5bk7/D37vjryi3vE
K5zIa6B9YktLiwJ5DeyoMjj2/Ek78yOxTTOzVpzTzrwm1uy5OIa7sp15TXT7
B0u8JOS10DOwKnWENnltnB9zoRbv2pjXxpCLg2JGF7Yxr4OILpvhOhvbmNdF
cacixzeIvC4io8wOppmRH4UdueHTw7+0Mq8HrUOda+yKW5nXQ1JsUfa631uZ
/xWOCwJO5i4krw+75EFzs3nk9fHQZfja8GHkR0NgyL8b87aFeQP0J013+VHQ
wrwBsq4+HJ6ypYX5MQg91DKqNIS8IUoknXZTHei4IZI99BU6Vej7htBemaxe
UNvMvBFmmiWslF1qZt4I42zbPCL2NjNvhFjZLpWaReSN8fBrb9hoX/LGmN+Q
KY4zJm+M63LB9//80cS8CbY+EZoeetHEvAkSyniNy642MW8CnqXq96MHyZtC
uzPJThhP3hQag6sDz8wkb4ozEXuMHniSN4P2w/oBFwPyZkh1vnHbSYG8GV4P
KfuXuKWReXPss5eNlj1oZN4ceQnq1sMuNDJvDv932TNUD5O3QIeHzXi1ZPIW
EK+KMjVZTN4Cryo/NvRNJ2+J3rbU8rve5C1xvaz4xyRb8pbY3pxx/pM+eSvI
rVPqXq5M3gpRPBWjsK8NzFuhVE+9K7+5gXkOFDKVNV8+aWCeg61Nmwo1S8hz
sFBj3vzea+StMaYr/faVs+StseoOv9bsKHlrzK4+IUraT34sIvTjbtxMIT8W
1tyhsaJE8mNRteBAR/dq8jZIq6iccHAxeRts21Bi9GsEeRtsUturIR9G3hYl
cy6KPk0jb4vHOlOPT5pM3hbjS/KniiaSt8M7zagz86Tk7ZBptUQ1WUjeDnWF
bzrm+JC3h3J5r9ZeL3acY4+1u6p1A93p+/YIWaB984M78zJ7qF48nKPJp549
JhybYDSFx3yNPRR3OWhs5lPfAVJpb3kieY4DBm7FFY7hU98BSw74LbzqSX0H
ZJc1vwoXUN8BEefm8QDqOyD9647Pmr7Ud4TercAdEin1HbFv99qZAn/q/zx+
udF4dAD1HTF3Ud/+gmDqO0J9Rk7VEfr3rXGES4T35qBQ6jthq4F2nsF86jtB
We5o9OsF1HeCqketilMc9Z2w1yC5X2kV9Z3gcFs3f1kC9Z2goDT5q0MS9bno
seuPe51CfS78xf+UPdpJfS6kewo+36HzTcbFfZtQRZ0j1Oei3H7k5ehs6nNh
f3K9SshZ6jsjIMUm2PQi9Z3BVdDTuHSV+s446dOnuuo29Z3RcNh7uqyM+s7I
O75a5FRJfWdcefa8e88z6rtgpWX+pIJa6rtA7Y9W05gm6rtg7KmNi0UfqO+C
kNK8dQH/u15dMOePGbIf36nvgq31Kuk8BbreXSFNKrFR/4XdDziu4Mq3a+Wq
0/Xvig3Ga+R4OszLXDFwMDTm3hi6f7jCsilxZJAZ8zWuWCCoSrPnUJ+Hp2u2
FS52pD4Pw5epzOpxpT4P6zt0J7p5UJ+HJK61qpWI+jwofbjfWuFHfR46zIzO
pU6gvhvCi+fl+0+hvhse98/u486ivhvCTvj8UhBKfTfoqE7NnhRJfTdszxJm
/bmI+m5wkrMbZ76E+nwkHrJKeLWa+nxsUs0a0bee+nwsH2s5tyCJ+nxES6do
/XMr9flY2ddz7eVe6vMxLzGz3eZ36rujOf/eieoj1HeH3bMLP4SnqO+OG9qz
5+3Mo747DjyJDf95zbG+OybWDVplc4f67rA3N/eoLqW+B1b2DItMe0x9D7yq
qtx7uJb6HojN2R8u30p9Dzy0T6nz66a+B1QqnbftH8yeZzUe+KA2RE5XjZ53
nhgU9FeWkwF7vnE88fJeTvwwe3r+eWJK5ovwwfR8lHmiWFEj020CPQ89Ef86
ds3rudT3xK27TcUHl1LfC/oGzjFGG6jvBZvE5SduZlDfC9GV8ZfX51HfC8v0
naf94w71vWCs5L/V8TX1vXB38zN3gy7qC5Bxt9S9YCjbFzgCnMWM/BVWtE8I
4BNp9/iQD9s3ZAI05himX51N+4UAHjcMs+PWMV8jQOezK2nF6bSfAEuH5b+X
FrLjWsD1sOQHp57T3wMUlfsCv/YwD0B13LezGTq0LwHc7+dS3DzZvhQNOFqH
5xjPYfuVDFjR+SJjTSLzaUDYraj513NovwJmdo86ffk+80XAwtVjIp3bma8B
unULNYM12f7XCmSFyEafc6P90BtvzffJZ8xi+6CWNx6pHi0/ncw8xxum+9fP
3XSKeXhDS3rQfFgZ7Y/eOHXyYsuPz8xHeyM8dObYGTpsv5V5I0I3SLbDle2z
ad7oSxjs7zmb9l1v2D551t+VyHyRNxpDEmKfH2a+xhuJvXrvNW8y3+oNY73I
nb1vaH/2we2uslnbe5nX8oGa8vUlZjpsX+f4YHnasQJFLtvP4YOzGvFdEn/a
33/6y1tiTOYyH+0Dg5Dj/tXxzMt++palR96kMJ/mg9ihSm8UD9L7gA+u2q2d
u/oM80U+UG4bwt1QyHyNDzLE2gXWN5lv9UGw5zWtdaX0viBEekZ5Vns581pC
7BrZ2r6tguYXoiwnWV+tkuYXwvxC9cT4CppfiIWC4Oz7d2l+IXKfBOTq3KL5
hQjbuMVeeonmF6KxIKMm8CTNL0RKsf5WSTrNL4TRIH7q+C00vxDJX/b8FrqE
5hciWDB1j+lMml+EoPOTtcU+NL8Iir+1Pe0wpvlFeCPfHfJdkeYX4VtY1IUr
jfR+I0JVZ9CCR0Xs/zdaBD/L2JOPMuj8EWFqdNT3Z6vp/BHBNnLd6Wnj6fwR
Yfvgqw48Izp/RLh370xcWA87P2tE2PhQc0pECZ3/IiRs6pLnHaDz3xcjll/S
iIuh898Xr/f511nS+xLHF4YGTcG6inT++2Lqi2nnZz6m69cXefp+Ft8y6fr1
xeHK7+28hXT9+iJE3mLtBhe6fn3Bn20dxZGj69cXtpLHnOZ77P5Q5IuAilEC
hzS63/hi7vTdui2h7H7S+nM+N7W3AnO6/4ixJ1WXs7CT3f+0xFgR0v/Hrzfo
fipGTHj7F5VN7H4IMeLv6z1/HkT3VzG2NDc0jDdkPlqMERsWDeTS+4tMDBf+
ieRHl9nzJE0MkbpqwJHN9PwQY+BV6lOLIOaLxCh+0G1sZUrPKzGecrXUS7+w
faVVjJerYrOVimn/kUC7/8qu4N/Z/qIlQRFn5ESdRbQPSWAaN2b3MtpvIcHK
3M3vQ0fSfiTBcMe3hqvb3rH5JWgs0UxxLXrH5pdgi6NZSt+Bd2x+CRYHWI5L
WsH8aQkUDG58qxrPfJEED0/1muyzZL5GAkFCQe6OIcy3SiDvuu9oUn09m1+K
3tLbrwJv17P5pUjr2Vd+KbuezS+FaOfSL4EbmIcUlg2f/fmRzE+RwmCcm2P3
OOajpXhye5HyWDvmZVIYtl2+aqHJfJoUPZOf3DLsr2PzS2H11wOTl/V1bH4p
Bp4dsKgrq2PzS+Fy2e9O7yXmW6VIzcxXMMxiXs4PFf53rxvuqBP8Gx43wP4=

      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5587139006951971},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0.5797275244716162, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.756982494723208*^9, 3.75698252609367*^9, {3.756982567878085*^9, 
   3.756982607808539*^9}, {3.7569826418386383`*^9, 3.756982688410695*^9}, 
   3.7569827332728233`*^9, 3.756982771821471*^9, 3.7569828230177107`*^9, {
   3.75698424460603*^9, 3.756984301023197*^9}, {3.756984487857339*^9, 
   3.756984525523018*^9}, 3.756984561462879*^9, 3.75698460718929*^9, 
   3.756984641717375*^9, 3.756984683597506*^9, {3.7569847319929647`*^9, 
   3.756984768933049*^9}, {3.7569851923321667`*^9, 3.756985308445128*^9}, {
   3.756985380933154*^9, 3.756985409883297*^9}, {3.7569854809215937`*^9, 
   3.756985501002739*^9}, {3.7569855339889383`*^9, 3.756985594282954*^9}, {
   3.756985637385233*^9, 3.7569856481424723`*^9}, 3.756985776700481*^9, 
   3.7569858558478622`*^9, 3.756985907047635*^9, 3.75698706231597*^9, 
   3.756987124960692*^9, {3.7569873278867073`*^9, 3.756987364531405*^9}, {
   3.756987412248629*^9, 3.7569874226891117`*^9}, 3.7569874784533653`*^9, {
   3.7569875165209017`*^9, 3.7569875239713*^9}, {3.756987576563612*^9, 
   3.7569876899906263`*^9}, 3.757319000855772*^9, 3.757319380182405*^9, 
   3.757319574290019*^9, 3.757319638863521*^9, {3.75731990536766*^9, 
   3.757319929949354*^9}, 3.757331015884241*^9, {3.7573311568895187`*^9, 
   3.7573311676001987`*^9}, {3.757331400714942*^9, 3.757331501136137*^9}, 
   3.757331554650779*^9, {3.7573315914448347`*^9, 3.757331626491968*^9}, {
   3.7573316756749372`*^9, 3.757331698005171*^9}, {3.7574731551404877`*^9, 
   3.7574732085125523`*^9}, 3.757473327383896*^9, 3.757665193791584*^9, 
   3.7576652534872913`*^9, {3.757665308803747*^9, 3.75766534677297*^9}, 
   3.7576653929146137`*^9, {3.757665431277872*^9, 3.7576654905449963`*^9}, 
   3.7594569989157333`*^9, 3.7594588545414343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"c", "[", "40", "]"}], "/.", "BangBangEvolution"}], "]"}], 
        ",", "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{
  3.759456966522098*^9, {3.759457018860073*^9, 3.759457018977186*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw1U1tIFGEYHdYeYomwWIgItiIiV9QexIJkO2HXhwxdt7ethy4iKKW9RFZS
2BaswUobSJZQrNSDsBAZGltqZqWwu90b2yZxWs3LXPSh9WmXmn/+7/9gGGb+
+c53zvnObD113nfWIUlSuXWxu6jiturhtWt0XHbFDqutdxFyFCr+1eK5F/v+
7Q5fy2sYdAe12sEYDjkOKF26Ruf9yOWqOitlDd33WL1ApHsqGRoW3w/B2bVt
LP9Eg17L3rzGu5JL0p6I6B9DUzyzPdOuwSlHm73O97ja2bSu8YrAm8CugQc9
M20aPIHwaLYogcmq+uc/bwv8FBx/cw8rLPxeq1uOfsT1kaELm1Ji3ieUJR9v
WZZ0lNv1BWr0ac63V+j7ivEdL2+V3dDxJltkTfiG055Vqc8fdOIjo+HO+tGN
bgM+e+AklI7xhkijQfx+oOaY6hnoN6C2MsA0luRH+zesGMRXgf/Z98pIiYkW
Rq/5F15NqBU3j5vEfwo7+3r85jkTfBvTqB45EQ9dNEnPNErp/AgfgDj1c30q
6gifTQuEf2OB5nO9GRwlflxOBmniz/XP4Azp28zouGdxkvRzP2bxlvypt+sP
FPKP+zOHUvKXoblic2gn/7lf8yig/awwuOw80rQ/7t8CvLRf2x7vIoK0fy53
ES2UD5teUEOC8sP91VFI+UomWOm4T/njfhsoyPN82nJdlo+UX+6/iYOUbxsu
sIQOyj/fxzLE//EfHeqhbQ==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw1U1tIFGEYHdYeYomwWIgItiIiV9QexIJkO2HXhwxdt7ethy4iKKW9RFZS
2BaswUobSJZQrNSDsBAZGltqZqWwu90b2yZxWs3LXPSh9WmXmn/+7/9gGGb+
+c53zvnObD113nfWIUlSuXWxu6jiturhtWt0XHbFDqutdxFyFCr+1eK5F/v+
7Q5fy2sYdAe12sEYDjkOKF26Ruf9yOWqOitlDd33WL1ApHsqGRoW3w/B2bVt
LP9Eg17L3rzGu5JL0p6I6B9DUzyzPdOuwSlHm73O97ja2bSu8YrAm8CugQc9
M20aPIHwaLYogcmq+uc/bwv8FBx/cw8rLPxeq1uOfsT1kaELm1Ji3ieUJR9v
WZZ0lNv1BWr0ac63V+j7ivEdL2+V3dDxJltkTfiG055Vqc8fdOIjo+HO+tGN
bgM+e+AklI7xhkijQfx+oOaY6hnoN6C2MsA0luRH+zesGMRXgf/Z98pIiYkW
Rq/5F15NqBU3j5vEfwo7+3r85jkTfBvTqB45EQ9dNEnPNErp/AgfgDj1c30q
6gifTQuEf2OB5nO9GRwlflxOBmniz/XP4Azp28zouGdxkvRzP2bxlvypt+sP
FPKP+zOHUvKXoblic2gn/7lf8yig/awwuOw80rQ/7t8CvLRf2x7vIoK0fy53
ES2UD5teUEOC8sP91VFI+UomWOm4T/njfhsoyPN82nJdlo+UX+6/iYOUbxsu
sIQOyj/fxzLE//EfHeqhbQ==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8542800354342404},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0.8589377727808053, 0.9520925197121045}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7594570054817142`*^9, 3.759457021480769*^9}, 
   3.759458948063155*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Threshold", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "2"}]]}], "]"}], "&"}], "@", 
     RowBox[{"ReducedSpinDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c", "[", "40", "]"}], "/.", "BangBangEvolution"}], "]"}], 
       ",", "MaxPhononNumber"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.757665313362768*^9, 3.757665315088697*^9}, {
   3.759458821789401*^9, 3.759458831882401*^9}, 3.759458891127598*^9, 
   3.759471137672037*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.04787795462610422`", 
      RowBox[{"0.06739548363550102`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0538314698190031`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06763178326597251`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05626260058807645`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"-", "0.012520027389351122`"}]},
     {
      RowBox[{"0.06739548363550102`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0538314698190031`", " ", "\[ImaginaryI]"}]}], 
      "0.4521220453738966`", "0.4520205786037261`", 
      RowBox[{"0.06763178326597312`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0562626005880758`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.06763178326597251`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05626260058807645`", " ", "\[ImaginaryI]"}]}], 
      "0.4520205786037261`", "0.4521220453738949`", 
      RowBox[{"0.06739548363550112`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05383146981900255`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"-", "0.012520027389351122`"}], 
      RowBox[{"0.06763178326597312`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0562626005880758`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.06739548363550112`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05383146981900255`", " ", "\[ImaginaryI]"}]}], 
      "0.04787795462610426`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.759458870039752*^9, 3.759458891386799*^9}, 
   3.759471138194882*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Real experiment sequency", "Section",
 CellChangeTimes->{{3.759449084748057*^9, 3.759449098692769*^9}, {
  3.759449501219143*^9, 3.759449502630796*^9}, {3.759449838575194*^9, 
  3.7594498430759373`*^9}, {3.7594559325470457`*^9, 3.759455937621316*^9}}],

Cell[CellGroupData[{

Cell["Prepare the eigenstate of MS interaction", "Subsection",
 CellChangeTimes->{{3.759449509316367*^9, 3.759449538479315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", "0", ",", "True"}], "]"}], ";", 
  RowBox[{"FirstRotation", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7594491140605507`*^9, 3.759449140811195*^9}, {
  3.759449325957827*^9, 3.759449326901373*^9}, {3.759449417757749*^9, 
  3.759449419355571*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxd2Xdcze/7B/A6jdM8ZWVv+iAje6XrCpkZIXtkREYoERIiInuEkgolIyMz
KRoyGjQ1tDvtztHe49vn08sfv9/7nx51n/d936/X8+qPHvXftGeJmUBGRqa/
nIzMv1///2Pb+dns7MPW9H+/d6BZ21+Otj9aPM2/z6kSY/+L1EtdMzj6raZ+
+/p1UtaNj2vdOEzf1eW/hx4ZDnmt1o312z/vTvZ5x8R6zxbrlxr/+5O7NHH1
ob76eevxvheVX383tMeqHfoqSff3TlPxoQqHqcP0uu/Hfo/IZMGUfcc6Hdcf
uvZSaPUQXzoU+NH8zBlH7P+MzLaZRlx8dFnfq+3tpPsv6Pu1dYLJFTdwnh/N
ET18E/jbXX/sf88rMtASTZ+wzAvnv6b1VvbvghY91g+rHtJ2whvaW3xr5LSw
F7jPO+JDh2t3ab7RX9J+IFlfMdnze1AA7veeplkIx1xXDdbPPvzvhgFUP37I
0avHwnDfQErIEi0rOfxV3/Lf6+0Noiob0n2vEoX7f6SrXT9HLXeP0W9vPZh8
f4bcPnspHnmCqfn7urNmWb/05/x3QAh5XJ/Xx/tWKvKFEHu/OrwwOEP/39Pa
jqTvWsVBKc+zkTeMLOaO//aOxPr/xUkKo+F+gx3Hdi5A/s+08mbALvHoYv2+
/16nTziZzC2b5XhHgj7CqV+X784tT8v0t/73fKHujmQ1+H0F+vlK7m9Dq6Iq
qvT/3a3zs6+kLq1kt3W16Osb7e8k2WfUVK9f8+921d/o3NORug9jm9Dfd+pQ
uKDH+axW/f/qmRZBDcYZNpXOstTeZwQlKFa7rl0jR/9d71QkabxxXKcyXYHa
+42iL/aL7S7OF1J01H8PdYiocTl5SJna+46mbw+9el6IVqX/4nb+QUdnlzYt
nyui9v5/0MMpfpXzbDTpv+3W/qTqxV/dTmZ2wO9BDJ1eeMd20vpO1J4nhoZa
jv+9uKoztfvEUIVh8iL/e1rUni+GBF51vut3dKN2r1j6rdBHaZJRD2rPG0tn
dtQ90Zvbi9r9Ykn4s+PI7Zv6UHv+ODrzzmviBqN+1O4ZR/f2/XrveaA/+oij
PY+OvLR7MYDafeMp66RP2JGGgegnnkavs/XXNhlM7d7xlKj51F4xRBt9JVCv
TPOOj/SHULt/AhXsHbLxzo+h6C+B/ul1Zpu1pQ61z0MiHb74ZFnIPyPQZyJ5
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
UUlJK/38agLuwqOSxqgNfHNM9h48KmnXjIz1EXPuwaOSFDrsept0+R48Kul8
T7Owhyn34FFJH3unn9MfeB8eleQUOLqzq8V9eFTS6wLRhkD/+/CoJL9sW4sH
8l7wqCLtj260ytgLHlWUseV9QqK7FzyqaGLcgmG9JV7wqCKxiayerp43PKrI
P+GJnOZ5b3hUUZ3ytkNBad7wqCL99S3XJo98AI8qevv04pxTxx/Ao4oaVk9x
uhv/AB5V5GiiO+/SPz7wqCL3GS9tFh3xgUcVbUgcJJMb6wOPKrqso/Bz3pCH
8KimL6Gnox2PPYRHNQ0+GZLjmvQQHtVkUBVQ6aD7CB7VlGBskTvL6RE8qilo
a+TVbPEjeFTTiWHjskz4MTyqSeHxFh8vt8fwqKbP6dkhP+ofw6Oa0ne3Kiau
eAKPatJ6UzDf/+0TeFTT7AcnNh/S8oVHNa1sPde7u40vPGro5xmZ2beSfeFR
Q9NbHB/XTnkKjxq63Pew5iT3p/CooYfXCvRXC57Bo4bGzVlav37bM3jUkMdO
/9ZZ0c/gUUNykas1Oo17Do8aiv6okht2+zk8ash2gXP3EYIX8Kihfb3TVpdM
eAGPGnq8vVDUe9cLeNSQ+XGHC6F3X8Cjhn6/1x6RlvQCHrW072vT9B0iP3jU
UmqOdICFoR88aunli/t98474waOWzriPdop77QePWvrl1+XleIkfPGopUvlI
nkj7JTxqKVZziuX6DS/hUUubusV5DnJ5CY9aWrrG+uPG+JfwqKVC3w8dtUSv
4FFLNwaUiQ3mvoJHLWVZyNvmObyCRx3Nv+PYXTbkFTzqaNjAR3LOza/gUUfF
KhNs7055DY86Mh5yNlj74Gt41NHDRbUdB799DY860rtv/cKt6jU86uhtj9OJ
F8a+gUcdra80DKqzegOPOvJ7v+Fu+ss38KgjwZZ1AXqVb+BRR+lFraQ17i08
6ujV3VvmO/a/hUcdhcW3mk9+9xYe9bTzmov1yfq38KinZxNXBc3RewePeio/
4mh99tg7eNRTb/OQCMOwd/CoJ+svg//YCf3hUU8ys5dojDHyh0c9hQaar9h0
xR8e9eSqNKxClOQPj3p6HD5eZVLv9/CoJ72bNt/TN7+HRz21pBivlHnyHh71
pPvEI92j4j08Gij0WsDRwCkB8Ggg299hG5afDIBHA93OmuRtERUAjwYSG3+w
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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJxd2nc8le/7APBzcBz7RNopDUV7SLvraiktkZE+pRJSUUiU9qCMNpWK7BWi
zOx9zqmkhIadCEW2zJ/P53s9//zOP72ezvE8z3W979c9rvueYnJC10yExWJN
EWWx/v33/3/OKkZtqna0gzHXzMd0FwjW/O/6Gmxby+J8KmhYkzjJqUkn8RZ8
k/Q9YCMxQN97QHD53ok7CyThsdd/H/A2DtKrUFWE//3eB+IuTT00jqsEv3T+
/R8/gKfuM4ozpsH//j4Q+oRxRXPeqoFUaYD1aqkQ0KnjNCXpLqD7hcHTq3Xi
62eog9re21mdqhGQ6RoR5H1gGd0/CsrP/X7wir0aAof/ujQgGrrVlTXjxdbS
82JAc1LRzNLk9bD4v88raNqosH1esCY9PxZKBR7XIrK1ILtTdfgJceAoNiZh
reJ2ep8EwIhPZs1bd4Lu/x4I37oevl8yU5feLwkiWwKe/J6gB9WO/97wNTid
m1MoPcuA3jcF5vXUtDjp7Aabf1/POhUWuu0Zr3NvD71/GoSwbbsP/toL/1PI
gKQWyfCI/fspngzoPFB2TqHrAGz+7wGZoJU6WrVyswnFlwn8amfBktBD8O/T
hh8JmTu/3+UpmlG82eBkPeBi5m4O/4VTmg27J85/ukDeguLPgeM9V04e8T8C
k/99nUm5INW1/4wEHqN85ILlq6FGTqMlmP/3yYPtS/pajXyPU37yodfm3eoL
C63h37spRuXDb8sRj9vG2lC++LDur3ahk7gtdP17u04+9A2V+SzutaX8CeBG
/Y6Q7vaT8F96Vgth4tq+o+/a7SifQvgUITSI/nsK/ns9pzcQ/j3hyxOOA+X3
LfRbZW12G3Ma3r397wNmSp2fz8w/Q/l+B/kuG8NMtjvCf+EqFsCrxaJVaHOW
8l8Ao7T+ucl7cg7+u93e97Aj94OfQHiePApBZ9371iOsixRPITQfnB/dqXSJ
fArhcGDEocC0SxRfIYwMe2q9xuQyeX2Afe0PpmdKXKF4P0D8fbMstZdXyO8D
5GxreHTK+CrF/xH23LZp9ZO9Rp4fQb6rkBORfo3y8RGWmx1m3bVzIt8i8G7s
ZO2Y40z5KYKnnySWVNU5k3cRmHxuz90QeJ3y9QmkIl+9O216g/w/QZxuh8GZ
mS6Uv08QyzI7uP63C7WHYmhU/NpbFOdK+SyG4KAT81Qvu1H7KAZZe4WeVdru
lN8S8NG7uIGnfJPaSwlY+Y3vfNJ+k/JdAq4G7T2VglvUfkrBSsF09Wf/25T/
UrgXfqAQ4Q61p1JAB9UzllF3yOMzfP1R4Ph70l3y+AyOMttWZ925Sx6fQVaO
q9ogeo88PsObUX8fHzh9jzy+gHRGYPOM5nvk8QW0/M6eWmF2nzy+wJt30657
ld8nj6+g1JzluM7Qgzy+gkfNDN/FHz3I4ytEf0yEYzs8yeMbGF2c+KT+jSd5
fIPxew91B295QB7fYKPEpichwgfkUQYff1vm1W99SB5lwLswM8as4CF5lEHZ
jivuk3UfkUc5yJjvujay9BF5lMOd3eEC2OdFHuXwS1fKzb/WizwqQHt+esty
q8fkUQFq2RVjxLofk0cF2E43nDh0+Ql5VMIWiJBXk3tKHpUwN7WEd+nJU/Ko
hPenZs8SmeVNHlXwO+WnZWSSN8VTBYF9K8ovbvEhnypIjdl+xqHMh+Krgpyz
11beO/GMvKoAlB/x6tm+FG8VbI2scffY5kt+VaA+p8698KEvxV8N3Qp2oo+/
+5JnNVQb9VS1zPejfFQDS26C4odzfuRbDe+2RLmuEvpRfqpBxlB3/sKx/uRd
DR8Wb22INPenfNXAYPW1pzFx/uRfA2XhoWorOQGUvxpgbbp8Qks/gNpDDWwe
3b3lW1AA5bMGgjQTPVu6Aqh91ED+9iUznDYHUn6/w4P9we8fPw6k9vIddoXP
NJn/O5Dy/R3y/GKfr8Ugaj/f4WlfhkPh/SDK/3fQr3l262t9ELWn7yC3yDXO
eFUwedSC94SgqH/uBpNHLWyKm7y8sC6YPGqh6H2OfPKqEPKoBRN3n7bx90PI
oxYue6ffa24IIY9ayFi/OVh9bSh51IK94vGKpkeh5PEDpFPuNyi0hpLHD9B+
++xkqFYYefwAM/9ilef+YeTxA1z4UcHj+sPI4wfU/ij3atMPJ48fYPjE0Fc9
Opw86mDTGpPdFVLPyaMO5rxgGzebPSePOuCr1m45lPmcPOrgRMWE+JVKEeRR
B0O7p6rbn4kgjzroMqwxkC+JII962PJFGCm9OJI86mGTQ2DeoTuR5FEPK7s0
5o5tjiSPeuCxy47O3BZFHvUwas018TvhUeRRD0mhmdd2Sr4gj5+QqSJicdji
BXn8hJFb+xYW5b8gj59wt2/nQsHIaPL4CbWFxckf1keTx0+oXLPFXsQumjx+
wj19Pe89gdHk8RMCq0ssv3yKJo8GOG9drnyBE0MeDbDqU3DHJo0Y8miAsewj
UzUOx5BHA3je1vu+6VEMeTSAaajXiXOCGPJogF2/Jg997I0hj0ZYctdKuGXO
S/JohJJdGyW/73tJHo1wPN++7fHtl+TRCBOwJtkm8yV5NMLMGVcfm7e/JI/h
65bo7NMqr8ijCRbbRFuFGL4ijya4dEq8oNXlFXk0wa603eMMU16RRxOY69he
LWl+RR5N4GVnDCemxJJHE6zT3nBZWS+WPH7BzDjdCw3OseTxC8439R4VJMWS
xy/gn6t2TP8VSx6/wLGspko4OY48fsFVTZ33jbpx5PELNEz2Ok5yjiOPX9Co
PGWMWVIcefwGOxGxr6m/4sjjNxyaH9k1UzmePH6Dr7Wsr/+uePIYvlYvlZh7
PZ48foPs2dXmea/jyeM3nJ48qdmqOZ48mmG6U0jx1KkJ5NEMV3ft0anVTyCP
ZghPlfOMcUkgj+Hfq+V8cklNII9mSPxtvMmyNYE8mkG5dNz03SqJ5NECf364
+W0zSiSPFoi/8rxz881E8miBfXs+6W/LTCSPFhh3RbxHvzORPFpg6RP1UWZq
SeTRAt5b9tSd3pdEHn/gzsJvAXfuJlE8f+DeWWen57lJ5PMHLK76ZvH/JlF8
f6B4kuf9+rmvyesPOKleWMw1eU3x/oHZCzeUz3jwmvz+DLeF9W82Cl9T/H/g
16QdSw8NvibPP9ByPnvPhUXJlI8/4ODgZf3APJl8/8BXm8648MfJlJ8/EKgU
cvh1QTJ5/wEPhYHMHJEUylcr3OcKWAKNFPJvhWkc5/15R1Mof60Qn3R7QopP
CrWHVnimXHIy7GMK5bMVIs5/D74pnkrtoxXA+F3b4RWplN9W+DJpuefS46nU
Xloha+mTN31+qZTvVphssK/4VXEqtZ/ha9/aNmPJNMp/K7gkLjDtX5VG7akV
RHS/WrhZp5FHG8T1jUHpwDTyaAODt+PUzpamkUcbaK2tNf0qlU4ebdDp36Ou
uiadPNpgYvn5r4ds0smjDf5xW//APTCdPNrgAic/1K80nTzaYG6inpoOJ4M8
2uCNjlRT3qQM8miDhvMRrxcuyyCPNiioXLP8rk4GebQBZ7c/98fRDPJoA/Xw
h3lzrmWQRzuEt4qOsfDOII92GFy1//GD+AzyaIemE5PbEt5nkEc7eDQ+S3/z
M4M82mGq4bTAD+xM8miHyooSFIzPJI92OK0+dunLxZnk0Q6xfmGq7tsyyaMd
+M6aCQZmmeTRDvjx8TX5C5nk0Q5VjRsWpTzIJI92yGr6ctDgRSZ5dAz3lypx
lfmZ5NEBX8w1CgyrMsmjA1xGTtRO68kkjw6QWlH9RUE+izw6wPnu7RH6alnk
0QE7EtU9r63NIo8OmFo2RsrPKIs8OmBearx8uE0WeXSASuCjHc9cssijA6Yd
33Hokl8WeXTARF+7tm1JWeTRAXXbknzEPmSRRwf82S8tHfIzizw6QSXn3tfF
rGzy6ATroZvR4WOyyaMTJP11F0jPzyaPTtA+rD2gp5lNHp3w6I1C8vV92eTR
CSM2nJcNsMsmj07I2BT3KNgtmzw6wWcnh33PP5s8OmGGW1mjaVI2eXSCMutD
76TCbPLohOd7QovT67LJoxM0LR8pbxrIJo8uMDwz93LsyBzy6IKNJdO9ubNy
yKMLrnOOj0fMIY8uWFw359k+gxzy6ALXQv6H/ZY55NEFGgbrjTSv5JBHFwxq
iZSPeJRDHl0QOzVMLD0yhzy64J7d+NM7s3PIowuiRjtW5nzOIY8u8Di/5fuE
5hzy6IKLv0rn6IvmkkcXyM/9ZmY9Npc8uqEz0GCZ1dxc8uiGv9UPd2xdl0se
3dDrs3yXlGEueXSD7M5/WsOO5ZJHN3y8O6JY7VIueXSDmV55uItHLnl0w+pe
r8mC0Fzy6IZPDXZV9Sm55NENrdM6H/8ozCWPbogyMBzIrM0lj24IGNsQf64n
lzy6QbjiiMMomTzy6IGgkx3NbpPzyKMHnnaIF1QuyiOPHrgUeDl3hGYeeQxf
iyy+Pskojzx6YEK5WJ6EZR559MBBlu6S9xfyyKMHHvG+3bC5m0cePVA/kW/X
EpBHHj0wfUls5Ob4PPLoAZ2W/Q3n+Hnk0QPtX3wq3L7mkUcPzLgdt+HUrzzy
6AH8pVe0bDCPPP5CcPiTdSW8fPL4C282zt26fUo+efyFlFkiId6L8snjL9ib
y8nnr88nj7+gMS1xg0Avnzz+wlVhyUCAWT55/IV9PrE9Bvb55PEX8gI12qqd
88njL6w5GRe64WE+efyFvgdm3y6E5JPHX+jPatG6k5BPHn/hp79N7On8fPLo
hXEnL35bWppPHr1QucDk0ru6fPLoBcGmCrPlXfnk0Qt17Se1z3L45DH8++5x
7PuKfPLoBe3cNXBpGp88emHzHGHBukV88uiFL712p74inzx6obrfpFdTm08e
vXBEaKRyYx+fPHqh5cLDNO9jfPLohSe1Rbeun+GTRy/M46zfv/E6nzz6YION
aG+JB588+kDL+NysVf588uiDc+WBKXYv+OTRB2aTm89dSuGTRx/YPNuwbL+A
Tx59oNymmDKihE8efWC6il/iUcMnjz54GvLDsKmZTx59oB9+hqfYxyePPnhx
WKZAjisgjz5Y/tnf9JuCgDz6QHZFfuCZSQLy6IfmeImDDWoC8ugH98ONlrOW
CMijH7pZ1k9XoYA8+sE1anzO5K0C8uiHTPXGxCJ9AXn0Q5nY0Z27DwjIox9C
+tUORh4VkMfwdbpr1kc7AXn0w4I+y238CwLy6IeRYxaW3rwhII/ha+3EldPu
CcijHxa12O+68URAHv1gH1XZkxIoII8BmN45kZsZKSCPAYhc/s3II15AHgMg
/0jrnUa6gDwGoKdi/JrQfAF5DEDxLm+Xn+8F5DEAKqmjb3WXCshjAKKCTs0q
rhSQxwCMWThvzeV6AXkMQNOHFWF9zQLyGADLzUrbNnQxHgMQ19zP/WeA8RgA
r5aONBATkscg7DTL2tUmJSSPQbjpGBFmKy8kj+HvFZwCM8YIyWMQVHPDVMuU
hOQxCC+mzJ6QO01IHoMQpsMzOasmJI9BSIvr/z44T0geg1BYrXpDW11IHoPA
X2KkYbVcSB6DsGVkbYnhGiF5DMK0sz90eeuF5DEIIaGnPO5vEpLHIKRXbXeu
3SokjyE4BikjRXYKyWMI1mGg6q9dQvIYAqf3l2L8DYXkMQTGuyKeqPwjJI8h
eOnqVGxnLCSPIXg2T27HnYNC8hiCO/E1HQ6mQvIYAoXCFa9nHxaSxxC483/f
en5ESB5D4BZfZNp9TEgeQxBqXjCPd1xIHkNwfYJZVdsJxoOFEbHpVv42TDws
TB4V8kbpJOPDwpj4Wy2mdkx8LJTdIl/ocIrxYqGm6UdTA3smXhZKdikFsxwY
PxbKyNW52zsw8bPw7/xshUQHxpOFdUe4i3IdmHywcP4V3TpvB8aXhXnpG+as
c2Dyw8IRQ2rsl/aMNwu1xf+a/D7F5IuFE97t2tlhx/iz0KUyjJ93kskfC8/W
lL41tWXaAwv1tSOMC6yZfLIwwTzwkugJpn2wsGTUryViVkx+Wdg5z/hK4VGm
vbBwX2DKUQsLJt8sHN2j2fnGjGk/LDRWUlLrM2Hyz8ItMEKuaz/TnlhoFOQf
kbKX8WBjzhQJOW0jxoONGztOr4rUZzzYaOEesr5Uh/Fg4xn70QvebWc82Mg9
2it3W4vxYKPfpBXNEzcyHmxMELMus0fGg40+iQYNT1cyHmw015WdcVuD8WDj
IqVTgdsXMh5s7Pqg7PB5NuPBxqK9ejHzZzAebHzkJXl4lzLjwcaw3OOR68cz
Hmyc+LD9MUuR8WDj+sw0TVdZxoON8k1B/CpxxoONG8zmLhdjMR5stM25G9PR
w/Q/bFT+sXXby1amPx2+3+Nf01c3Mv0RGzHxpaFnDdO/svFE+XV28lemf2Jj
2TgWRn1k+ls2Hkw5svCEkBk/RPDgu82dA5lM/yuCe9VGROxJYsYTEQzs/Wzv
FM30xyJofeWgw4UQZnwRQclXMoUbfZj+WQQzzvYEfPNgxhsRdH1rOgbdmP5a
BKM792qfvMyMPyLoON3N5pQD03+LoPfTpYGaVsx4JILpGzfL1Zsw/bkI6nnt
LTXYzYxPIng3b5zqg+1M/y6CFWuL1YLWMeOVCIbYnhW/tpTp70XwUvGtn4vm
MOOXCBbcmNkXo8z0/yJYOGvkUfYoZjwTwfiZXJMpkoyHCFqMMhihMMDMN0TQ
/UeVf9EfPnmIIKdz1GbzWmb+IYIrc/7ME5byyUMEJSZNvD4kZOYjItjipXBZ
PI1PHqJYwqvYXhnNzE9EceYb2cmuAXzyEMUmt7gZ3AfMfEUUDS5ZPTS4wScP
UezE04GnHZn5iyhefv7lspUlnzxE8WDiONMlxsx8RhQ/da66VKjNzM9Eccr5
bGlYy8xvRPGaYdiqy4uY+ZoobuI/0Ho4jZnvDF8Hthy5rMjM30QxpPFuMXCY
+Y8oTo18n/OxM588RHFdv5X1ijpmfiqKL/yC5R1K8slDFJ9ZW9XcyGPmq6K4
WMpGyTo+nzxEsbmmcGBOMDN/FcUer7Hp6Z755CGKfZVrvFWdmPmsKGZpPv90
2C6fPERRQ+ep//lDzPxWFLeNldp4VDefPEQRWvV6565l5rtieHPVOrZgfj55
iKFwa9+jlZOY+a8YvpihxHaWYebzYlj0StMxtJdZn4jhXpZwY8DPPPIQw1n9
RkH2Jcx6RQztTSS+Tc3JIw8x1A/YoBYaw6xfxHBG/tBH8Wd55CGG05bvnwju
zHpGDD3T5m7ROZNHHmK4culdv9XmzPpGDA/+krAQ25VHHmIYa2r5PQiY9Y4Y
rhu5eM/UOXnkIYav9TQUHccy6x8xTBGpMYoUyyMPMSyx7jmZ8ieXPMRQPf3O
85AyZn03/P2o0VtO8HPJQwyXX8vxGhnLrPfEkDvOoM7jWS55iOGaxaLn2l2Z
9Z8YWjw1CJlvz6xnxdD1++w4rYO55MHBQ+tj2tZuY9a3HEyxVIkauzSXPDho
XbF5acEUZr3LwVLtTRUmMrnkwUGjqU/aS7pyyIODuXxp/qxqZj3PQZvK+Ajj
NznkwcG0L7wO2zhmfc/BlR6drYef5ZDH8P37/HpXuzDrfQ7uqfMy6bTNIQ8O
Tnd9fuHWXmb9z0Hl05xASc0c8uDge6VjaofnM/UADkbNrDAPGZtDHhxMb4qK
FbKZ+gAHnW/bHfvQyNQ7OFh5X7o2uSibPDg47nWWg2sKU//gYGdb6OXVQdnk
wcG9597vK77J1EM4KL/opoWufTZ5cPB5l+NgrDFTH+HggL7tuQHNbPLg4AGN
zzBnPlMvEce2yPKQtWOyyUMctWXtFdcMZZGHOG5XKfoxpT6LPMSxQezQud8F
WeQhjq7xBcv84rPIQxzTrC3OrfbJIg9xPLdFPTzLKYs8xIf7z3SVhVZM/Usc
rSa803XRyyIPcZwZbOj5ZiVTDxPHLIG7Ts/ULPIQx9U2+3/xpJj6mDhypy59
q9DK1PvE8ahKqSH7cyZ5iCPvzsKub2lM/U8c7RaYyQUEZZKHOC6zTucaujP1
QHH0Kj64pcc2kzyG4919B64bMfVBcfxsK9gphpnkIY7eu6PrT8xg6oXiOG1A
6rhQJpM8xHHTOv52xfYM8hBHLA1u3f6FqYeK4wGtBbkO6RnkwUVJtxHq94KY
+igXV2XIhHu7ZZAHF3frs+8/tmHqpVx8c+H3HhfDDPLgYlOy8/Gjq5n6KRct
IgZWrJmWQR5cVFO+P5cjydRTuZhtpXr4YjlTH+binMkxdmWh6eTBxavVgcZT
7Zh6MRf9lrPYupBOHlxsNVi6zFKKqR9zMUU+o8qmOI08uJj+W6b0kG8aeXDx
3UuX7nXH0siDi6rmGZNGaKSRBxfLv7SovWWlkQcXkyztuxzepJIHF7/mPjio
+ICpn3Mx77XtZv8DqeTBxQmzJW5MnZ1KHlw8dFNvwLMzhTy4mFwW7TSQnkIe
XGz0Mh40ck0hDy46upltiNBLIQ8JzDh0S71zErN/IIGiTfufL2lIJg8J3Jq8
2un4q2TyGL7Wj/LxPZ9MHhJ4U36w6O2mZPKQwKVTprA75JPJQwJnW0Sxx5S9
Jg8JzEooi9YIZvZPJLDWPaBhl/Vr8pDAUQEjrp9YweynSGDz9LJDrmKvyUMC
G0w37wkqSCIPCTQXUdqQ+SiJPCTQyymgt8IkiTwkMGzcd4OhOUnkIYF/BPKL
pnUnkocEbkruMN2ayewXSeBe8fT8026J5CGB4YtkF0XoJ5KHBNZnVDvWTU4k
Dwnc7alyRrUxgTyGn/9+gtjJWGY/SwJjek635V1IIA8J1LTYOF5FK4E8JHBo
8pedt0YmkIck7h5ZflS0Ip48JFG1BFc7hTL7bZJYm2/nrXgynjwk8UzeygMv
V8eThySav/Mw2i8RTx6SmLMiYe/EojjykERpF5VVjd7MfqAkXj4EbwQWceQh
iZ6treXJi+PIQxLfRO3flDkYSx6SKKr28ctXQSx5SKJcYry5pCezXymJN299
Tdt+IJY8JPHGtYDY0Nmx5CGJtgFN4yd0vyKP4et3YdlBWa/IQxJH3m64qHWL
2U+VRMWd/MncPa/IQxKVoodsK1VekYckavv7bi1qfUkekqg5q+3s99SX5CGJ
rbc3Fo9wZfZ7JdFE+GfmXoOX5CGJiS1b1+dNfUkekrj5YUqXdksMeUhhhPQ9
xd7kGPKQwocqQ8dzbzD70VIofntR6Uv9GPKQwrsvdJSyp8aQhxSO63YY0d0S
TR5SuCTi1CXt1GjykMIxDevwnWs0eUghV8diqs3uaPKQQjy1r2fljGjykEK3
YxIq+36+IA8pPBpscun+tRfkIYUru48FTpzygjykMD6uaFlvahR5SOGaZaXf
5/4TRR5SuDX8jFZSTyR5SGFg2llpnweR5CGFSu2PBeXqkeQhhbdaxqk6FjHn
G6TQoly/0M42gjyksPlW7pH38hHkIYVBI295ucU8Jw8p/HDgrMhznefkIYWX
++5tnN/GnL+QwirVJ5Lj74eThxS6G7P/WqqHk4c0Li/5m6xWEkYe0rjdc0eP
zukw8pDGA/JGOvXjw8hDGivXjDjSlBpKHtKIDwvq9x8MJQ9p3K3ww0GTE0oe
0vjbXj3TNyyEPKRRqnHsEesdIeQhjVmepgoJ7cHkIY0WVZL77b2CyUMaK95p
dL+AYPIYfl/bo1fN6oLIQxodw2+GPbrJnK+RxjEW9TJblwSRhzSamozdcaE8
kDyk8RjXWlbdOZA8pHGC6ek/VvMDyUMayxdHP5n7hTn/I41bFlZE210NIA9p
VDov/n7DvADykEaHRUfvPfviTx7SuE3G8qGzkz95SKNmbd/5voXM+SRpbNDj
1A5V+JGHNE5OfmDq6e5HHjKYFVj6MHWFH3nIYNF5xZGODb7kIYM+3mXH3j5i
zk/JoHG0wfL4zb7kIYM3lVjKtm3PyEMGx7j7ikTqPSMPGXRcf3CpcqIPecig
XoZGccFE5nyXDCa8FmtPvuJNHjI4NGt8SGPDU/KQweWWAWxj3afkIYP8b0dl
xqU8IQ8Z/KwtFE6a+YQ8ZPD6bYUVtvcfk4cMep2cYjCa/Zg8ZHDerDlj5Ky9
yEMG77hkHN9b9Yg8ZDA3MXqTmO4j8pDB/GVcZ4nch+QhgxeznLmWy5nzdTLY
0u0TvPAFcz5PBkWedC7dO+MBecjgs0RVl2YfT/KQQbVZGQeaxnqSx3C+D06/
oO/hQR6y6Gkx+vF8eQ/ykMWEmskW527fJw9ZtCwq8FjDu08estjtrpd7+s49
8pDFa84nH84deY88ZFFz7Bm//Q/vkocsPjNxs5VXuksesshz0Li/MfAOecii
ylP3a4Nz7pCHLF59V3nx/PHb5CGL/h8GreSdb5GHLL74PTMk1fcmeciimt+L
Fuc0d/KQxWkP+QM2lW7kIYsoefT0VVE38pDFs76uXemzXMlDFlP+YQ3N1nch
D1mMuX5W4u2VG+Qhi8e8Xp4JfHWdPIbfz3N3RFK9M3nIYsCP1428ycz5VVk0
+PTg+HMjJ/KQxerIoQN3Hl4jD1mcELfza9bnq+Qhi0ftnb9rKl0lDznkly4+
q2x2hTzk0LFc/c6u6MvkIYd3zhmxagcvkYccPh7QeVS88xJ5yKGUjsbM3dsu
koccLhgKW1sycJ485DDSMqRgTvw58pDDYzJ7+01OnSUPObzpKldycaUjecjh
vjbRDa4SZ8hDDs0jnku7lDmQhxxOF11ccyXBnjzkUPLWnpMXvJjzz3I45/ME
rStX7MhDDg/ofRd42J4kDzlc//DyspQjtuQhhyIJQXGDh23IYzg+6SX7Tays
yUMOq9hzH31tP04ecnj70K6qLROsyGP4eWcuakzROUYechittaDNwvMIechh
4b6fs+f+PEwectiQozb6jJY5echhj8LmIsMkU/Lg4ZZj/qs/LT1EHjx0VU+o
68k5SB48tF2kPqbwwAHy4OHs8br5+aONyYOHFVzXRedd/iEPHgYf+/b50zgj
8uBh3lDPnZp8A/Lg4SzPFz5J9/XIg4flu6e/sjyvSx48zDiiu1LOaSd58JCr
MNHJRH87efAwan2s4ocyLfLg4T7+qCvuvprkwcPq/v0iib7ryYOHn766Bp0q
R/LgodOOvMqCyFXkwcM0r51aB8cvIw8eavQrHqpnqZMHD7vUKxMCDi4gDx7y
dc6yI8/MIg8eLijc+vGsigp58DBy64mWxfnK5MFDtxMbFF6kjScPHt4sqE3n
l40iDx5GZPPHhjQokMcIHK0qy1pcJw//B+D4X1w=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
PBQx/UW+c7brU/IYggtOQ/z9pifwf47Tjks=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 4.}, {0, 1.}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.759449121307802*^9, 3.759449145638237*^9}, 
   3.759449331174814*^9, 3.759449423185536*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 4.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.759449121323097*^9, 3.7594491456657667`*^9}, 
   3.7594493312027607`*^9, 3.759449423212117*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test whether this is the eigenstate of MS interaction", "Subsection",
 CellChangeTimes->{{3.75944928801099*^9, 3.7594492932051573`*^9}, {
  3.759449334866345*^9, 3.759449345721476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TwoIonSimulation", "[", 
  RowBox[{
  "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
   ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
   RowBox[{"Evaluate", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "[", "2", "]"}], "/.", "FirstRotation"}], ")"}]}], ",", 
   "0", ",", "True"}], "]"}]}], "Input",
 CellChangeTimes->{{3.759449302359221*^9, 3.759449309383264*^9}, {
  3.759449362109393*^9, 3.759449399890427*^9}, {3.7594494459309607`*^9, 
  3.759449471994606*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
4VN5h/JdkKKo/fBEFeW7YH+tumNDJeW7QMNhQWXALcp3wT4UJAy/SfkuUDGb
F6lXQfkuOJ2j1b6ynPJdYFs6zHoKcYMLBki9H04llnOFx+WkwRuJdVxhIg4/
Z0W/B1fcMzk2yoHyeK7Y6XJ37z7ankRXlDh5WYXT9SnHFbrJ5lhcTfmuyBAb
9XpXQ/muuL5q8fCSOsp3Q4ZqTHfzA8p3w7sl+Ydiaf/CDf1Ed6oFLyjfDS9G
PTlQ2Ej5bkhJAye4ifLd8HF1RIeQ+l3qhgfHRTuq6PrX4Iblh8se7uikfHc8
RXmvy3R86bhjys3RX8f0puPPHV5OxXnb6XjluWP6gQUqFnR8J7pDtWijs+Ig
Ov7dse/DeKnC3+ufO26mf0qbokbHvzuElnal6+n8lPPAq7PrGpXpeqbjgSEK
d36X0fUDHvigPP1IznjK7+GvQbqHjCnfA/7S9WueTqF8D9zY+9vJwoLyPfDd
BuPOW1N+z+8f0SmSOFD+TKTVdUZaulL+TGS9za+b7EX5PRxqK/Pwp/yZOJFV
KlkfQvkzseL30sUfeJQ/Ew84nUvmSil/Jg5YBPsPmUf5M/GpLWbHnUWU74mB
Wbt8jiZQvie4A2xe5iVRvic+aLVHnl9H+Z7Y5FVg/y6V8j3xtfxl3OR0yvfE
9bepazdmU74nHnqf9/uTR/me2DzHcsfaQsr3Au+DsqLuGcr3wm7bX7uqLlK+
F4oMTn9af53yvWB/5M1YbhXle8FA5c6Lqfcp3wt5z7neWs8p3wshhkftVN9Q
vhcGPT/5dNhHyvfGiCtterpfKd8b0vBKO4tflO+Nq+H/CgIV7rJ8b7zNuXh6
+SDGid74kzxm+xE1xjneWOxTbtuoxbjUG/NiUsZo6zNu8MbgePOciEmM5Tg4
wPGdkmfOWJmDugne3M+2jHU48I/pvwsujE04WJC+fuNWb8bg4NP+EZXvghhz
OKjJfdDmwKPt5cAlPu3UHhnjaA40tTh53dG0/RwY1E3ICF3COJWDWKcvqpdW
kg8HbWHidp31jIs42MMbWLI6jfw4KFsdZ/Eug3ENB+JObi+v/eTLQcfU7lMn
DjNu44Cz+Vdf9VPk74OCyJ++Sy+Qvw+GvDsmeXaN/H3Q7rwkwrqK/H3gPL+7
b8Z98veBZfU+bsdz8vfBhscDPri/JX8fxO/PKs76RP4+WKTk9bv5G/n7QLfd
6PakP+TvA/Odhc1zFGuZvw+S+2xauW8I4yIfGPcSfahSZ1zqg95zhgd8Gs24
xgdHLCwrehkwbvCBgVY5FE0Yt/lANNvvdLcFYzlf1OjdKW6wY6zsC+PACRHH
XRjr+GKEyrxTc7wZm/hiolfmd+UgxvDFAA3FC5nhjDm+mLbqBG+AhDHPFxtU
q0aGzWUc7YvDN9PdNy9inOiLwD6jlLMTGKf6ovD11ZT1SeTvi74t31W915G/
L1q0dgvfbyZ/X7yJTRwXsoP8faFfue5sZhb5+6L32UDdo/vI3xcDu4T/bsgn
fz8smD9Ay6yQ/P0wXSynfvAk+fuhuP/Hivpz5O+H5jP2mc8ukr8fXA48q8ws
I38/OO72s9csJ38/lH5eMzi4kvz98EDze57fHfL3Q+3DIoV+deTvB7fZQSPi
H5C/Hw6tuNG+5zH5++Ff/86aZc/I3w+u22w1lOvJv2f7W1rGcV+Svx+27Vd/
6feK/P0g17G9oPcb8veH13jTn8K35O+PwtY9VnFN5O+PLo3+Yutm8vdHvOmk
3ieJ4Q+9defnPyXm+GNR+oylp4l5/lCNUjpnTxztD49z9bMS6fcT/XFVft/w
GMpP9UfT2+0b1Gn7cvxRlZazcgFtf5E/3q6V/kkkv1J/lGyt/uT8198fOW7i
nGu0fxr8IduzdepP2n9t/shd9dighfavXAB+rX3XmE77XzkALZ/De/WpIf8A
TNESGhrfJv8AGI+I1BxeQf4BkNsrf6zsKvkH4PUtp8qpl8k/APufz4mMKiH/
nrz2VblRp8k/AIuGzEs2LyL/AMT4u4ZVF5B/ANpeCh3Mcsk/AEcM5u2fm03+
Pb8358DFJbvIPwCZgXF9Q7eSfwAupV95PzyF/AOQWqxbd2Qt+QfCU3WMRCeR
/AOhMGrB14VLyD8Qjx3XBxfEkH8gNv0X/eh6FPkHwiCrOuymiPwDcXzfMfuz
YeQfiG8Cv9C0QPIPxJOjBdPC6HqSGIj4tvfzR7qSfyAadjbU3Qb5B6JMIfVa
7HTyD4TR6+nQNCX/QOwyclt8wZD8AzHh5KrYsLHkH4jdDdsEcqPIPxBH1oca
5g8j/yBU37qgFDSI/INwcr/iniF9yT8ICVzVWfd+0/U/CGGaV2IPdtL1PwgN
Bo47N7TR9T8IU2wiU5Le0fU/CDL9W8M2N9L1PwiLPGeWnHhK1/8ghMNSpe0e
Xf+D8GuvZKdrNd3/gmBp17XkUjnd/4J67t9mXn5X6P4XhN5RL04pnaf7XxCk
+vqiBrq/NQShfZTR7KeFdP8LgtcKszU/8+n+x8X9rQoe9nS/VObCLs/Kt3A3
3f+42PdpcpNDOvlzcbyXt5ncVvLnYtOOHXFvU8ifC2vbu7bfksmfi9H8J1WT
V5M/FyOG8wdt/Zf8uYhr0XTUSSB/Lv7VbCh7EEv+XAx2O3/qTAz5c5EV5614
eR75c8HJn5TaGkn+XByoyVJzkZI/F4P4sZ+uCcmfC5fNG15J6flELhhmth8u
TQoj/2B0DRgXrBFC/sG48jpAbiw935gEI1vhc6qnP/kHI2JNUt8dPuQfjO8e
EWN/epF/z983fitfOpP8g5HhcWipqjv5B6M139D0Kj1fpQZjzeFuo2Qn8g+G
ytAtG3iO5B+MEc0bfN3tyT8YZbaDahztyD8Yb7fpvXO3If9gDNnfp1/4P+Qf
jAFKc0cnTCf/EHhes8nOsSD/ENhqTs27bUb+ITjdT+PAr6nkH4L7mxu+TjEl
/xAsG6qoLDMh/xD8ShRs2EPPl7wQZLqM/1pnTP4hGOlQN0zRiPxD8LzQIdd8
AvmHoKLYYgt/PPmH4MtY5aq148g/BPEZOcLcseQfgrCTmSsv6JJ/CJqihSGV
o8k/BE8HXJlxl56H20JgtWTZ4SpN8p8F5aLMX5dHkP8s3CiTNh1UJ/9ZaH2j
3LSanq9NZkF1aePrQFXyn4UlF2tjtVTIfxYGyA4cejSY/GdhaDHHNnkg+c/C
uv3arsb9yX8WHH5137imSP6z4Hg3vsSHnvdzZiHtrmVUXW/yn4UtmSolbnLk
PwvDlcwnnqb5Qk3P9rg7bFf7SfONWXjfx2xLVBfjtlko1s2XP0vzDblQqPdS
iutqZ6wcCjnFUb1M2mg+EoqoKxofw2i+YhIK7szEzKT3ND8JRe7JH0p7mhhz
QlEwZOPDotc0XwrFxSuJV0teMo4ORfrAixsuvKD5Uyg6j0sen37KODUUyy87
ex58RPOpUNis3XU8leZXRT35/x0NjKml+VUoyuN7uc+8Q/6hePv0z0Lt2+Qf
CmuzhUbvKsg/FNPfX/5+mOZzcmEIvKcrlpaRfxjmiNyujrxM/mHY/S5p643z
5B8Go8oEy8hz5B+GckezVoXT5B+GQ+OUQnYdJ/8wfJ7Z7adH883oMDx7EFyX
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
QjcjsdfcalpfKkVz/WCZRQPd/6Uo4zoJxvy9/0uhFjYq3Uienv+k8IjLf+Q9
nJ7/pBh2dM3ujQb0/CfFnTru3hdW9PzXs3+vRw5y9KTnPylmD1HOPUPrTUul
OGsRYmseQ89/UvSRdORcWk3Pf1LYy8lkM3fS858UcVoBbs/o+bGhx//IwhuR
9PzaLMUhu+Kojmp6/pNilZ9xyWKaD3T1bG/cS5UPX+j5T4aQ8Ze/cPrS/E+G
xB8fc/fTfEhZBpndh531hjT/k2Gwc4t6Lxua//XUR/SPlPem+Z8MQ04OUXhL
8z0TGQr/mdqxl+aHljJMnvGrYRrNJyHDAI3OooztNP+TYZzS+/E1eTT/k+He
4tfmd8/S/E8GtSE/NmVU0PxPBp2I22KDxzT/kyEte7dJHM2no2UI/3V++6rv
NP+T4TV/5QW3fjT/l6HgWVb5DQ2a/8ug8dgv/9t4mv/LEHPl++MH9D4gXYbp
EX/4Qiea/8swfm3TzV1+NP+XQa95xapYPs3/Zfh66Hbjt3mMz8l6rleblDSW
0fokGbj+2z8/SGZcIcOf62vWTqH1ozUytHg9WqZH60cfybAq97GkkNaPNsjw
zY33p5LWjzbL4DK4YOKyMsZtMkT94Iy7QOuzunr6VVFUup7WW8nNhp9/sOnb
+jt2/wPZIMiZ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJw9mndcz9/7/1NGZiFCoiEkUWhHj3Zpvdq7Xvv1EpGMhhUZZTaM7Gy9o6EI
KZHs0UCREdIQDUIUvv1uv3N93v+8b/fbcb0ez8e5ej7Puc651PlLPESyMjIy
6nIyMv/v//Sfh9D0mMydSov/T+UWxgNeSl1vE9dZCOqMtaRlxE0Wt27M8HK9
RdxuoeO6dVufUuJOi4s11TEbbhB3WTzSef+x4jpxj4Vt1MGc9iJiGVgODXry
tpBYFjG3ZdzSrxD3hfJxHffZBcT9kRUuP+BAPrE8Bj/Lvfosl3gQemZ8vtqY
RTwE2GmxrCKTeBiUS7Y77T5LrIjy6orb+qeIh2Or6As/8xjxCDwcZpwte4R4
JK5dm2VucoBYCQ0Bugc5e4lHYdpvq7D5KcSjkS/bM2fqTmJlKIurj7QkEo9B
bu7AaXs3EY/FId/Vy7TXE49D8S3DztOriVWw+eJvA8Vo4vFwi2w/K15GrIoC
vbgrmYuJJ6B8g/BR3QLiifDwOq07QESshkeqDXpqXMZxauhQmd0zPZDG1fHu
teTxDB8aV8dyL/75ye40roHamUsujnKmcQ0sHfenqseOxjVx1iHl9ytLGtfE
RrkE2QJzGp8Eq7kW2duMaHwSHFdm3w6cReNaqDlnUTdFl8a18NinT2b7FBqf
jGKp/IFLGjQ+GUmDNObFqtL4FBSPH9BhNobGp0C3ZfmEnhE0PhVpM24qFA6l
8anY4KcxMEaexrWhUNVubyhH49qwKFvU8vVPBRufht3hhZOyuxjHTUOHC/d7
2Dca10HG08Y1k1tpXAenUo+ee9dE49MR62ix7dAHGp+Of+Yj/vm8oXFdDPqQ
81PxBY3r4sZ5Bd/7VTQ+A23pn75teEzjM3D41e/zpvdofCYe/PF26Cil8Zn4
m6hw5HQxjetBbsE2ccAVxtDD1qQry4bk07/Xg8XNzzHXshiX6IHrmD0vLIPi
9WHYoR0z6iTF62Ov4rAPRUcoXh+77OcbC/ZTvD5yDuVM67eb4mfBNNcm9sRO
ip8F27CG53MTKX4WYpO/yz6Np/hZGL7izAXRWoqfjda2lRlfoyl+NjzWfDgZ
u4ziZ6Mp/EbYn3CKnw2DxV2lsVKKn4PUY5LVX/kUPwdBjUekwmCKnwO55pmh
5b4UPwcf+/vD0IPiDVBSxu3Y40zxBkg/7BvaZkfxBnh47kCclSXFG8D28mH3
XWYUbwjt2MMvnxlQvCFsbIx0RutRvCE8B7kGc6ZRvCHOvxft2ziJ4o1QP9at
X94EijfCqDV5DbVjKN4IZi7hq/6NoHgjlJ2bNX7CUIo3xt8x1WrGAyjeGJ/n
L/zl0ofijTHKeNA4bnc5izeGar8I+SXfGcuYICdpvt+qNsYwwdKNK09uamYc
Z4KR+j7Hdn6geBOUTZPK7HtN8ab42NC5+2g1xZvillPHtIwKijdF6i7TnPwH
FG+KlppQhdIyijfDpWZf52fXKd4Ms5/FRX6+QvFmmHXiQdrAfIo3w/Tj+z7p
ZlG8Oe5HrEwKOEvx5likn1iRdJzizRGlEtNUcYjizTFpc7bexH0UPxf1/TW7
YpIpfi5+Je879WEbxc/F99LI/cGbKX4uhoQMmdccR/Hz0LS2p0/CKoqfh6E5
Q1zMVlL8POw5u3h336UUPw9XNO8af1xI8RZQXi3MfCOmeAuI3KRWX3kUb4Hs
poGh6sEUbwGT8C6HcD+KB9yH/7Ot9mSsBiRe1EjkutHvATeNi2cPcmLMBZ4t
exD4zI5+HzipFvnzphXjdODg1Tvfq+aRHpDgP051oBnjOuC8v7aOwIj0LZE0
zSnv/WzSt4R8d6Rxgh7pW2LFyiJlL13St4Stxr0Uu2mkb4ms7tMPQ6eQviUu
jpx18+gk0reEQ9Vqv/4apG+Ju+HD7FMnkr4VbrYE6tupkr4VptSe2DZBhfSt
UCFSvagylvStYBBi/t5cmfStgJxs3fWjSN8KGiPqdzWOJH0rzD+a927xCNK3
Qllj8IdRw0nfGo7X7fRrFUjfGtfnxPsWDSN9azydnFt0dSjpW8PTVrakYgjp
W6NMkHVAhjjdGvUpU9fZDib93t/vrNxyZBDpW2Pmb/HNgcQyNlieJtHbNJD0
bdCdcerWMGLYIDz695KT8qRvgyaX1Uo2xHE2aJet3t8ygPRtEFMiepVGXGKD
pEkXbjgS19mgYaG6Tk9/0rfFmaxYuSxiNVtMiF9jGkwMW5z7xL87gJhri+m2
zy5k9iN9W0x2HShvT5xuC0Pj083VfUnfFtcv/4wPIq6zRUrWybFVcqRvh0dh
ij0mxGp2mFPV+8mRJX273hegIKCyD+nbQT13XL0McZwdSlUeVI+VIX07TJ/9
tNno7xOmb4eUVYmaQ3oY19kho0DJLOsXYxl7/IiKMhn/k7GaPaodO4K9OhnD
HjHODsO8Oxhz7bFuHhrHtzKOs8f+1OmZ/31inG6P5KjlLn8aSN8e25NrWkZ+
IH17OB14c+fLG9J3QN71Pr5bX5K+A67ZRak3PyN9B9xOnfd5YAXpO+BBucaG
zw9I3wHVG358SrpN+g5YJlsy62cJ6Tvgm5PD3omFpO8A/TYBb9BF0nfE6Yas
XwVZpO8InYR9jVPPkr4jXuTeyQ0+RvqOEFeHjPY9QPqO2Nr4onBUKuk7Iu6J
ydYD20jfERu73zk3xJO+I+Rko+V/ryL9+UguvJ73fBnpz8c9eW3xmoWkPx+X
CmJt2/ikPx81Gu+jdANIfz4iBw11N3En/fkodNknr+RA+vPxRqI69vo80p+P
ljnJT80MSN8JgWFl5dt0SN8JE26P2JSjTvpO+NKjmpapTPpOUDjz8tzaoaTv
hJIo0xU6cqTvhLS1VcV5XY+ZvhPeLllrN7aVcZ0TJilze4I/MJZxxqvtjzLj
axirOUMxfYP/9keM4Yzfp+fWx9xkzHXGJmG6t2sB4zhnxJ5qSR98jnG6MyrP
nrubl076vb/vr/fYYQ/pO6Nl5Z5TDxNJ3wXh/U+6W64lfRfk/LifdzaS9F0w
35pT0ldC+i4w5+dZ+QaSvgs0VmkrHncjfRdEyp5+0WBN+i5ozndymGJM+i4Q
fWhsFk4nfVec+u/c7GNqpO+K26V5G18rkb4rXj75OFZlIOm7wq4xcEzgn0dM
3xVFf2LXH+lgnO6K4lpz44aPjEtcoZxd/HfWS8Z1rkhrHRy56TFjGTfI5pxW
fHOTsZobRl8VzppbwBhueLZbadiJTMZcN5hqPbiikE76bniz2lEzfjfpu2H+
qlyNPwmk74a1Sy25a9aQvhuOJhRHy0WSPgf6WRXVO8WMFTnY7PWibkIgPQ8H
VlvrH19wY6zHwf4jH5842tDzceAo8/r3e2PGHA4aM8Zz1ujS83KwWOvLI2UN
xhEcjLdL9cwdTc/Pwahd3584DGacxMGii2tGvP73kPnhYFjiSdnwTsY5HPS4
xCz72cS4pFfvp43rqteMyzk41/Ri1c8KxnUcrL8b2hl2m3E7BwnjD5c9vcpY
xh0PW6YPmJPNWNEdy2yNu7acYKzmjsOQvH+yj7GeO7qjPmLwdsZwx9s7f4+Z
xDHmuOOltuqdgOWMue5QCLuRsljKOMId5cNUx6wIYhznDq0919IWcxgnuaPo
6sdNgTbk3x0Tg9s3mxuT/954j9oVI6aTf3cI274L3kwk/+4oebnkwLGR5N+9
d7/rvi94APnvfZ792kpK3Q+Yfw9UNn3qud3KWNEDlqVToqLfM1bzwD+to7XT
njPW80CyLDev7h5jeGDthJTiQ0WMOR6YI9J4y8tlzPVASZql/uxTjCM8cHxS
Qf3I/YzjPJB/fSB3wA7GSR5wHbRs1PD1jNM9oMvxSZ+zgnGOB5aJUs6sWMC4
xAP3w0Z+rA5mXO6BGNf+mqEejOs8UDpIXkvBnnG7B7RVAktbzMi/J5Z83nCl
S4/8e6Igy+OZyWTy74nEY1cLL6iQf0/cuPp5tGQ4+fdE7mM1acAA8u+JYG17
taQ/95l/T8QZZ+8c3Mk4whMdAwbWPvnEOK5Xf2v+yLp3jJM8cVGne4jFC8bp
ntjlsn1TWznjHE98Spnx69tdxiWeiDFoued6g3G5J6ZenDxW9irjOk/ocT98
UMhj3O6JVsWCtphzjGW8cGd3QKXlacaKXlj38/k3aTpjNS8MO7lgU/sBxnpe
qL51OunFHsbwwrNklaZJyYw5XljwTMu4ajv598LiKHF3fQL594LceYVNAZvI
vxcSL+j/nb2B/HvBTXu0dOk68u+FPekLj45YQ/69gNorQcqryL8XsqctNVgX
Q/69YJHqdNwxmvx7wWHcu58rosi/F4YfNVwpRyzjjbhGa5OOleTfG4LDJi7z
aFzNGxWZS480E+t5w+OT8sCv9PvwxjtTMw+fWPLvjXBht/ao1eTfG0bGC+bo
riX/3rjlWfT7UBz590ZJ2EE5QTz57/33LZ0FazaTf2+0Dh2/oSWR/HvDsm9d
7n87yL83Ovan7rlC81/ujW6V5QtG7yX/3tg0gMu7Tvlr98byuQoZF46Sfx8c
VFUMbj1J/n2g/4e3P+I/8u+DPjnxEqMc8u+Dc0kWVbhE/n3gohtdvfUa+feB
yqOQJSNLyb8PNjqv2lpzj/z7QDb4tFIN/T3H+SD62MJvCjXk3weLzq/vv/Yt
+fdB7e032mqN5L/3+crnGHS2kn8fCN+2dP/8Qf59oGYT7a79j/z7YN+D63Kb
6f1s90FL6q/6wYr0/vvibse3m5fH0Pvvix/DHZZuVaf33xcXNTtvrZ1G778v
5C8u25s6m95/X4xZ8/DebXN6/31RbTPbarQdff98UW5R/mudG33/fGEz4nJj
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
QfWfFPHDxB8/RFD9twB7Pszcbbuo3OL/ADgA7hI=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
wZjRfzepMo53x5neddcThzBOdsddxQ1/kv/cYf7dMWKSVUL2J8a57thyfdPB
Fy8Yl7qj/rKc2qQqxtXu+FZoW7OhhHGDOyIiCuv75jJuc4eyd0G/oxmMOR74
m/5ZS7yDsbwHij8GNzgnMFbzwIJw55KQRYx1PaB+e0KfNBFjeCDuuMegoT6M
uR44W6Z+Pc+OMc8DCvuEcrtmM472gIb+h8tnpjKO98A4U6uKQaqMkz2wTNoq
ypEn/x54bzFXcV9v8u+Bgym6GdVfK5h/D3zVifns955xtQc2CDNDDV4wbui5
Po2UmfNqGLd5oGLRtal/bzLmeOLD+VXKHcWM5T0xOMahwOEsYzVPzKhTKpE9
wVjXE1qNvxbPPMQYnqgdtfRm5U7GXE8kXHCd+SiJMc8TK76v++GXwDjaEx6d
QSXuyxnHe0Knddb3GwsZJ3ti+Dbr5IK5jDM8UTR6dcsUMeNcT7y1ilquGkr+
PbHF7r5uqj/598Tc8npRqhf590TZnP2m6lzy3+P3RMVYfWfy74W6GdOcauzJ
vxcWn30wo9uW/HvhSJ6jQ741+fdCZGNs3S9L8u8F+3dB+dUg/154YyS5oU/M
84LbprrNmsTRXj392F2L/4jjvVB8dZV5EX1eshdcZZbL+JJehhd+qRVdW0PX
k+sFnf39XYzoekt7ru+0THqsE/n3wl/lkJ/WbuTfC7MvFf3Z7Un+vaDEzdo2
34/8e2NM1Z7K8mDy741VcZH+x4Tk3xtnMs7WcCLIvzcq83UOPIom/94YN9Xg
5ZQY8u+NKbdNzravJv/e8Kl90Kq9kfx7I/fqEDxKJv/eOL53i2vbPvLvjYt9
hvIWZJL/HuY2N/pmk39vaBvlVaYXkH9vHNM9a2t7jfx7A4vfK9ncJf/eePVZ
rW/qI/LvjWU6fR6Yvib/Phh4/c9DnTby74MB4wpfhP0m/z5Yv6tvfaMsPf8+
sHi1NOmQEj3/Pqi7NSpvx3h6/n1QqDmy/eJ0ev59ULJicF9FM3r+fWCuUD0j
1ZGefx9oclJWW/nR8++D22MiigaH0fPvg7mq1x266P2T64P5qXLJnWvo/eeD
NxkXHPsk0/vPBzeD555WT6P3nw/GCG4k2Z2m958PIr9bO0dfpPefL8JNbu3c
W07vP1/Y+/V1L6yn958vHu3zvnX3Nfn37bm/vqTXdpB/Xzw4c+3KdQ69/33x
9ovGukP0Puf5Qg6ep/3G0vvfF38+84Z3TqH3vy/efSsolhjS+7/n84/aHDpv
wzjDF1r726Nq3Gn+80V7RfOf0hCa/3yx0a/k94q5NP/5Ir1+UcffZTT/+eLL
7uJ9juto/vPF2sjxwX7JNP/5QdFp8V3NgzT/+aGab7Ar/wTNf364/UengHOe
5j8/3PIM3NvvCs1/fjCuqXO8WU7+/TDuzQ9z81ry74ft2xLD5z8n/36o7Dsj
2LOZ/Pvh9ySv75/ayL8f0N+hGj/Jvx8e/658Z9ebrQdy/ZAQfWd930G0vump
V1hlGKvIuNoPNm7hcUfH0nrHD9fNP1dsmMi4zQ+8Ws7eidq0/vHHzojd3itn
0vrHH6OX3uInG9P6xx+de0+MFNJ6Rtcfb7t9H3TZ0frHH9OrFPY4udL6xx9y
mut/ir1o/eMPQ+Mga/sAWv/4I9nme8qXUFr/+KPO13FMpJjWP/6ISpiVXhBB
6x9/BNZ0qj6IIv/+aJEuarm5mPz7Y5Jd7v2UWPLvD62d/VaarCL//oisfHm2
jNZzbf549mH2+OkbyH8AZj9oyYnfTP4DoOq7vL54O/kPQEzp4oymneQ/AJ8y
15r+2kv+A5DZoVrW9yD5D8CdY2mj+mWQ/wBc0bti/jeT/AegV83Jhs4T5D8A
d8/2v/j2FPkPwO9DT1yenCH/ATgKn1/V58l/APRP/1W8W0D+A+Dt9jO9upj8
B6BfR8bR5yXkPwA3w0+96Soj/wFYqTr+7+hy8h+Iv00eW10ryX8g1I+bndxR
Tf4D8eH1jbo3D8h/IDQmGp9zekz+A5FQv2Xz9efkPxDing6b20j+AzHx9Iap
7W/JfyBWHZmkefwD+Q/EW9V4peg28h+Ib/PTA926yH8gMnh6d6x/kv9AvBsY
/sPlL/kPhLT3Z8P5fVi/UB2IaUbzph2Ro34jEHkH/bo+DGHcFohlXiq9nRSp
/wiCXuPOlCujGMsHodeFuqw546gfCULlmJKWxomMdYPQZV50PUWL+pMgjPSM
EPnoMuYGwc7hYJ62AfVLPfUJtXYjTBlHB8Ft6sQKBSvqn4JwRXvX63H2jJOD
ELxxYLTFv34qCAf0zt2J9mKcG4SnV8QB5wOovwrCfoMdnf345D8IDVamZ+ZK
yH8Q+tRcqG2YT/6DoOy8V1WymPwHI1n7xNLu5eQ/GJ9WvG87uob8B6Nhxe/l
QRvJfzCmWWwepLGd/Adj4/J2uT+7yX8wIg586Wg+SP6DcfqwekNjJvkPxhrD
/AufTpL/YAz7UG496Bz5D0bmo2/vjYvIfzD6TyjqWFFK/oOx9VXOlnu3yH8w
ChqlA/WryH8wLu+SeXaqnvwH48lykw6DF+Q/GAm+z2zr3pD/EJxzMdXf8JH8
h8C+sczdpYv8h0Bt72GpJvXnuiE47n503Yi+tD8QgiabNcNGD2bMDUHjkqk2
M5VovyAEnf8djeerMI4OwTzLOZeOadD+QQhMZPin/+owTg7Bm+Hdt6IMaD8h
BIMvSmd+NWecG4LeXjkvUuxofyEEc+OqnOZwGVeH4EOLSz95f9pvCEG4pKyo
jc+4LQQaHcPvNEfQ/kMo1qRZVnQtYiwfCqeoO4aj42g/JBThf6Z7eK9nrBuK
xa1jnhzfTv5D8Ta3NHfIPvIfipzbfau3HCH/ociv216rdpr8hyK0ZcrdCtpP
jg9FsGW6cRLt9yaHoukKVzX0NvkPxWpV1d/2tF+bG4pNnOX/2dF+U2ko3l0Z
eDWA9uerQ/FGdX3Lmn/7raFITNhVdon2t9pC0WfZksi+tH/K4WHPs86GWbKM
ZXko2XIpLor2Q+V5SPDs1XmW9ueUeeiI3SrbTft7ajxcW5PlwVVhPJkHM9v8
lFPjGevyYMSJdx4ymbERDyaPtSfH6ND+Hg8y33dntegxtudhi76pXagRYy4P
UZ8zU56aMfbjwX/J2fIga9oP5CFxxt6ERvq9RsrDYfvf5XNdGUfzkGbJ1fru
yTiGh49xM3at96f9Qx5UjrySjAhlvJGHDbvv7TkuYpzMQ9y+4YYG9PtSKg8u
Lm1e16Nov5EHhW12p92WMM7iIf5vRPjD5YxzedCPSPzmT79nFfJwPWPdtvpE
2p/koWr85WinzYzLecjasPdCQTLjah6+aZ3IHrWH8SMekrseaUQfoP1MHlqv
GB0uymDcwkPdm571xTHGbTzMrZx+fdwpxt95uMv195ydS/nzYX+z3hb5lD8f
T5uqtuldpPz50L031W5oCeXPx8mkY7EPyih/PpzPbFRdU07581HZwN05/C7l
z8eV+TI7ku5T/nzEcBxaXtdR/nw0hfwYpv6E8udjvLu5t/kLyp8Pic+xASaN
lH/P53WIK0a8pfz54A4PVah+R/nz0WCpvTPsI+XPxydnDb3H9HtpDB9ybcd2
aH6h/Pl4//z0BPdvlD8fBpzsSO+flD8fFZMWrNTvpvz5GJHre/vjX8qfj7Ig
k5drerHfa7P4cDk6L6StD+NcPqxFnmrG/RkX8mFROn1SKP3eW8qHSaaCiDeQ
cTkfy24bSMwHM67mQzbmwoSfQxg/4uNhwJjLu+QZN/Bh5ibUGkq/J7fw0bFZ
edjc4Yzb+Hjy1XHDf4qMv/NxJLwhqVKJfn8WYECg6sK6EYxlBTAebS65OZKx
vAAzXhapH1ZmrCyAJDjovmQUYzUBbr3ft3vsaMaTBci8qL//KrGuAOUp2p7+
9Pu3kQCjbJLb3hCj5+8lWcoRYxnbC3BBOGFoCzFXgHn9P68XqDD2EyA9rbbp
KTFPgOebc275qDKWCqA9r9f5OuJoAVJm75gaOI5xjADZg38VvSOOF+DQ+oF3
1qox3thzfXEFtVPVGScL0JYTofOaOFUAt8Si8WfGM84Q4NPJD1+30e/9WQI8
dGksTZxI+QvwLVmasVuD8u/xU6K3snQS5S+Ay5+9xrKTKX8B9HtrpEVOofwF
MAvXNO/SovwFcIp2vnaIzhs0CDBh9czw8GmUvwB67oUX/XUpfwH2jjh0IkqP
8hcguURtzWl9yl+IFxo5fRUMKX8hajgJM9NmU/5CVDQHnvcypfyFmN5tOnqW
BeUvhOwA7hBYUf5CJBQuzF9iS/kLYX5GdK7envIXwjC19J7AmfIXovvApa2j
uZS/EBtij27o9qT8hYhMH/11IJ3X8BNi066f822DKH8hfFvnXv6PR/kLYS0/
dKeRmPIXYqfDJ+v2cMpfiMttZw/WRlL+Qrjmt6x/sYjyF8LRaX+NQizlL0RY
a/8p81ZR/kJk6rVrflxL+Qsxj+u5cOcmyl8Ihegwy5DtlL8QRwe9CXDeTfkL
UZhzIiboAOUvxOagj9u3Hqb8hahFxIvnJyh/IYavmrzUOYfyF2Ka3TTTh3mU
//9dn05cMeUvBDfGWeHf+Zw2IfKlP3cOu035C9Hy4HHqnyrKX4Q9w1Q9/9RT
/iKMNqh7OvQF5S9CmSSqRfcN5S+CSWjz1dBWyl+ESGNc3NdJ+YuQmeuu+fwn
5S/C3eUvdDR7sfNKRiK8O3/5+xI5xhDBa4ZSyU15xvYiJFt3eY1UZswVYaT2
+6nicYz9RJApcsjLpvNTPBFmeWw88kmHsVQEdw9jJY1ZjKN7Pv/t2zZXU8Yx
Ioy9d0kn3JrOU4mQYXG2cIEj440i7M1tPyh2Z5wswhGtI8et/BiniuBR2n9C
v1DGGSKsOzf3dLaYcZYI7X+ymwzmMc4VoWOxlmn6QsaFPfVWcpmvYxiXitB4
yG5dn9WMy0XQt7sv072OcbUIviP2nbyTxPiRCFpfXhZEJjNuEEFTKbvXazpP
1yLCjW9X7kyh83ZtInw2brUzz2D8vef7jTp8Y9wxOj8mxuRPJvcr/2MsK8ZX
xfHPrHMYy4uRs8fn4tpzjJXFmDDbcdTmC4zVxEjc4djHn84PThbjiNyUZa2X
Gev2fN7Z3adsrlL+YqjL27fxrlP+YqyK2nYOtyh/MZp/tG5ouk35i/HqxJRx
DnQe1U8MTtkIqwV0/pEnxpJtxz8EVlP+YozafmSwHJ1PjRajye7uh5hayl+M
mst7Dp+i85XxYmS2nz1xuI7yFyPu3HHXQDrPmixG5+VqzcfEqWIsXH/i5hg6
r5khxtXc7UUTiLPEWBxs86yd/j5XjGuyb06tJy4UI8j4p1kT6ZWK0dYcLCtL
XC6G3sI5+l/peqvFeD6l2CmH/DwSY81VmeAZdB60QYwFaaHq8XQ+t0WMO0Y6
kgN3KX8x5FrTJq67Q/n3fD8e7Q+N6fvlhOFc+aGTpXReVDYMov0DHitRPvJh
eNvemWpC+SmHocv2+DA9Oj+q1jNeZOD681/+YYg+9HDHrgLKPwy2t6yTZPIo
/zD0mqpwyZLOkyIMnVGlYu/TlH8YfvXydDPLovzDkCPc5fsjk/IPg8tss8ik
dMo/DM+6g23b9lP+YViu43tp6h7Kv+f6+sw8ZLqD8u+pTypfNWEL5R8G5/qc
pQ3rKf8wvP++rHDRGso/DCa7Jhc9X0H5h6Fv039cVTpvmtFT/7XVxoDOm2aF
4fLyiaYaEZR/GE6fuqHaKqT8e/z9iD6eFEz5h0FboHFYxpfyD8MP8/RR7lzK
Pwxrr4kPxjpQ/mG4e8Esc4UV5R8GK+3Xi31NKP8wjFq2rmuwPuXf8/3ZzrJM
16b8w3Av7NvaQRqUvwS99I42eatQ/hJMHLMgbaUS5S/BorbdqmsGU/4SBCZv
SRT1pfwl0NDYkalJ508nS1DZXzHyzhd6/0swQOnaWHeaL4wkWCOjuL6oieZ/
Ca4NatLt95Tmfwnmey7sMqyh+V+C+Khta7g0f/lJsMK532NuKc3/Eiw0dDhh
XEDzvwTPhzkYDaX5MlqCaI69WvVRmv8l4Fyt7VpF82+8BBuKr89WSaH5X4Kg
OQOKT2+k+V+CgW0qP6atpvlfgpX9Il8eW0LzvwRGHrYyw+fR/C/By/ZupxgB
zf8S/KjxX/KQ1i+FEqjtcAnWo/OmpRJ0vdv4OInWS+USnGueWdJoQvN/D8us
6DSh9dsjCVY3JDqn0nqxQYKtpUdO/aD1bosEafnidj6t79skuDPl+eca6i++
SzAlLSHZlfoVjhRDP3fsrafzpbJSLMr2aJ33mfo/KU437eEOp35LWYqJOd27
7jyj/k+KqXOnJ+2tpf5Piod/rZ/GVFD/J4WjZkjkgqvU/0mxMXNEeUIh9X9S
aORNe5Jzhvo/KUbtuKj4jc6TcqVYJngfGEznSf2keGecr9m0m/o/KS6oas1M
2kr9nxRG72+N8KL+OloKWZdwd6s46v+kUH887YQP9evxUsTs0vJPmU/9nxRw
LnH6Jqb+TwqdhLWp60Oo/5NCSeW6qpUv9X9SjFuq+0OLS/2/FKJF7XVWDtT/
S+Hsc6szic6PFkqh5TrrTB86P1oqxefY28vPzqL+XwqFQxe9U6ZT/y/F+Nhp
z7KmUP8vxY1PA0u6JlD/L0X/4fMPLFel/r/n+36y9rchnc9qk0Ilu9tmOp23
+i7FPhM5WT6db+OEw+hFqda9AdUW/wNiCOhg
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.2005638575426194}, 
     PlotRange -> {{0, 200.}, {0.2050828392776318, 0.29546247397787995`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.2005638575426194}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200.}, {0.2050828392776318, 0.29546247397787995`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.7594494055784903`*^9, 3.759449479017579*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prepare the eigenstate of carrier", "Subsection",
 CellChangeTimes->{{3.759449543818871*^9, 3.759449551243002*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4", "t"}], ")"}]}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Normalize", "[", 
     RowBox[{
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Table", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
            "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
     "]"}], ",", "0", ",", "True"}], "]"}], ";", 
  RowBox[{"SecondRotation", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.759449558274919*^9, 3.7594495604486113`*^9}, {
   3.759449623786686*^9, 3.759449630846136*^9}, 3.75944966882537*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxd2Xdcze/7B/A6jdM8ZWVv+iAje6XrCpkZIXtkREYoERIiInuEkgolIyMz
KRoyGjQ1tDvtztHe49vn08sfv9/7nx51n/d936/X8+qPHvXftGeJmUBGRqa/
nIzMv1///2Pb+dns7MPW9H+/d6BZ21+Otj9aPM2/z6kSY/+L1EtdMzj6raZ+
+/p1UtaNj2vdOEzf1eW/hx4ZDnmt1o312z/vTvZ5x8R6zxbrlxr/+5O7NHH1
ob76eevxvheVX383tMeqHfoqSff3TlPxoQqHqcP0uu/Hfo/IZMGUfcc6Hdcf
uvZSaPUQXzoU+NH8zBlH7P+MzLaZRlx8dFnfq+3tpPsv6Pu1dYLJFTdwnh/N
ET18E/jbXX/sf88rMtASTZ+wzAvnv6b1VvbvghY91g+rHtJ2whvaW3xr5LSw
F7jPO+JDh2t3ab7RX9J+IFlfMdnze1AA7veeplkIx1xXDdbPPvzvhgFUP37I
0avHwnDfQErIEi0rOfxV3/Lf6+0Noiob0n2vEoX7f6SrXT9HLXeP0W9vPZh8
f4bcPnspHnmCqfn7urNmWb/05/x3QAh5XJ/Xx/tWKvKFEHu/OrwwOEP/39Pa
jqTvWsVBKc+zkTeMLOaO//aOxPr/xUkKo+F+gx3Hdi5A/s+08mbALvHoYv2+
/16nTziZzC2b5XhHgj7CqV+X784tT8v0t/73fKHujmQ1+H0F+vlK7m9Dq6Iq
qvT/3a3zs6+kLq1kt3W16Osb7e8k2WfUVK9f8+921d/o3NORug9jm9Dfd+pQ
uKDH+axW/f/qmRZBDcYZNpXOstTeZwQlKFa7rl0jR/9d71QkabxxXKcyXYHa
+42iL/aL7S7OF1J01H8PdYiocTl5SJna+46mbw+9el6IVqX/4nb+QUdnlzYt
nyui9v5/0MMpfpXzbDTpv+3W/qTqxV/dTmZ2wO9BDJ1eeMd20vpO1J4nhoZa
jv+9uKoztfvEUIVh8iL/e1rUni+GBF51vut3dKN2r1j6rdBHaZJRD2rPG0tn
dtQ90Zvbi9r9Ykn4s+PI7Zv6UHv+ODrzzmviBqN+1O4ZR/f2/XrveaA/+oij
PY+OvLR7MYDafeMp66RP2JGGgegnnkavs/XXNhlM7d7xlKj51F4xRBt9JVCv
TPOOj/SHULt/AhXsHbLxzo+h6C+B/ul1Zpu1pQ61z0MiHb74ZFnIPyPQZyJ5
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
UUlJK/38agLuwqOSxqgNfHNM9h48KmnXjIz1EXPuwaOSFDrsept0+R48Kul8
T7Owhyn34FFJH3unn9MfeB8eleQUOLqzq8V9eFTS6wLRhkD/+/CoJL9sW4sH
8l7wqCLtj260ytgLHlWUseV9QqK7FzyqaGLcgmG9JV7wqCKxiayerp43PKrI
P+GJnOZ5b3hUUZ3ytkNBad7wqCL99S3XJo98AI8qevv04pxTxx/Ao4oaVk9x
uhv/AB5V5GiiO+/SPz7wqCL3GS9tFh3xgUcVbUgcJJMb6wOPKrqso/Bz3pCH
8KimL6Gnox2PPYRHNQ0+GZLjmvQQHtVkUBVQ6aD7CB7VlGBskTvL6RE8qilo
a+TVbPEjeFTTiWHjskz4MTyqSeHxFh8vt8fwqKbP6dkhP+ofw6Oa0ne3Kiau
eAKPatJ6UzDf/+0TeFTT7AcnNh/S8oVHNa1sPde7u40vPGro5xmZ2beSfeFR
Q9NbHB/XTnkKjxq63Pew5iT3p/CooYfXCvRXC57Bo4bGzVlav37bM3jUkMdO
/9ZZ0c/gUUNykas1Oo17Do8aiv6okht2+zk8ash2gXP3EYIX8Kihfb3TVpdM
eAGPGnq8vVDUe9cLeNSQ+XGHC6F3X8Cjhn6/1x6RlvQCHrW072vT9B0iP3jU
UmqOdICFoR88aunli/t98474waOWzriPdop77QePWvrl1+XleIkfPGopUvlI
nkj7JTxqKVZziuX6DS/hUUubusV5DnJ5CY9aWrrG+uPG+JfwqKVC3w8dtUSv
4FFLNwaUiQ3mvoJHLWVZyNvmObyCRx3Nv+PYXTbkFTzqaNjAR3LOza/gUUfF
KhNs7055DY86Mh5yNlj74Gt41NHDRbUdB799DY860rtv/cKt6jU86uhtj9OJ
F8a+gUcdra80DKqzegOPOvJ7v+Fu+ss38KgjwZZ1AXqVb+BRR+lFraQ17i08
6ujV3VvmO/a/hUcdhcW3mk9+9xYe9bTzmov1yfq38KinZxNXBc3RewePeio/
4mh99tg7eNRTb/OQCMOwd/CoJ+svg//YCf3hUU8ys5dojDHyh0c9hQaar9h0
xR8e9eSqNKxClOQPj3p6HD5eZVLv9/CoJ72bNt/TN7+HRz21pBivlHnyHh71
pPvEI92j4j08Gij0WsDRwCkB8Ggg299hG5afDIBHA93OmuRtERUAjwYSG3+w
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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
l40iDx5GZPPHhjQokMcIHK0qy1pcJw//B+D4X1w=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
PBQx/UW+c7brU/IYggtOQ/z9pifwf47Tjks=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 4.}, {0, 1.}},
      PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 4.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.7594496727554607`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 4.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.75944967276847*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test whether this is the eigenstate of carrier", "Subsection",
 CellChangeTimes->{{3.7594496796533012`*^9, 3.759449686853838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "1.5"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "4"}], ";", 
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "/.", "SecondRotation"}], ")"}]}], ",", 
    "0", ",", "True"}], "]"}], ";", 
  RowBox[{"FirstRotation", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.759449710598345*^9, 3.759449734750082*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1:eJw91Xc81f37B/BzHOMsB00NtId22nRfl9RdNCWV9t0QJUJyN6SlUNEONy2l
QVLSHkokjrMSFQ2EjOw9f+e+f+/r+/mnx+XzOe/3db2e1+NR//VuizdpcDic
/jwO599/6Yl58GrbVfc02NMtdnbe7h1wlHO98NH/6sPQbdgLW6W6fmzsV2b7
OAjGevwZVfG/92ehbP7nb3oeaRAW+t8D+fvXN0zwoO8vwvLK2SWr1XW57b9/
uQJ6eg/jAz3o99cgonLy4mfqWpgduX268AbcQLfXlf877xY0dt/cMdQzDYav
Cn5TPywGrJ6N1t7oSefHgt0gt6xIdX1N/evsyDiIOd3iUuxJ990DM7+770bv
SAOz/5542H2w7OeuHXT/A5j7t3tSqrpOqh+mviEBMufqru/jRf08AuOzP165
q+vF/38h3Gk7lJvuRf09Ac+qiEfDd6ZB3u5/D3wKexb2sz22k/p9Dn3f+N+q
Utfu/7a3/QV8uuT82sGb+n8JM7f5hqao6//XSIQXu/qYTf6b5kmErIZHwdHq
es5/F7wG7ufsuIG7aL7XEPbpaMgldf3vbeorod7P0tpkN82bBF1KjyRfVdf/
jZOdBPlbCvRM99D8b2Fgm82IBHVt8m87xslw2Me8z8y9lEcyLKqyKshS147/
PSmw/nTrkW0+lM87aDs/UMjflwb/ntYt9h1c+0PkHrWP8kqFUY9HJM7xTYOG
f4+rTwWTIYK2Cl/K7z3kWk4eHro/Df6LZ3oaaCy4NG/2AcozDezPuG1tVtf/
teeXDveMCwPvHqR8pfDPY5s450NpkCH974Hzrvp5Qw9T3hmQM/X7gFJ1/d+4
3WTgvtFjT5wf5S+Df2rPVe0+kgb/HbdKDkanTP2tj5KHAkr2D5vT15/mUcC3
4sBJtf7ko4BpZ9c6yAJoPgUY2bx/eCeQvJRwdBHH/tQxmlcJFjzutF3HyU8J
4jOpWzedoPlVIHm/tco+iDxVsLC0h8wmmPJQgXCUQDTzJPl+AOu/De9YnqJ8
PgA36tsTq9Pk/QHei/Qn25yhvDLh8sS9pvZnyT8TUg/rhm08R/llwnRz22N/
n6d9+AilHaN5py5Qnh/BeNhF7dgQ2o+PcJqXECYPpXyzoPLVzbf1YbQvWWC7
80hAv3DKOwsMny39vTCC9icbCmvaaw9dpPyzIeTcwSvPL9E+ZcPS0botzZfJ
4xNMlMm5FlfJ4xOcS617djCSPD7BTrnOCNk18vgEFvUJtsZR5PEZbKoU4z1v
kMdnSOw3Tym9SR6f4aPu9jEjbpPHF/hmaLcgKJo8vkB7gsGYhhjy+ALfYytU
62PJIwcm6tuZZ94ljxywDPR0trlHHjlgd0q4Ovk+eeTC3LgD3Wc9II9cuHbY
+fT7BPLIBc/yXR8WPyKPrxAz5vinH4/J4yt8d3O87PmUPL6Cm2XQMNFz8vgG
35Muud54QR7fwH3cmu1zXpHHNxjTGT+iIpE8vsN98zsXQ96Qx3e4ItqcMvst
eXwH1dnAi63J5PED5COTBzx4R/P8gBkNJQvc35PPD1CNrzE2S6f5fsD+8rag
Zil5/YDVGxPC3spoXvX3LydbnFWQ3w+wlntvc1LR/Hngnnh8mGUmeebB8JB7
m42zKI88mDhq1mDOJ/LNA6deASuLPlM+eTDUZitPmUPeeXBPsqd74lfKKx82
tWwOjP9O/vnwYKbGyug8yi8fXldM23+jgPYhH3qN1Ku9UUh55kNsWGh0TDHt
Rz64indcSSihfAvAc8oS6Zsy2pcC6BsoHpT5m/IugD07jl8uqaT9KYAryblT
eTWUfwE0/zhd3K+O9qkAvD/JL89oII+fwHeQrXJqIo+fcGJDXpfTLeTxE+zS
dzx91UYeP8F2sO7c6g7y+Ak7FgqfD+GmM4+fcLTXMc11vHTm8ROKXT/2idBK
Zx6F8F7XqvmrTjrzKIRVI2ecHSBMZx6FkB1s/3OLOJ15FMJkU27eQ0k68yiE
Q1rvD2gbpDOPQjA8te+lQ9d05lEEMyq0guO6pzOPIuh91K5MaJjOPIpghY1L
ulPvdOZRBJfi1w1N65vOPIrg6gXXxtEm6cyjCGwvrZtwoX868yiGqu19szUG
pTOPYmiYefaT+5B05lEMuVbvxv0cls48isH1VmKOw4h05lEM731ey1Wj0plH
MZyU5eosHJvOPH7BiY0r98nGpzOPX7DvSvAo24npzOMXdLR/1MuenM48fsHo
xrMm66alM49fwNm8clm5BXn8gnN6sff3AHn8AtzvM0oygzxKYKroTVLkTPIo
AecJe90tZpNHCZx88WD8J2vyKIGBBsd43vPIowSGPNDKM1xIHiVgNyI39YUt
eZTCsCzF401LyKMUdu65E6u/jDxK4ban1c2XDuRRCksWu0W6rSKPUjh76sXF
gWvJoxTC30SGfvmLPMpg8KzYM2c3kkcZyGa4H7fdTB5lsLjR/5DBFvIog/Zr
oX9nupCH+nuP+K1hbuRRBqkx31Zv8CCPcpA+mr9ojBd5lEPUPIuZHd7kUQ7z
v1dOU+wmj3LI3fFo4nUf8iiHpw8NJ/nsJ49y+PJw2x/LD5FHOZRa2thOOkIe
v+H2jfnuPQPI4zdsuDnwSusx8vgNBVsOF+QHkcdveFZpZZ5xijx+g2evlOin
Z8njN+wQXJ0SfYE8KmBz0u7Ci2HkUQF1c3kPz0WQRwUcTOy4E3yZPCpggb+V
8ngkeVTArN9NA09EkUcF+D6df/vkLfKohOCeO5wuxJBHJby1v7/+yl3yqISj
IzZExN4nj0pY5lzf91UCeVTC9kaNItVj8qgErkl5W8kz8qiCDzeqN2m+onmq
QLPeZfCAN+RTBbGOCrBKpvmqIG3YjSebU8mrCkKbQi4Ep9O8VWB9PO/rUxn5
VQHXetHJEiXNXwU+8bL7fT6SZxW8yNlgbfuJ8qgCxyUTlgfmkG8VGL06WJDy
jfKpgu3ZhpXa+eRdBYrBRT42hZRXNeQ6/Tp96hf5V0NjbxiXW0b5VUPN2RGr
TCtpH6rBz9qg594ayrMaEt61blTW035Uw8a50bNNmynfarg0JCXxSBvtSzVk
lfdUFXVS3tVgnXTKx4YnZftTDXVGNsn3tKUs/2r4OndCdF+hlO1TNeyNeTbm
mK6UedSAsSpncbu+lHnUQHnfx908u0mZRw0Uzgn3Ku8pZR41ELKizcu5j5R5
1EC0x5IepcZS5lEDg3zu27sOkDKPGhB6TB7fMFjKPGrgxp5htw8MlzKPGuAr
6p7pj5IyjxrYJZ/oGDlWyjxqYOOfUTemTpAyjxowmVTt82GylHnUAG/WisLt
5lLmUQtZtyZ8MQAp86gFqUnH8oczpMyjFjomr12z5k8p86iFmKOmxQIbKfOo
BUlYeOXj+VLmUQv9d8702GorZR614Dj7jHN/eynzqAX9xoGKL8ulzKMW6uKe
Xb6wijxqofcH66xl68ijFnJ/Ht/aZyN51MI3yS2H/M3kUQeJl9eGxmwljzoI
ehw6cLcbedSBY7VTtY0nedRBip9Om7E3edTB+tBHFg27yaMOhs7wi1bsI486
MN6bCbEHyaMOkgaNrA46Qh51sCVxyiOPQPKoA12ZNMAhiDzq4Numz+usTpNH
HbzqEmI29jx51MGRBXubTMLIox4uXu0S1eUiedRD83GBGf8qedTDFt7485wo
8qgHbj/flNZb5FEPvGUXnjbfIY96mLDF06nlHnnUQ896o5T2BPKoh+3TX73n
PSWPeljwM8JZ/JI86uF1p3F4zzfkUa/+/zZ82eAU8qgHgQHv9MQ08miAxBkr
LOfIyKMBks4lrVytIo8GsAzZnb0jizwa4B+Dj7eDvpBHA3xInSS9/Y08GmBX
xY9x7/PJowFGlSxUlRSRRwNk7+17TVxGHg2g0q6PGFdJHg0QWRbxcHkteTRA
1LTKnwcayaMBlnbNMLnTSh4N8KAgeM2XTvJohK6BT0MEmhnMoxEKD+clT+Nn
MI9GWHQ0+us2cQbzaIRnO5TZV/UzmEcjvPUYGvO5WwbzaIR580ztuvTKYB6N
8CAxKnmeUQbzaISoIu82//4ZzKMRPhcerUoZnME8GiGwpyJM2zSDeTSC1ar1
dbNHZzCPRpgTLGoMHJ/BPJrA8PHgCPmkDObRBBcX9srrbp7BPJogKGbli9WQ
wTyawGe228gbVhnMowlSphQPq5mdwTyaYFB5650/5mUwjyZo+uPBo+OLMphH
E0y3HD0jd0kG82iCJ9Iz1qMcMphHEywt653muzqDeai/76Od+OGvDOahfr9Q
PGy4YwbzaIK2S7mdvlsymEczLL5uO+uTK3k0Q1CBbcM4T/Johj/sFPonvMmj
Gd4ukJ4u2UMezeBVcHT37P3k0QwTR055F3WYPJrhVpzD3zoB5NEMO812nnA+
QR7q7zcO1s44RR7NMLBCnD/uPHk0g0tlfb+QMPJoBmN356TOi+TRAiOnz0tz
iiSPFvBcdHrShxvk0QJvhqIAYsijBXSqtljFxJFHC4wx+6OodwJ5tEAnZ0Nt
4BPyaIHWrpkubS/IowWU+M8Stzfk0QKNy7NiClLIowVm+zzydkgnjxbYssrv
kUJOHi2Qby93tc4kjxYYV219OekTebTC5znRC+ArebRC75DXe5/nkUcrvLjn
Ocq8iDxaYcGXxA3PSsmjFfiHVAOmV5JHK7yyer0tsZY8WmGV/a7Zs5rIoxW6
39KIT28jj1bIcD4Yb8eVMY9WWNw2bd5XLRnzaIXDBSf3OwllzKMVnB/G2dVL
ZMyjDa4ZWKce6ipjHm1wPM0kr6uhjHm0Qcv5vleu95UxjzboOslaNLW/jHm0
wZBE1QDZYBnzaIOtqXdKN5rKmEcbNJYVb2wfLWMebcDnnDhzwUzGPNqgSE/+
t9kUGfNoA/172j2VFjLm0Qa/39/fvt1SxjzawO3cFH+DP2XMow32vU9c88BG
xjza4bjm+PrlC2XMox0eyMLnddrJmEc7mPe1cLyxXMY82sF5nJeV7WoZ82iH
W7kJhW1/yZhHO3T1Npl/21HGPNph/0iTXQ5bZcyjHd6tmucs3C5jHu3wVbHV
6MUO8miHVpnbOfdd5NEOsR9clEP3kUc7/Cldr/h+kDw6ILmyx8nQo+TRAUlL
tkjsj5NHB4xctc26yyny6IDKxrWgPEceHXC4V1zFqTDy6IA3443tl1wijw6A
nCRXw2vk0QFvL9yZ/O0meXTAzc89Y67fIY8OEO1yS3W9Tx7q+4JsA6Y+Io8O
yDnVo0zrOXl0QP1q218fEsmjE54csNgTmUwenbA6w/LijjTy6IRRGq1zZ8vJ
oxMu/xjn2yeTPDohMixufPUn8ugEU7dXa1O/kkcnDBpV3nE5nzw64XFhJX9P
MXl0gl/BvZ1Ly8mjE0rLZ1uaVZNHJzRDyV8GDeTRCe1GqYqqFvLgYGqpxE/Z
SfNwcMMnrZ3xmnLmw8HTu/v9c14gZ/NxsMKio2y3RM68OPhZ23nduq5yNi8H
SzuiKv80lDM/DkZG5QWPNpKz+TlYd9B6cs8BcubJwd1PJ+VyhspZHhwMeznc
q2yEnPly8IdtelPWWDnLh4O/8y6tTpooZ94cXLDAPDRumpzlxcE3MwdcuQhy
5s/BJk77lhMz5Sw/Dvb8eqF8r7Wc7QMHLwYU9Nm2QM7y5KD2gJyK1XZyth8c
BNeCFQuXy1m+HOy6yMbecrWc7QsHS8x9P5itl7O8OWiz0CB9yGY52x8O9n9y
d1xvFznLn4PBTwe267rL2T5xcMrDhgEaO+XMg4vaXRJCGnbLmQcXvxTrLSnz
JQ8uHgz5YPPjMHlw8en6Xx4fA8iDi1GixW/SgsiDi8WlojGJZ8iDiw3Ff95N
CCEPLpqXbZkaHUEeXGwf3Zh0+Sp5cFHIOzTr/A3y4OLFshcPjsWQBxe9Jzvx
D9wjDy7m3L02eedD8uDi3YtNU7c+Iw8uPvTr0F6XSB5cfFux6fySZPLgoiCh
9vucNPLgopfLgRwLOXlwMW7L2gNjM8mDi8f4PmkDP5MHFz2qC+72+EYeXByZ
HGcqKCAPLroHdJ3QWkweXGzxWphcXk4eXPSL0//0tZo8NPBU+FdHWQN5aGDE
CieXl63koYGbjz6tXspRMA8NvGWxbYNMQ8E8NPBhbaL/LC0F89BAuycL1j7X
UTAPDUxJMy0cL1QwDw38Eh1seEusYB4a2MZ73Wisp2AeGvi2TXTgrIGCeWhg
47x39wXdFMxDA2U6647t66FgHhooH/xAUGuoYB4a+Nkgd+TmPgrmoYF8h5ba
L0YK5qGB6zLN1yzop2AeGuiSnL3l9QAF89DAjtauvSYMVjAPDUysOeYUNVTB
PDTQ/0p/B0NTBfPQwENLkkoDRiqYhwZer91i1DpawTzU8481rt46TsE8NLB/
18pNuWYK5qHud+HQvfMmKZgHDzdut53wfIqCefDwlolW8AhzBfPgYeK64uNh
08mDhw2y26MFSB48XB+g5+U9gzx4WPOkYV3hTPLg4SDPbbWLZ5MHDy+c9BuV
aE0ePPSBdfqj5pEHDw+tHR0RuoA8eJi+f+xHLVvy4KH5hRdP3O3Ig4eb6qbP
+2pPHjzkNGkHzVlOHjz0XuWzP34FefDQVNZzsPFq8uChcfsaH/+15MHDoXsr
A2v+Ig8eHt/vuHDVRvLgocnMwdJkR/LgYfeP5zTGOJOHOh/XSXUXtpIHD2dc
Cb3KcSUP9fstjnrO28mDh87zZ1ooPchDE2dN22461Ys8NDF8eu+cy97koYk7
Lvov5O8mD01818cwwG0veWji4EzzgKx95KGJHkfcbKcfIA9NLOp1Oz/yEHlo
4uMxUdOFR8hDEyf9nrhhuz95aOLIRKslWYHkoYkWa1QGFifIQxNVJQ3hV4LJ
QxNb+81u0D5NHpr4w+GzkctZ8tDEIwOyuyrPk4cmtsQc+jQxlDw00bbY3CXs
H/LQxJ3rveQdEeShic7+1hobLpOHOg9Tiea7q+ShiWuX9sk0vU4e6vMCC9yD
bpCHJj4vqs2tvkUemvhNXNfNPoY8NPHpvbW9HseShxZuzEr+1fseeWih8d3T
B3ziyUMLB0jm539PIA8tNIs7L5jxmDy08MT4kQ2RT8lDC1+dfxul9YI8tPDT
sQm9Nr8iDy3ctqTWJvU1eWhh0s1TU4e/JQ8tfKx8mh+QQh5aeOvJhJmlqeSh
vm/Fx5U26eShhU/eJw+5nUEeWni/7OwVgYI8tDBs7c9UJxV5aKHtX26h7zLJ
Q/37eqH+kGzy0MLQideGH/5MHup+F7/Jz8shDy2UfBk5Gb6RhxZmesQOCP9B
HlroWzT8SlM+eWjh9C1hsUsKyUMLZwR3nR1XTB5a2PbsgKOolDy0cYl1N75j
OXlo45lrRUMSK8hDG0/6mr7sVU0e6vdmw9571JKHNi7O+MMqvZ48tPHq9fSh
A5vIQxtLfoS5724hD210MpzfR9lGHtrY7nLBZGgneWjjmkirXXu5SuahjYvm
jh2o5CmZhzbu4dsYDtZWMg/1+37D7P7mK5mHNsoCRsvShErmoY0t7R8O9dVV
Mg9tPPj6ius2PSXz0Mb7RWYBLwyUzEMbp+6aIhN3UzIPbRyonDZlZQ8l89DG
m0evvr5pqGQe2hi3tWxjfW8l89DGp1lX+loaKZnHv/1uKDhmomQe2qhv+jX+
Y38l89DGXuHP/I0HKZmHDk5pu7rKcYiSeehgse5y0zvDlMxDB7WOxJbXmCqZ
hw76Lg24OHmUknnooPT9l2l7xiiZhw7Wiy89fzFOyTx0sN+IEuNOMyXz0EHX
HpqrYZKSeejgrC82HvumKJmHDq7xGrLi+TTyUL8XS/SbLchDB3Oj/YInAHno
4G/ppExXS/LQQaOcgV9uWJGHup+ejhHfZ5GHuv+igb17zCEPHVzX9dS8uTbk
oYNusRVjfeeRhw72GHQl6d4C8tDBRy4HuQWLyEMHo/afKe5iRx46qBiV72Fp
Tx46KNkRcNl1GXnoYNDRe9vCHMhDB/tuich+u5I8+LhSKc79vZo8+PimjLOr
+zry4KMW+seYrycPPhpmv9yxbiN58PG8rUx+yJE8+KjhVPvsuhN58LE+IHty
yhby4KPlyP0zCl3Ig4+jKzVyNNzIg4/hKYc4Ju7kwcfO/hPvT/UkDz76azlU
LvYiDz4OfLz/0RZv8uDjgXVRwgO7yIOPFes+/zq3hzz4ePDelMW3fMhDfV7v
2j+f+ZIHH3/0mP0u/QB58LHW4fqHL4fIg4+3or+5/PIjDz66Z+ecqTtKHnwc
8/m8dWcAefDxsGmfYP5x8uDj9gS/TfpB5MHHkfFdZD1OkocAc2VWaX1Ok4cA
lxfcXmlyljwEKOeUH+p/njwE6BjxcuaAEPIQYNQ/vy/1DyMPAf4ZsfKCSTh5
CHDGoy6j+l4kDwH2GtF1Q8/L5CHA4S9czA2ukocAlRdmPhZcIw8Byhw/5nCi
yEOAOzW332y4QR4CLLHa06/sFnkI8C+r4X9+iyYPAX6YEttHcYc8BJh83z4y
8S55CLDh/cHvd++RhwC/Nt5VRcSThwBjbJ19AxPIQ32/wfdir0fkIcBjIhPJ
uifkIUA7k0V1c56RhwArT9wPH/uCPAQ499clQc9X5CHAx7ePTG9LJA8h+j9w
nvbjDXkI0bi+lJv0ljyE6LQm6dy1FPIQYvC7lMbDqeQhxBe1BcM3ppGHEFd6
DBw9Q0oeQjTfPU7bREYeQuxqrhvfIicPIR5Uvpr4UUkeQoy1dQ2O/UAeQtT5
5fD6yEfyEOLtJ9+lq7PJQ4iTdg6NN/tMHkK85+myg59DHkLcu02ln5tLHkL0
uRrqH/uNPISYr2+S6/uDPIT40z5XtCifPIQomTzd0OQneQgxNS6O87uQPIQY
uGbR2yfF5CHE8d0Xr/crIQ8hXvPlf1lYRh5C7Ne7wLTXb/IQYkvL6iV5FeQh
whiBsf3NKvIQ4b3UwSNca8hDhEsjgjLH15GHCEOtgxY21JOHCAWa3mGPG8lD
hKN+x8fvaiYPEeoY9Qud2koeIrzWLWF2Uxt5iHATz/N5Qgd5iLDE26vOnaNi
HiLsda62fKSGinmI8EQ2RBbxVMxDhOONnLpd0lIxDxGKjh+0WKqjYh4i5L4M
6ikWqJiHCPmWUVcShSrmIUKvkrYsT7GKeYjQ7t2P+MESFfNQ999+ckKWnop5
iPDReq8lfgYq5iHCbfueSMy6qpiHCG2HXFnzvZuKeYgw8rM/BPZQMQ8ROnwo
jDEzVDEPEc4pnHI1p5eKeYhRcnh774N9VMxDjIdTB+gPNVIxDzH6W7T6pBmr
mIcY71g/X+PST8U81O+d4I54gIp5iPHvlx4boweqmIcY37o175szWMU8xNjr
snFjwRAV8xDjsGR45zNMxTzEGLtBXtLdlDzEmLLC3iFmBHmIcbvSVd9yFHmI
8UHpVUHmaPIQ47LjFrBpLHmIcV90eHTdOPIQ4+iQydYHzchDjHobznWRTCQP
MQYU2mqETCIPMYq8JF37TSEPMf41dQVETSUPMe7PKj1gak4eYixyDvgYY0Ee
YjTyMJg46g/yEGNY5fZ/ooE8xMi/c403zJI8dDFG9NTp6gzy0MU7QZopvWeS
hy5e1a7qcWoWeeiia0jzUq3Z5KGLY+vvHvCeQx66ePHp/dPF1uShi+vNE/3s
55KHLn435i17PY881Pf5STVGLCAPXZxusc/v9ELy0MWZ/GM5jYvIQxffXNjJ
XbmYPHTRLTy/9pkdeejiH751d3vbk4curgrsZua9lDx08XbQs93KZeShizlj
PA8PdyAPXfQq/jjfdwV56GIV93ymaiV56OI2bnGPQavJQxdf+Wzo6rmGPHSR
k/U49dVa8tDF54euTxT+RR7q349rXr54PXno4vAr58eFbCAPCd6PT32Zs5E8
JLh82RqOkSN5SLA2HBpWbiYPCT5Z63g5xIk8JNji+q1D5UweEry4P9lAtJU8
JHg72fczupCHBB2bW5fu2EYeEoz/bnPsuit5SDDV4KR3pht5SNDNXMOI604e
EpzZXLp3hAd5SNCq+mWInSd5SLDyvZPHrh3kIcEZM5tFEV7kIcG7wnObX+4k
Dwk+QK+jX73JQ4KbvYq3tfxNHur+DJYadd9NHhK067s3ZNQe8pDgNvcx+VZ7
yUOC3voO7ct8yEOCpjpN5c77yEOCq3f1f7DLlzwkWOylsfTofvLQw8m5jR9P
HyAPPdxqvWxy+EHy0MOOjwd8Ig+Rhx5qL6yKvnmYPPTw/RKzlGg/8tDDT4Nq
5TFHyEMPD0kapNFHyUMP53zKSLzpTx56qPOmPTYygDz0UL5swD/hgeShh2tu
VvufOUYeeri4r/le/+PkoYcTnIr+3nOCPPSwtvfRgy5B5KGHBZZbw1cGk4ce
9vjZ/H7OSfJQ96ObIJlwijz0UPflVFej0+Shh543xpZrniEPPbyz4OWx0jPk
oYcPw4sXys6Shx6mRajM486Rhx5qBMQvPnmePPSw1X3ZBdcL5KGHw36tFc8N
IQ99/Lkk8MHgUBX8H3IH4wE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
wo88dHDo2o0/cn3JQwd1/xj0rjpFHjr4IFnioulNHjp47qU0s9cx8tDBs7m2
m8cfIQ8d9MozNl96iDx00MUauxw4QB46uMs9b8q1PeShg+6hUyMSd5CHap7I
2B2/t5KHLvLqgjyNnclDF69OPVQxZwN56KLru5rXR9eQhy6mL8mpj11FHroY
YTk0qHY5eejitT7tcWOWkIcunrW9ueyAPXno4oHZunvj55KHLk4yW9Zdy5Y8
dLFNGDNj8Qzy0MWinb5ad5E8dHFRi/PqRmvy0MUHa1YtsrciD10MHPW1KHQc
eeiiwfwhvXTHkIcuLhSkNG4fQR66mLl6nkf6EPLQxef2p59PsSAPVe03IDCs
P3no4uPAXqP7mJGHLioLf3kE9CYPXUzpHHeCb0weuqhhmganupOHLr6Qxr/g
dSUPXXRe2vHLV0gefLS4PTfbkE8efLyR7OJzi0sefNzxcFb1SE3y4CP3UJ1R
Moc8+HjeL6p1ZbuYefAxM7zkZl2zmHmoPr+yW2tAg5h58PHwxDOG42rFzIOP
zpvCSrMrxcyDjy1HOvZ6lYuZBx/VP46JGf1LzDz4eOSo6ZOCYjHz4CMvZ/TK
qwVi5sHHLoqgF/Z5YubBx7iE40n8b2LmwcczDwe4ib+KmQcfvX1+Z5/PFDMP
Ps5v3lCwLE3MPPhY3JVz3kwuZh58jI8Zm10hFjMP1X2505ITU8XMg486Iq+Z
Vz6ImQcfY/oeXb0rScw8+CjcI+POeytmHnw8amA6bViCmHkIMELiqmXwSsw8
BLgmKmxhY4yYeQgQ1t0yLXguZh4CfP1u1TZFhJh5CDCzX/OYpHDyUL33erYn
9jF5CNB49Y7+zx6QhwBdFjVPD79LHgJ0NJoiD7tFHgJ8cmL8u6dB5CHALXFN
3WOuk4cAT0rDPr25Sh4C3N9ly1fxJfIQ4JuBi6d+8ycP1Tw/Uxsrz5OHAB+t
m6DG9SUPAap1M1lhfpo8BLguub1+6knyEGDw1QPZa0+QhwC7712m5uVJHgLc
2pa+JewIeQjw1Nnx/M9u5CHAtCjZTw1X8hBg8rCW9rEHyEOAvdaZ2W7dSx56
uNqw8/2tXeShhzVLmvbmbCcPPZyn9Fpo7EIeejjXfJDTqi3koYehr50vBW8i
Dz1cNyirsXg9eeih4MtK71FryUMPB6Q+tPZwIg89vLEiso98JXnoYeDxbZb9
V5CH6n5aaU5uS8lDD++WlcRlLCIPPTQVZ9uMsScPPTzIyaoPmEceeihU25bZ
YEceephd07dw9Wzy0MMqpa9Z6gzy0MPHveddGGdDHnqotkh/9AMgD9XPm/3N
M5lCHnpY7+HR038SeeihkfT4Jv5E8tDDjrthlafGkYcezrk57rXOX+Shh08D
tyjOjSIPIe6zHTa8+wjyEOLkHkO/hgwlDyGiU+/PwweThxCVdolD3w4iDyE6
inO/LxlAHkL0nzq7+rc5eQhxQOeQbT59yUOIV+8eXDSoD3kI0eP+uNBUE/JQ
9ddzdd/ZkzyEeMbNSWzUgzyEuDpI99b7buQhxDdHczr3dyEPIVY/T6i21CcP
IfZvjz78Q0AeQuQkfn14Q5c8hLg9eo7bKh55CDHj5OTW3trkoepX2DC6UIM8
hJj4w2zQEzXyEGJMs2OeW6eIeQjR9/KKzfPaRcxDiDbyzLfmrSLmIUTZhLCG
liYR8xDi9B3vunxtEDEPfQzZMsz4VZ2IeejjEFmSYXCNiHno477ljgKfKhHz
0MdjgiLu/goR89DH7Ckb9DeXi5iHPuqVVg9ZVSZiHvq4oePDhiU/RcxDH59u
PP9mYYmIeehj9/WKmYuLRMxDH1f0H85xKBAxD30Exfr69T9EzEMftwtnD9+d
K2Ie+pgqEUUc/yZiHvpoHj/S61q2iHno48zNEyKjv4qYhz663kqckvFZxDz0
8cYx0aimDBHz0Efnrvv9zdJFzEMfv0wocJ6vFDEPfbSrWxDrIRcxD30sSoo9
FS0lD32c7jgrv0JMHvpYEjXq43AReeijtbgd9qSShz52iyhd+CqFPAxwoMG8
Tq0PIvg/dJv76g==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
d9G1lg9pafB/D43tHw==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.2021946570752217}, 
     PlotRange -> {{0, 4.}, {0.2065410850454071, 0.29346964444911666`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0, 0.2021946570752217}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 4.}, {0.2065410850454071, 0.29346964444911666`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{{3.759449718739727*^9, 3.759449738121809*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", "\[Rule]", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["InterpolatingFunction", "SummaryHead"], 
         "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{Typeset`open$$ = False}, 
         PanelBox[
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{
                   GrayLevel[0.6], 
                   AbsolutePointSize[5], 
                   PointBox[{1, 1}], 
                   PointBox[{2, 4}], 
                   PointBox[{3, 2}], 
                   PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                 False, Background -> GrayLevel[0.93], Frame -> True, 
                 FrameStyle -> Directive[
                   GrayLevel[0.7], 
                   Thickness[Tiny]], FrameTicks -> None, 
                 ImageSize -> {Automatic, 
                   Dynamic[
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "4.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "20", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
          Baseline], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("InterpolatingFunction[{{0., 4.}}, <>]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.759449718754326*^9, 3.759449738147581*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adiabatic evolution", "Subsection",
 CellChangeTimes->{{3.759455983615965*^9, 3.759455986609066*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimulationTime", "=", 
   RowBox[{"2", "\[Pi]", 
    SqrtBox[
     RowBox[{"40", "*", "45"}]]}]}], ";", 
  RowBox[{"NumofIons", "=", "2"}], ";", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"2", "*", "40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", " ", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"vi", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vf", "=", "5"}], ";", 
  RowBox[{"Hamcar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"adag", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Eta]", " ", "a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"\[Eta]", " ", 
              RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}]}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "/.", "SecondRotation"}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"vf", "+", "vi"}], "SimulationTime"]}], "t"}], "+", "vi"}], 
      "]"}], "Hamcar"}], ",", "True"}], "]"}], ";", 
  RowBox[{"AdiabaticEvolution", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataYRep", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{
           RowBox[{"SpinRotation", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "]"}], ".", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
            "]"}]}], "]"}], ",", "i", ",", "MaxPhononNumber"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataYRep", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", "\"\<00\>\""}],
       "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"ReducedSpinDensityMatrix", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], "/.", "AdiabaticEvolution"}], 
              "]"}], ",", "MaxPhononNumber"}], "]"}], ",", "2"}], "]"}], 
         "]"}], "//", "Chop"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "300"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.759456009513036*^9, {3.7594566466141853`*^9, 3.759456662490911*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
sA3OVjmOELck7+z1WC7WH47gdp+a87ueixpHvDZN1jlCnpbhyz2E/pjTI45w
q7DaIJioh0e9r/JdHHUEZkGY8+KfPL/jCM0PztuYOnHQtleDXYZiTrC1+0xR
VDYb6xUnGGQKcD5Ed6CxfbJlo/pOUKNY+KRrPgvrFycAi5Gz09cZqIzlE5dF
dgK+u+v+CBH+e07POMGd6oYo2y4aIplft9XOcQJPZ78vU8dpWN84QXVXcdCu
QmJ/n79T6K9zAp0f177+W0bHescJLk//eOv/no56dspPJ446QaThA4/Tq5lY
/zjB7JOrjraOLHTugS9LRcwZvGNSy2ZbOrAecobIUKVztbfYaPeWm9c4+s6w
uejDpxCiP83pI2d4Kfpph+5rDhIoGz4UQ3aG7x8VZEKduVgvOUPXn6UJzy4T
+yu7cbd0jjOICbcEcpp5/s4Z2Oul04uI/nP0kr80tc4Z9nzplvRI5+kpZ7gy
7fNhy3Yu2iZeMhEy6gzLWKs/7ybq75y+coYpkdI7y7dx0FjWSKuYmAvQM6tF
NhL+bU5vucBvy4uvvwx0oNLFSpdq9V3AkNkgZlvDwvrLBcJvWswPzmEin0Ry
hDfZBVzKCzszohlYj7nAZmbWWA+hhyX/lRoL5rhA5g3F1+xFdKzPXECka+/W
S/k09OLQxzV361xgXmXxg7hIGtZrLpAvYvBA9zQNnftP+avDqAsopJLtyj/x
/CkxH+sHtVFEf9wdFNT0V3Q/fNCwanmnxsB6bj/sXFN9W16NiQTe3869rr8f
/Ows8hiKLKzv9sOtzN67ohodqMH9c6AleT94Fycki2uxsd7bD4X1fC6iRL85
0qNq8D17P1jmBbW91eJg/bcfxq6d9417yEGatiGiBXX7YUd7lHDoKi7Wg8T7
yyvGk7y46Cut4oPB6H7QbLBm3i3m6cP9kCN6Oeg+kS+lxl9rh0VdQUiWqfqU
0HNzetEVRsgC19Y84CKferWsDH1XyAmOZo5l8niPKwQP9B4f3M9FkjvCSJpk
V9iQuOdWyCIu1pOucKs5RO8HoQdf3Kvc3pftCsNCkWQtGw7Wl65gSjoh6dDN
RmdVvwkl1LmCOLX3905vNtabrnBQ5KfAja8dyPLmlgHFUVcol7RV/vmJhfWn
Kyw8lVKzegkLLZCOuM8SdYPwi1Njh/cysR51g+iZbNXEWAZqKKhKjdZ3g4ON
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
D1QN4sA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
7/8BATD24Q==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1:eJw9mnk8VN//x1sIn0oiSpJCkaIsLYjzln3Lln1fZ4ydtMhSUWlDJC2UFlsq
Zakoog0zzHLHHoUkVCpaKPK734czv/7pMY8zc++5576X1+v5ttYnzNZ/3pw5
c9bOnzPnf//z/tn6aV2fU08g0Z6da2h2rehwu+S7wSQW/vwBba9Zv1MrkY6u
mLtukZn+ioTzf42ofGDj9Z/o1l2JoTA/Ajkssyg0KPyDKO4pugcWNuHvz6BB
068udyyaUbje1u6pwnmgPFrxtLSGdz9+8NteVz34iYnKDxj4tU8LwDnxInlt
GgNf7z94a4OEeg4QaKLE7vMD28VwM+Ti0J9uFr7+EqgUK9HftJuBrkapar22
Wwq+pt7GwmkEvp8oWH3bubK7kon0lmjGq/8TA697DfevJjXh+4sDxXUu/0Y6
gd7fhue5hRKwjs/wP8q8Jryf5bDmbkOG/jw2OmZkskDYThIs/vvpebqHg/e3
EgaGT96o8qcjhX4rs0PTUgCdu+fa+fL2Kw3MjmjFuS+aET3OMWWoYDWc/rPY
Nu4zE+9fBkxd+3+zOzno4ZnNw0pFa+DKUEOsSB0dP89acN33IGbLMwKdcFE/
7f1vLQTEJfduDmDg55OFRwsK5n46ykFOituVL9rJgZLFtQMnB3jPKwf+A+c9
klRYaMMvLRazUB4kr8ZGv9jMwc+/DjYfvSD3Y3cT+vNCN4L/3zp4pX0nK86M
dx7rwWn06Gt4R0eMc7vEdtopQD3fLxWn+wQ+HwWQKkiUbgmioxxPo4rIQkVo
33+ide1LAp/XBjDLFfG8HEFHocpmjkXTG0B+Datg5jkvXpRgaNOK1JZYOkJ/
LSff2W6Ez+f+LhB7TeDz3Ai//sj9SoymI5FGmysShZvATTF7xLWed77K8Ft0
777h43TUd8Fex3JaGSpS+llq+QQ+bxVg7qwZb9rIQKV+zu8SbTdDoXFBibA0
gc9/M8CYmuXMkya069I96LHbAjmJDwfRDzZ+H1tg3N3cSLuYhZQO3z934N8W
2CCUbXHgFhO/H1W4OKdCveUqB4lRSvvFilQh37VIBFwZ+H2pQnXqSpPRSoJ8
vHL1Ejs1aONePx95jY7fnxr0xgajMlECDWg8TDL7pwa/X2wZffmxGb9PdYi5
PtYxZxULNUk9bv1QqA6vXsbXbK/l4PerDr9HPyVQaumoYl7V+iN2GuD9YG9J
zT0Cv28N2BgumHwnrgldHX6yf9U/DbDOlt02Kc/L360Q09lp63Gdg46zqxse
FW4Fxf/ypwZS6DgetsLFd/p5f5MJFPbomaSd3Taw27JtInKyGcfHNkhPD9u5
bLgZOV6to41ObwPli/mJl04TOF62Q6v71vex7XQEx148OVm4HS6PWORLjLBx
/GyHRqN1B5TdOEgx+NWidXY7YGStA83sMC+edkD2/L/Ldi8i0FK7evfa6R1Q
Pv+ojMFmXj5qwtOfp0716jHQpGbjPddCTVggkyEodJTA8aYJhzs3HdARYqH+
NYyZX7ZakPBX7nl0M6++aMHtne5VvtfJ/Qo0W6dPa8HzrRpnHjYzcTxqg9DS
8/UqFQxUNsq8rlyoDeXXWK/c0njxqQ3N5RkxBVkslN3KHmuw3QlbbWVamUsY
OF53Qk3O3/mWGgRKekro+03vBC6wY/eXsHH86sDwwKmNgiF0FHKz5fxMgQ50
xAp/Sjfk4HjWgX8rrG5pvucg+1NtHy7b6oJG84O7gl/oOL51YUw8g8GvxUK6
ER3btk3rQrfEwZ/CZL2YjXcE38rS4tVfN6P1Tl0nOAUIzI06nC+fZeD4RzCR
mxyxeBNZX2RCg7dtAPDpWSxhZ8LB+QAwMSZ29HEuHU2Jfl2WFA+gOxlTZH+Q
hfMD4OL8d6sfkfkeviC8msMFUFTJ71w0xcT5AuD6mu4NZHwOTH7zl9mgB99k
pI9kSnJw/ujBm+6x2kWRBHL+EiEcEq8Hw7u+5/792ITzSQ/+E+rjFz3FQM29
Yw+ruHpgmxAwoFPCwfmlB61aKytfryKQXkuUp+CGXWDfsnQfX1ATzrddcMkt
o5T/LgNV1P8QcIjfBTPP5j97/5SD828XyE+nWIXpEEjpSfT9m9xdoLpne+Nn
/macj7sgJd+y8ccasr/c++X0XVEf2sTqMgcUefVWHyKs8iSi88h+dmP/XBSv
D9JC6x2nG5g4X/Vhe/r3ZZZkfTyROVF0hkv+fkNvds0NFs5ffSi+3qd45ilZ
H5IP2nYpGoD4gr7T5wU4OJ8NoPB747cUSwYKi/3zRyHeAKR1zu6YVmjC+W0A
wjcf6h64xEHvww7djOYaQFLkwfaeSwTOdwOw8tV+mbmdhZx8p8xfKBrCjFhT
yz1yP7P5bwjfL/b2mpH1pskh7odIvCGU3udKzNtK4HpgCMvzSv7p6REIzP5l
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
MLwQ7v/QSueilyFrYyWTg6Gsd6n8CVLfz/LWYBh+bPfrZhcXXb+tNxicEwy1
v/X755N6fJa/BkPaiWOfrv3moviP3ta1pcGQ0bBEUpDUz7M8NhiKdxQ28pm2
IDf5o1ViDcGw9sBr2wfbWzCfJT9L/6k3t29Bmt435Ck9wUBP7w6oOdGCeW0w
LOX3XZi7vwVJXH2eUjUWDL/rVD+6pLdgfkten5o2KPW6BY139U8sFgyBhxsS
r9k/asE8NwS+JmwbW8dqQezl8329pUPgNO3xo0V8rZjvhoCvv6zus18t6O4e
ueZytRC4Qpv/OHdhK+a9ISCev2hnol4rOnVOf7ugSQic/evl2LS1FfPfEBjq
PPK11rgVUZi+113dQ2DyNd0+Kr4V8+AQeLz90vqQva3IYGHSwpJIcj+NPx7H
JrZiPhwCUoJHx9hVrWitya3oeckh8E904Y5zpa2YF4dA37UXso01rehf0st3
9jkhkFghX5DyqxXz4xDQeHZEeP23VvSmbsC0qDQE1E+H116cbMU8OQSizs9E
ZKu2ocf/+Mqn6kNgx0DBmLhyG+bLIWD1zC6uS70NZWqvW23dEwKiqssfDga1
Yd4cAmrNU/zGgW0o8oBh8s2xELgb96TsQEgb5s8hwMc/dsQ+rw1ZV/iP/RII
hTvPB4ou32rDPDoUxr6+veSU34aUx465mUmHwsovxQpNPW2YT4eCnzUy+vK2
Df23Of91jloolByOEXIhP8/y6lAg1PmUNoi3o49Br7d8NybXp5X2Sqxox/w6
FGwXteY6kusvCwcvG7iHwk8UfMjIvB3z7FBYvKQraNiqHV3/sID/YmQoPDTq
U1Eg12f5diiMrn3M9yehHcXLKoR9OhEK4qM51VuPt2PeHQpPhne7XibXXT2N
O3VzQoHcpb9EWTvm36FgfMZWr6GqHe3Ipuinl5K/v+x+LaG0HfPwUEhKmeoP
GmhH4p0n7n6oDyX9atWG4C/tmI+Hwv7Dm5xvvm9HY+KFyzV7QuFBzH9hjWId
mJeHAjuuS/GzdAdi2TYcOTMWCl9dOkbZoh2Yn5PP2zpcOg0d6E7q0Kd3AmEg
oHn5kphFB+bpYXC4nfjORR3oZJOgg7p0GETfTVneEdSB+XoYCFGKL5fs70AU
oQ21x9XC4B9//7aDtA7M28PAuP3Q8w3nO5CBkalSl3EYvJXrmZ+W24H5exjE
a5iyU9M70NrEwPPK7mGgqMxIel3ZgXl8GAiKUaySX3egf89O/jscGQY+MaNz
Rx51YD4fBtSz/jXHujvQm6kiasuJMHh9/nJk+HAH5vVhIO4sq+3R1YEea9IJ
hZwwuNgtqqc/1YH5fRh0mB0sWCfUiTL3jew8VBoGP+rtxusnOzDPDwMRcd3V
vSs6UWTZfwXM+jBIv6WveHpdJ+b7YfAu+ly0oEQnsvqmtFS2JwzOSu3111fr
xLw/DG5vSHtzSrcTbVI2PxQ9FgZvFpRkCWzuxPyfPI/4wVYXk07EX1EROTA/
HC6s6R0U39OJ5wHh8OHlJ7tyg04UxX2lkCIcDnpBA1FSrp14PhAO2fN/rVwX
0In6v7d2b5cMB1ndNlV+x048LwiHmPGZsSO0TmQtMniuTy4cNP/u1Kzc24nn
B+FwZZ3H6Qn/TvRM5ZfRaZVweJF6bSB9XyeeJ4SDQd+7ia6ETqRsuWBKQzMc
hP+UJJ+P6MTzhXDY1NZzxYVczw6SePBWPxyYqUOVl0904nlDOOTLXX04eLAT
/XdqfUDy7nA4rfI9+3NSJ54/hIP+8Pa2JWc60cHCbVJqzuGwGhZpzSevNzuP
CAdVd+K2D3m9j6+N2G98wyGvhZPieLYTzyfCwYateWP+kU7k8MHh2LHQcEhj
/9r35ngnnleEQ0C1en7G6U70cj5Fa/PBcChSXkrjP9yJ5xfhsFLbduZAYidS
l93/tSMxHLIiXtwfIn8/O88Ih4HJhdqKsZ3oBpy4dTQlHJrCqRUecZ14vhEO
d1MFd8aS+xXxzHLedCkcHvfES52J7sTzDvK8gpLSS8jzTogrEG67SX7fJPdL
JLk+O/8Ih4OJgfesgjvR/wEb1g7+
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.39925183245879686`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.39925183245879686`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.759456017718647*^9, {3.759456670575808*^9, 3.7594566824409924`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJw1mXk4lN8bxhFR2iwtyhIpUiRbiM6j7Ev2fd/HvkVKRFTaQ1q+IZKipLKk
EqlkmRljZuzLmEGiTUUplfze3+Xwj+u93pnznjnvee7nvj9H2ifCxp+Hi4tL
ehEX1///L/xZpOdU7P7dhoRZOhuDbTuR8y2xJ41BZHw9ilxmD3o3RdPRdTNX
ZanZL8gwKr67+CoT3/+BbI6zLGWUWpGDqHmxfvFv9OBEh7Ldbwr+/ByKrLqb
9S+QiSL11Af+FvOAgmqW94EAOv4+H9iLvikZuUZGlfH6ft2z/OC7k3PqRQ4D
j7cUxmc23ZDXZaBfD2w/PbJZDqw1rBqXYDIefyVEtCsyniQxUF7MTu1GWyG4
f4/V4SrKwM8Thr3pdk3dJ8lIb6VWkuo/EfA3fv+kcdPC/FfDu+Ut1e9ftqGR
u/Aqv3gNtHxKD1rLS8XzWQt908u3lL5gouOGxotX2IpB7KTShfUDFDy/9aBj
wqU+a0tHcsOWpgmzGyB+6qraef+F+UrAId2o5VbTZEROdDw/fkcS0twiim5W
M/H8pcCjm3ubRicFPT67471CyUbgPjJAGxyn498jDf3+Rc+8Y+nopIvqGe9/
0vDxldFwVxsV/z4ZsNofZiJtyURO8rsUr9pugmkBa5ueEwu/dxP450fnqD9h
oq3T2m20YlkIvnHXxpeXgn//ZtDXLZ+hCjHR79d7ovj+bYYsAfvcb2QqXo8t
IDp57VC2LANRMvaK6NjKgdEy/73vLtLw+siB19ILH6X301Gup2FVdLE8mMUW
R71obcPrtRVeWLyQv1zZhsIVTR1LZreCcEtW4wNDOl4/BfigsEhvaXobQn8s
Ztg228DqrZD7Fq2F9dwGU15HRhr729CqFuvra4q3Q9yOA6nWV9rw+ipCYmtG
JCWZjoYu2+tazCrCrBhHs3ovDa+3EiQu0r495cFA5X7O7FSbHbA6cNmJxX5U
vP47YO6O44l2HSbae60MWLbKsHrdFusJOhm/D2VQOKdwsOkVEykkP8yI/6cM
WVUq5jX3yfj97ISvY6NLb+9hIpHA8mGRkp3gxT16uYGrFb+vneAjZdowkkQn
fl6l6gNbFZDd0tcsVEvH708FdgTy5+hbUNFbtcdppv9UIGSqr/JO1sL7VIUS
mXaldwfJiLrhSedosSpw1Wb85d3KxO9XFTqdtv0S3EZDVTzPtqTYqsGa4zLx
jmdo+H2rAe811d8askyU977moPg/NVA50vysP26hvtXheeAe8rXdTHSCXttc
XawOZ3OqeX6epOH9oA6r/sXbX7jbiiKqX4jZ2mrAT/WNL/SI+c3vDw1otglr
E39HRo55L4MnZjXg1Y1uWfe1C/tlF+SKfFysuYGB4PjrmlPFu4Blx/l6oWGh
3ndBlprSD4UQJpIPfbNss60msX5aOukybXg/acKaa5Jm13ZRkZBtk3v9rCZY
Gv6ncKZpoR61wMBlcPa0Riua0Wopcy3WAr77Gv2Rt1vxftMC8wmJ9bfqmGh4
I2Vu2kYbGi6Rik57U/H+04ZXj8e8VAxpiMLfapU5qw1LeOTtxh4z8X7cDbHG
Jdp8wVRUMUErUCzeDe0Jvw9bjLbi/bkboi6Wboh4zUQ5nfTJZhsdUF2+7Mt5
21a8X3VAsrxjMuIOFaU9Z+7zm9WBK3ccZ0fuM/H+1QXBwugSPfs2FFbYcWnu
ji7ks1XL0iUoeD/rgvJK3n0ZfExkf7pr9D+bPUD5tyrXfTsD7+89YHYv7V96
BhntierR0JjdAz+0+z0zguh4vyP47BBuuOMcE21x6jvJuIOAUbAl6GL5wv5H
8DWoXJs/iYpOSoWHamwFoKptsNgbv1APAPzps79uMujor/AX0bQkAGuFSL8N
RxfqA2Bkd5tzgjixnxdH1jLaAUIdjzWsr1+oF4APFtQnYtY09Hbmq7/UVj2I
3/tlVIe1UD96wERDsrMODOT8OWpFWJIelGd7jrXbLtSTHpSdeVyk9IyKWjmT
j5+168H1/MJnVdcouL70gL+2d21fOwPpdcR4CmzdCzNWxxOdpJi43vYC7ex2
s3MHqKiq6Tu/Q9JeUFtWERb2hILrby/I/goM+HqXgRRqYh8Wtu+Fki23s485
MHE97oWjJ8QsHqq1oryyaadv8vvA1+aC/R5uCq7PfcDimN0PHyL62c2D3Chp
H3BlJ3QVVDBxve6DdRvV1cQPtqGT2b9KzrbvA/H2CeN/yQv6vA9six6U6o3R
0J/0QzZ98vpwvqGorjODietZH74W8pEYKQwUceT3b7kkfXi2NHBu7x8Krm99
0NtW7TQQS0EjEQmFse368EHMxEjzBx3Xuz4k95Isb7wk9MT3r9lreQP4sOOP
joD1Qv81gN0zw7f9PxP64pD4fVWSAVzZMGwWcomK9cAAJLmTEl3ziPo1/Zfj
0W4A0fdoeg9LFvqFAXTNnI/cwUVHlbpHDUrlDeF9ysF7Fq/IWC8MITbBrG4i
moq27uSamEk0BOtDpfKb4xlYPwxB1dypW4Woz1zZlMtG7YbgmXnlacYlOtYT
QxjeoO7i5kZBQut4ULa8EZhkXKescqJgfTGC3t8Cpm0H6eiEYOrYcKIR2H9Z
832qion1xgiWKfFFuL1goN//Fl1UbjcCy/GOU+crW7H+GAH30T2zsgFkFD6Z
ppkkbwwDdrRr9AOtWI+MwTT7+NS6LAYaHuUboiQawx+734sPEes5r0/GMP3r
E1VrCQM59p44JdZuDE3BdeEzmQt6ZQwMy3QK4wgZUaj8KoHyJlCzeM4+g5uG
9csEJGMLS4NvMRCqT++rTDQB8uupT0VE/czrmQl4jNdnDyIGqqxYksrTbgLF
X87W/tJb0DcT4KLENJbEkpH8ndPbrORNoZAcVd9TQcV6ZwqvfhjwhhP1m/Of
YEduoim010TrH89nYv0zhbWmEaWCKky06vzZIx+ZpsD6Y3z6xVQb1kNTsLyZ
IExPpqDjKcs3a8mbwc6kzdXOL8hYH82gUv/mr2O/CP09cL71RKIZ7H5j8/Gb
NwPrpRlkilv2Dj5nojDSyrgOphmcY40ZfljBxPppBkM5Od9Tn7ehIdeLkjLy
5mD6QXEJ72UK1lNz6Mr4dj3iChk5WAo1RSSag/mGJQXXVRf01Rw0bzRXPmLT
EXlvZkQt0xwU2SxxoeNMrLfmsMTqyI1CQv/2aIisE5S3gJU3T1xzJvzVvP5a
QGXiFqFzma2oYuuleqdEC7C/63tCg9i/83psAV51flmLNlCQnMTqoNtMC7gV
Mqf9FWhYny3gy/7n67N1GOj6qstC3+X2g/Q5nRKNWwt6vR/Wvn/38soJJlrJ
u/aZXuJ+MDa8K2u+fEG/94PcwJ80LWI/pP284nOBuR8Mp9s/ZIhRsJ7vh2IZ
75N5uWT068M6QZacJSTZ6V9q/ULF+m4Js4ZL5jod6Sh08FqFQqIlaO0pfVG8
akHvLeFCZXCbCdEvhxjr3eKZlhDVXR03prjgPy3h2eRbt+hcOro7bMEzImIF
28TcW6ITWnE/sAJ7NlWLPENG/m7nu07tsQIZF4cdqy+RcX+wAsOoazPHLlOR
VBftrnKQFdwM+0H6OtGG+4UVfHtUdzmniIF6LVce7c6ygrSnN0xq7jFx/7CC
po6gTcdzmCirxdI2qc4KEke2XKRdZuB+YgWqjv3daT1tyGLfRbnN761gKLm0
s+kxFfcXK5DOemacVEdG/LX0PxQRa2h2K21uLCPjfmMNHtNrdBYdo6KXGkL0
6D3WsOjjqEtdYhvuP9awoyrj/Xt3Bjry0PqWWJA1DN1sF+M5wMT9yBqeJPio
W7xhIg2FzPj6LGs4vDl+xFxtoT9ZQza1J/PbXzr6Wsg0D6yzBvGEjqizf2i4
X1lDpLBbNWs7Fd2VEJFe8d4acq6fVxotIuP+ZQ2P0pr1Au+Skd8V2x+VIjZw
7capA6cNqbif2UD9vtb8uS4akhS61OK6xwaev/cdEWMu+Ekb2MYVXfhoJRP1
nO7I5QmygbnFHQNNhH+Z73c20Dmwss+J6EdZvKujS7JsoNj2sOC52YV8ZAOt
E9fdzQl9sEiyN7Sqs4Ela9Pe3Z2h4X5oA0+pr74PRlIR/6/s9T/HbeBYcUWr
11sy7o820FwVx+NzioxeRnVN5IrYQsG4QXlSNAX3S1vwvHR1XZVdK0r4uOa1
/h5buFDuJeX8oA33T1vof1OHYjYykLq/45WPJFuQ0WJL/JBm4n5qC3vXdieT
ifl/GbwSkpllC7FpK//ceb3QX21B2qYp2saIiUqcepBWnS3sli3QuRvIwP3W
Fsgj8Zka6nTkx1wnyhm3hcAPQmeEVtBw/7WFx46Jvx4qUpGkufP4CRE7SDC6
8UX1PRn3YztQDjy9qTKPjHreXHuuuMcOUMISkNlFwf2ZuJ4x/OpWSkWZqO9i
B8kOSCUnl+2/Q8P92g7Ob7qmke9OR+ZP1/snZNnBobJFPA/DGbh/28EbY12H
T3pMtFjVVUumzg4kIngyi4i8Nt/P7UD+YdNUNp2J6kuvL28Zt4NRn3fW/kcW
/Lwd3HLLmy7qY6CELQNDESL28LH0fuziT3Tc7+3hqG2G8MumNqSeL/54zR57
KEpdvZ820Yr7vz3szv2rt2wfFX0Rcz9dS7KHpWIGsl5bKNgP2MMrKRVOajUZ
lWTlevhlEeNbliavJvzCvD+whxl10btyFAryXT6oIlhnD8N+bGsNoVbsF+yh
SzCkU7aVhiROSvKXj9vDy78lLRIudOwf7EH8R8Hgp50M1M3l2e8k4gD1NwW3
Gv5hYD/hAPfVtTOHCf3OPHzjwZyuA/TfNSkV7WBif+EALK0KsZFOJjL/zk69
TXIA+1UuoTWnmdhvOMD1hrkzj5cR6xu+0ckiywFWpNM3d9ov+A/i874R+usT
6ah+zGv791oH0JdxrpYPbMN+xAGep2qHfWltRYe9C7iujzvA0piGtsNBVOxP
HMDAYTtZ9AgFqfUPdeiJOELVrkKBtlEy9iuOwNrbucetiYwm7GRKxnUdwfTs
kop96xb8iyNkHK0OfdRNQSU0n8QLJEewqObPc+BuxX7GETT8M1deNaIhX+NC
a40sYnzeqtV2LW3Y3zjC0aLKUMlKOpJ4NbKZVesINzqOaFp5L/gdR/gQ43I1
l5uJunfL/k4dd4TtITNhCWlM7H8cYfjp2wO3aUyUUeVHUxBxgpO/pn2eTTCx
H3KCo3KWy137mchsR9FNhq4TOLYLcs/kLeQ1JyhSuHHkmyYT8ZWMxsWTnOBF
QPI22zsLfskJNhVoHNktzED1MlvMpLKcgKvvtc7J4AVe4AS6qccrH/u2ocM5
AVKNtU6QfulGz6MdNOynnOCnwI+SwytbkdqaO1Oh406QuN7EPm3Jgr9yAsu8
8vEvHhQ0cWGsSUTEGTyG3A0mvyz4LWe4mzqib0Osf/ES+Zxnus6gzSm+7PGR
jP2XM5j8PVtwzIaCfFJJkd4kZ1Bu1CM9X07FfswZdt1MSGsYpSLx2WJ9gSxn
8Boruf9vbCFvOsNvFZfNrxXaUFfc+3UPap0h5OO/lUXydOzXnGHl4py5iRo6
yvi69bP9uDPwcIVsynNhYP/mDF8q6k9u6mYgs+Dgl3+FXaAo88qvLYQezPs5
F2h9fuXaEsKv8b29m12o6wKhfdddrvQs5FkX8Hp5O+DxNBO9cP8YZEpygdev
UrYlzzCx33OBlzn1S2M4THSoe9ueb5kuIPNr7sXswwX/5wJ8Bc32NE8mUrUO
Fb5a6wLfeLZx8/At+EEXOKm4W5h5g4E+k0vf7Rl3gfsKI8d/E3l+3h+6AKe0
0pqdT0fF+p+fjQq7wnH+F1tLt9KxX3SFiBplX3mdNuRTp3jhrK4rdElvNvtq
RcP+0RVkZjRsa9JakbhmuK8qyRWWl6ZEHib0dN5PusImu/G9DYJU1PWobFdf
pius+tey3Dybgv2lK3z80vi0RpmCLm77IphS6womAetvKnJRsN8kxlfpFP5v
moxMi3Zw5MZdQagwbLHGWgr2n67wwYXEG0nkC16pyEqasBs4p94500Dkw3k/
6gb57clnaeZU9OLqw/RYXTfY36MSQCH817w/dYNPGtmeglmt6JDwNzdxkhvI
LLtYORJOw37VDc7fS+P+s68NqZ7dufN1phtcux+4Moqbjv2rG0hai2SviKej
z3zRfMG1bpBl8cn54/CCn3UDOSH2+wFtBrpztLx31bgbpJ7TuStbwMD+1g3Y
Map6XD8ZyHtm8n61sDtc8K0+a7Rrwe+6QyJVxzAvgYk2xKge89B1h3IzRZuU
sgX+4A6xyf/0SUT9d32KceAjucOO+8WZN8aZ2A+7w+0nOsKiU0x0MaBSoTTT
HcxkG//T+MbE/tgdAipU7/YNMZEp5/s/m1p3SE887PGD8Evzfpm4P9emcPc2
E/G6qLfPjLlDTOnaizTCX837Z3c4+Ov6Y3ltJqprj72TL+wByjeq64OJ/Tfv
pz2gcrwqa8VzBoq3eJxgpOsBRJdnnwxjYH/tAfGqnhJcigyk0jRtORHoAU9v
Dzrc76Fjv+0BPoqN6gHHiPWFXbLZmR7w9YNjRgeiY//tAWtdS4eDe9vQnWcH
f+2uJT6fcO1jo1ob9uMeQPpb5zvwnIa81Z5Qh8c8INP95LI6RRr25x5QL1rm
P3urFW0o+5V/StgTuvrHzOuNWrFf94RK0zesqUEq6pTTilXW9YRmHm7f18kL
/t0TLr9ZRmETfu9CwSGT7kBPaFu19u06Qn/m/bwn+DWt/9sxREEmG55JJGV6
QneVxrYJGgX7e0/Q7Fhk79JIQYuyf3+TrfUEJS1u3k9tFOz3PSFqXwrv3DAF
1a3Y3UgZ8wTtfxbpwgIL/McTpl/y0XL2UpFOg66F1hIvGGnl4xmJo+I84AU1
FoEJL15SkRi3R/VZSS841q3X8F52IR94wekVKZzFMa1oWjdJmqPqBbceSC3d
3tuK84IX/KD5Pn3hTEPth/POqJp4wRuTPj7upzScH7wgP87j1k+lNvSwuu7H
CQ8vUI3dOJpa34bzhBekha86OSdCR+e+D3r2xXiBlIk329N6gUd5waP7p1en
5tBR8M65FsVTXkDhC+jZTafjvOEFPvmbHqgLMpBRuJRaSp4XCCfMNmvaMnD+
8IKZxpZzgakMJHsP5XVUeEEUz8GAnU8YOI8Q45s/zL/wi4F4xj0F5Fu8YGlD
eEiUDBPnEy/wNhXN8NjPRGzZ5OiEQS/46KXaXZnKxHnFC3rWypyyKWKi5975
A7QpL7gkYTtHblzgY16g5rni/CDRb6/l1RvKLPGGIbLS20X87TjPeMOXk3Ol
ARLtKK6f8zBW0ht+/FxbL7qrHecbb4gbz5nSMWhHtuu4N7SoeoPqN7fz1Vbt
OO94g1vj8Q/dru1I2V76uLiJNywXVVu0xqsd5x9iPJknd+K929HyTL0vER7e
EKCrUP/Uox3nIW8Q/ftJPt+5HX2geTu/jvEGdOT7GlWbdpyPvOHa0OfrU3vb
UZPgsddrTnmDdd3nE0fU23Fe8gaZDTlRPVva0S3jm4rBed6QVei5hGt5O85P
3rCyMudb3C8mSjn+6kptBTF/R+793m+ZOE95w4rLjbu0XjGRx6thbqEWb+jl
l9bfXMzE+YqYf7oFNfIiE+2e4wn1G/SGN790/x4hMXHe8obmbFGes6ZMtE5n
U1f1lDcMTMRXzSozcf4ivg/Du7oJvZmO3weCS3xAMvCKe8soA+cxH/h1xsiF
h8pA7VW+dz0kfeDkirpNavkLvNEH7NROhjUfZaCHk6mi5ao+EJpT81eNyB/z
ec0H2qxeHhPXZaBzO24l8Zn4wH2vMvI/CQbObz7w/PVtGpmfgYJDG8adPHyg
46Xbq8QhOs5zPlBw/3K5xhs6Mip5a1Ma4wPnA1yCjMrpON/5gOzDe7eOZtCR
7Dve2rl0Yn5f/PQCD9Fx3vMB9Us53C6E3+LetFnONs8HBLa67SdZLZw/+IBN
3L4j13XpaNDTION2hQ8oPtNvaVZZyIM+QBX/c+f8RjqqyfH/M9PsA5+70Z8x
oh7n86EPlKc/Fg5eTkdXe4/7Wwz6wPHNh5VcFtFxXvQBXyOH3QO/21Dsmttt
+VPE9X88i+2m23B+9IHIIR2l3Mk2ZGPbqPVdwBcoB9JnOr+34TzpC2Q3lzn1
X21ox8V3hUaSvsBXLr5FmoeO86UvOOoOMC2X0tHy1sUrrqv6wuiaVQXnV9Jx
3vQFkkewcac4HX1YIhc/YewLI/tF9Ye20XH+9IXZg67Vamp01GRoNKzn4Qts
f3jHMqLjPOoLqb8NR1yI/HYrNdA8O8YXlq6MG9UlLfBeX1C9IfYTUugopf7k
4/F0X/DoMgy9ROjRfF71hZ/fbOKPltCRx+ydjTp5vmBVtkq8ppGO86sv5Nsp
B28Zo6Pd2s2nL1T4QgIXV8DlH3ScZ33BjfzAbWg1A607OP59uNkXstYUBJzV
Xsi3vjD9fnMtvykD/agQ8NQY9AWLvabnUCgD511fWHbKWGPfJQZifpVvOTXl
C0kZ2gbutxg4//rCGjtp5+gmBnqgaKLKEvADybGKqOFvDJyH/cD95e84XR4m
OhsclKss6Qek/cs8dDYzcT72gzMP7AqUrZko6M4p/jRVP+B5gPyTvJk4L/vB
Ic9dOy8Temj4tiSq29gPGqXLV6o8XODbfrCH45ehWs9Em6TJ/QoexP2nhXFP
Cb86n6f9QPbPi+MqhF5we3wwSIrxA/OC6MnH4u04X/vBOc2TcXK729Hgf0sf
MtL9INz7agg5oB3nbT/Y/HszkYjbUU23wvrNeX4wHeHTcC+jHedvP4jqOM/F
qWlHV0XN0uIr/KBh9bvVS8jtOI/7gdLgcL7rSDuKtQ6ZoDT7QZX0Uu8iwQ6c
z/1gcjz6Ja9YB7I5f8ZJapC4/4b5MnNHB87rfkDJOyd0yb4D7aDcexU95Qdl
YLZZxqcD53c/2HGoQWEitgMtE6BubxTwB9r7ZTUB1zpwnvcHzlrZczJFHei9
/qfLYpL+8HhL9z2Dxx043/tDJnWsQqi7AzWmLOMOU/UHyoY89txQB877/uBw
NT/t1tcOVFi3PaTe2B9MMhYzn63oxPnfH16FiFe+XdeJkv+Yd4p4+INzof81
vc2dmAf4w5d0s+mH0IncNcNQYIw/XL+8TUrWtBPzAX/Y63k466BdJ9KOPVfy
LN0f/AUflfmGdWJe4A+bKmpP7YzrROvK74usyPOHGtVXKrVJnZgf+EOx3qSy
a3Yn+jHRmuhd4Q9XSVUdV3M7MU/wh650Sb68W52IuW1irLKZGK9xx5Dy007M
F/xBtO7TzHR9J3pAWmEjMOgP++P4H1U0dmLe4A+5B/6lp/d2orNFSs9dp/yh
4OUWqylOJ+YP/tA4ITl+Y7QTBQ3v3/JAIABKo7Y7LP3ZiXlEADzdmHhK618n
MpSKuMgjGQCHer+u4ufpwnwiADSX3S92F+5Cm9wu/LZXDQAZttyhA2JdmFcE
wIDSi7Iz4l2I69oDvxLjAMjZHF4lu70L84sAcB85Xmii2oVYnW20v+4BsE31
8nGyehfmGQFweInNz1/6XeiZ8FdNq5gAiMvkv2Rv3oX5RgDU+HNHO+7vQlcs
VxUWpgeAnM0Db5J7F+YdARDj/PmLvH8XOnBWefnP3ADQ+eb1/llAF+YfAcCq
22UwFduFrFusDppWBED2ze+ahkldmIcQ4390WBd5tAvtWBw1lNscANwZVV1L
L3RhPhIARutv7dx4tQst25dh9o0VAIGqq86OENfzvCQARC4YGa4q6ULvjz6q
0p8KgOs10R3rKrowPwmA71PuztHEdeNzhtRVgUBo3pdnZ9fQhXlKIGyjf6In
t3Whwplvpz5KBMIpW//KIOJ6nq8EwmTDNue1Q10oWUP4+x7VQIibUD165XMX
5i2B8MHN69Ni4to9RsUj0zgQdhT+LTk114X5SyDIc6g6Z5Z3I+2HNs2j7oFA
m6isPbisG/OYQHC/fsORKtWN1n6OVtGKCYRe+Va5wzu6MZ8JBI2v9j/6FLvR
961ZOWfTA6HIU0l5Uq8b8xpi/O/sbTG23YgRULGYkxsIvFvLXPWsuzG/CYRH
qP0vV0A3Kitsj1StCISVNS12Bw91Y54TCOV2gr1lcd3oDGeq70RzIExbGH2e
PNON+U4gBCe5uCQUdCOShKhBHysQzjVvJSSgG/OeQBjIvyj7pKIbGbioPVCc
CoQyrXaXIEo35j/EeA5bUuKautGmK3ZiKQIkCPio5KbJ6sY8iATVY5fuyfzs
RlwdB1I7JEigPpjAuDXZjfkQCdK5vS7aCfQg1qrsz3KqJFhaFfE4RbYH8yIS
dL3+VHNcqgc9s6hyTDAmgeF7/pJxtR7Mj0jwOe1Nh6ttD7pyuvMlzZ0E/JCy
esqiB/MkEjh4nRJq9elBB5p+bJOJIUHgN9N1qak9mC+R4K5UtPzrxB5kzbvm
cmw6Mb+/HLWejB7Mm0gQvmV6sqmyBynpaXC15JLg0K02bXJZD+ZPJLjar9TN
ftmDBJMcgsUrSMD1sL7y97sezKOI7yvrfevn9KDxZ3EdEc0k6KZR9Z5N9mA+
RYIaYTnGJ7Fe9Obn5T2vWSRIfjJ7jCrSi3kVCYJ+8usg2V50U626eM0UCZoT
DvVGWfRifkXM/2xNZZRRLzoa1S0cLBAEfF3PKcYOvZhnBUFAx0V1r5Re5Fb2
80itRBDsbym6XJjQi/lWELDPJdVUpPci7Y9rx1apBgFKrrycUdWLeVcQPBQ0
5Nd92IvWymta+xkHQdHXriHPml7Mv4JgRklJbuR9L/ru51RT7U48f63Dtw2j
vZiHBYFFWo+G8kQvYhTEbxaMCQKW+s9Edck+zMeCINvyh5n0+j5UNnj1gkd6
EOzKvFW7VLoP87IgeOP+X0CoTR86s+HpzKPcIGCws0aVLfswPwuC5YzxfT22
fYjk1OvLVxEE65uqDoef6MM8LQhEeP/y7kzrQwbZM61OzUHg4Si3KI24P8/X
guDkm6Ibss/6kAxTTLOUFQRZL6Y/L3nah3lbEJhyBSn9edKH5lZo35ybDIJl
qeYphz73Yf4WBNte8ToXEdcDZi7LbAWC4e1OodjtH/swjwsGn+LTws4b+9HT
9MNxtyWCQeCW8afP0v2YzwXDhXLNZH6JfnT5zX+cGZVgEDrAI/XQph/zumAQ
zK1+QbPvRzE8NaYWxsGgS204fWR/P+Z3wWC5IuJXSFo/skb9lfnuwbCs0eO3
yql+zPOCwYBCWXrkaD9SOvJH8nt0MFB/nDM6XNWP+V4wPJLkyuB73o8En244
ZZQeDC1mq6OmH/Rj3kfMP2D0S/NoPxr/sXvqv9xgaCW5K+6c6Mf8LxiuvF7H
O8DuR29U3NwnyoOhSF5yreHqAcwDg2E8Tk8nX2oA3Yw40qTXHAyNlNou8ZUD
mA8GQwMyNeXsG0BHS3N2ZrOCYShr/3pdqwHMC4Mh84I/s1h3ALm9f359fDIY
ZIKiqk9EDWB+SKwPl6j75NEBpLWFxacjEAJHpfq7I0IGME8MAc2rITFb8wbQ
Gt/ZiAsSIXCl+57SvbIBzBdDgLLxI7fP1QE0dUOib1glBMRXHHvztGUA88YQ
UIp/Vm47MIDoA7r6GsYhcPHvw/cRDQOYP4bAiszuMIXvA+i+mEfZKfcQ8HK6
G9IrwMI8MgR+FMl8Pv1lAJ12SFrHiibGf5XSFyHBwnwyBLhiv+VuU2OhwKy8
Y8rpIdAw+zS6SIyFeWUIRFgw7JINWMiAXvcpNTcEMo7kXd/twcL8MgRSo4Rk
K/aykMxytkN3eQgs5amRtAtlYZ4ZAm9bQqb/nmChOZO5eoVm4nnSB0VKglmY
b4aAcmxJ0mgGCw2ckNqWxAqBy1b+uf5lLMw7Q4C3RmAokbj/9DXKZkyGwBmB
e0+VH7Mw/wwBn3vOI2EdLHSZy2tOViAUlrwJ7NhazcI8NBSc5EtmVXtZKEY3
OSheIhSWaTpHrpphYT4aCrWCyYO3+1nI6nB+O0UlFNpL0/Z8+c3CvDQUdp7J
kjUVH0SK1fW6UsahMHXp9tmv/1iYn4ZCyLK/S/w2DKKl3zl3ot1D4dVa1R9i
ewYxTw2FDOWuL4ukB9GYMrdwY3QoPDyr6JytPYj5aiis7dzwMNljEDWESR8R
Sw+F8+OkQ2y9QcxbQ+FTwzvPk06DqOCu3rvQ3FCYPipan5w4iPlrKPwefU87
5j2Iksa8rerLQ2HIW8sNxQ5iHhsKSRWXvktcH0RusseeiTSHgs7LmNKJo4OY
z4aCscoq/9cXB5GW903ZQFYo3LJssXCvHsS8NhRiphJeyuYOojV5r84/mwyF
pbev6Ky/N4j5bShIwiRNnzmIpvqGfy0XCIOVW5POyT0dxDw3DOJaebebNQwi
+tpFvt4SYXBgVbF7/8dBzHfDoIAWq/e7fRDdt9vUWqkSBjISYyPuA4OY94ZB
Dc+5InleNjqdsW+XgHEYuHdK38n/PIj5bxg4TEj5uEwNokCab4Grexj8DWB+
V9vAxjyY+PyLsmVSi9lIXzBN8EF0GBx6fG7AeAkb8+EwsHZYvmXJTjaSNr4V
y5MeBkvuK2kelmBjXhwG6UWKD3ZKstG/tAa2fW4YfExqPF9mwMb8OAzaqW7+
1aps1P/yrUlJeRg8cZMzklBhY54cBrHr9L8qObPRk3+8lX+bwsBnxUoYMGZj
vhwGmWOh60SJ8bJ3b5a0YoWBhOnLoEshbMybw+CFcTx7wo2NouMN0gsnw2Da
suqqpCMb8+cw2L5XI/L9ETayqvKfnOYPh8KUmy9/RLAxjw4Hvc9NmgYkNlKc
PO5mKhEOWgrizzTPsTGfDgcF3/uNP1PYaOmO2425KuHwYsjP42I8G/PqcFAy
c5Y/l8NGYyGNyt+MwoGfIr7tbyYb8+twaFC39BBIZ6OG4nf/6buHw4Da5spv
d9mYZ4fDvbKryUsL2ahgdDHf1ehwuFn5IabqMhvz7XC49rXCLeoJGyXJyEV8
PBkOF/j331IoZ2PeHQ7ea2oqbtxiI1dPo949ueHgtI179do3bMy/w+FljOgj
v3o20swJ3JdZHg6fI4cE2x6xMQ8Ph+5B14rPdDZa3Xvy/mhTOKz0Hf9S38rG
fDwccs0LwKyOjSZXF6/VYoXDJe7akbl+Nubl4fDhjHaTUR8btdk0p5ydDIeY
3QnvNpDZmJ+HwxrFO0JO79io9ML4RzZ/BJxdee4eN3E9z9MjoC2Ey824k41O
UQUcVCUi4LXLLieur2zM1yOgYANjxU/iOnDJ1voTKhEgfs32dTebjXl7BOgd
borlmSH2r6GJQp9RBGhcVzdX/sPG/D0CJEcEftLfE/s3NeiSonsExH/O41Rw
cTCPjwBuFW6yCw8H/Xtx6l9yNDHepmMp2lNszOcj4O7tlIs5vBzU/7eE1HGS
mI/I4ZCmxRzM6yMgWFQod/1fYv9qkZlyuRGgXq1/DAlwML+PgDF42zO0lIOy
4z7oJJRHQLpQ0OXdxPPmeX4EaF5TeJAvyEHRFUvv0JoioDyF+/79FRzM9yPA
3o3aq0A8z/KrgpAMKwJ4jtTSXhP353l/BMwYDBgpCXPQdkWzhNjJCNi48s0t
1hIO5v8RMGl/yqFUiIP4qqqi3y6KhEzfmcaA1Rx8HhAJTPkNxg7LOSim/Y3c
+RWRcOipdYK7KAefD0TCKnPSnPM6Dhr+1jmwSywS6h/oMy6v4uDzgkjQ1L+g
2reGg6xWvcsY2hQJxx7xH1m6gYPPDyLh5uPHiwtEOOiF0rThGSXi+xLD2pvF
OPg8IRKG3WaOHpbgIEWLxX/VtCIht83ZP44Yb/58IRLigjXX6BHj5YSseTS4
LxLIMm+Wl0px8HlDJNggusQ6Yrylp7cEpO+PBPVLB9YpE+PNnz9EQkH+46l8
aQ46VKyxQcU5Ev5rMxI9SYw3fx4RCXd/2QZ+l+SgsUZDer9vJFgba7BcNnHw
+UQk/Gh5NPKaGM9h1OH48fBISNb/j+viRg4+ryCer/var1+WgxoWBWrvOBQJ
7NNlb2nE/ObPLyJhcGt+Ha8MB6nKHPzSkxoJJzaLbJXdwsHnGZHw4ni2ZjEx
v5tw8tax85GQ95vPzY54/vz5RiSMv1s2oiHHQas8rzhvvxYJQ7nW/ZbE/fnz
jkj4/osrLpl4/tHEOyu6CiNhD/f+w6vlOfj8IxJEy+0fvyHu/w/lNwD2
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
Uy6+/wiDj4uK15GJ8f0Pu5cPCw==
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.5048930538905905}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 266.572976289502}, {0, 0.5048930538905905}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.759456045431834*^9, 3.759456673929414*^9, 
  3.759456709856111*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/NcN9xTw/P8D3F5d9Q==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5472740036354856},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 266.572976289502}, {0.5688322560793827, 0.9999973049573256}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.759456045431834*^9, 3.759456673929414*^9, 
  3.759456714635829*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"c", "[", "SimulationTime", "]"}], "/.", 
          "AdiabaticEvolution"}], "]"}], ",", "0", ",", "True", ",", 
        "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{
  3.759456720411772*^9, 3.7594567542654333`*^9, {3.7594567916810827`*^9, 
   3.7594568044646997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9U3tIU1EcvkolaRrZlCI1nSE+CiQXgqRflpgUPisi2rTMiZTVxHCk4h+V
WBguR5Fmgqb/JLZSpk3SLV9bivmYlZuvNjfd3OZWyqSwKO926oPL4dx7ft/r
cIOyb2ZwXSmKitp86PU/jl4pl507gRKG6KS2+DEkwj0Pnwgbyb4ZeawybZlY
AklAuTldIkLe6432Ib6CfBdjS1rvqkuFEs9qaXThQak6ep45Tc5L8aFRtzvD
QwtLOv2mF74Sd/7ydz2ZH8DScZdBnwoj3KeaeLHuCkQqsyN6qs2Ebwidwmht
lnYFYWxBnz10BMmeiQJmuo3wjwKudQv+wzY0b05PNY2j0bMneDTBRvQm4Ea1
dVcOrSDKgUl0+Vfs28ozE/1PSNrRktXHMaLfHrqp8Bl+P0rFw/164mcKrUzF
4eoZDTIcgirUxHnwOuRq4k+NzojkmFcsJbTFNOE0+rxrWc2rcuJ3FpcWt3kd
+f0WBbQ93hzuc1LD5wwNxP88KOlGKm9nCpyXoQF18JF+lzRR5syjQeD6QPCs
6jmSnAJ4bz/FnTZ2kHxaHCioaj9TMghajS1YAE9j4PPjJ0heHY69masKqVPB
GUcH5bW7OUVhGpJfD/aLq/J6uw77aTsBi8jknX559paB9LGIyHeypZl8E3Id
WELP2nndL5GF9GPAveO3x7x9raDZGCIDariBmRcqraQvI1CYM3rRzYp1ms5u
hF+siHVdaCH9LWOvYrCQmWCCo55YE6giRtqXeAPp04ToNcGd1G4dHPbKzRBM
qmI46q+kXwu87OuXW4JU+DhCwwLOjfoQamyc9L2C0sxiRkrbABxxGVbk//R7
Km8Qk/6toHK3z8UdqoWDjm0D5SNtDf/DlTnv4xv+/R9/AVAwkDQ=
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw9U3tIU1EcvkolaRrZlCI1nSE+CiQXgqRflpgUPisi2rTMiZTVxHCk4h+V
WBguR5Fmgqb/JLZSpk3SLV9bivmYlZuvNjfd3OZWyqSwKO926oPL4dx7ft/r
cIOyb2ZwXSmKitp86PU/jl4pl507gRKG6KS2+DEkwj0Pnwgbyb4ZeawybZlY
AklAuTldIkLe6432Ib6CfBdjS1rvqkuFEs9qaXThQak6ep45Tc5L8aFRtzvD
QwtLOv2mF74Sd/7ydz2ZH8DScZdBnwoj3KeaeLHuCkQqsyN6qs2Ebwidwmht
lnYFYWxBnz10BMmeiQJmuo3wjwKudQv+wzY0b05PNY2j0bMneDTBRvQm4Ea1
dVcOrSDKgUl0+Vfs28ozE/1PSNrRktXHMaLfHrqp8Bl+P0rFw/164mcKrUzF
4eoZDTIcgirUxHnwOuRq4k+NzojkmFcsJbTFNOE0+rxrWc2rcuJ3FpcWt3kd
+f0WBbQ93hzuc1LD5wwNxP88KOlGKm9nCpyXoQF18JF+lzRR5syjQeD6QPCs
6jmSnAJ4bz/FnTZ2kHxaHCioaj9TMghajS1YAE9j4PPjJ0heHY69masKqVPB
GUcH5bW7OUVhGpJfD/aLq/J6uw77aTsBi8jknX559paB9LGIyHeypZl8E3Id
WELP2nndL5GF9GPAveO3x7x9raDZGCIDariBmRcqraQvI1CYM3rRzYp1ms5u
hF+siHVdaCH9LWOvYrCQmWCCo55YE6giRtqXeAPp04ToNcGd1G4dHPbKzRBM
qmI46q+kXwu87OuXW4JU+DhCwwLOjfoQamyc9L2C0sxiRkrbABxxGVbk//R7
Km8Qk/6toHK3z8UdqoWDjm0D5SNtDf/DlTnv4xv+/R9/AVAwkDQ=
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {-0.0026851495258052305`, 0.9934224534882289}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.759456726060507*^9, {3.759456756935585*^9, 3.759456762895748*^9}, {
   3.759456796208829*^9, 3.759456807063592*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bang-bang evolution", "Subsection",
 CellChangeTimes->{{3.757330137151523*^9, 3.757330146319542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimulationTime", "=", "50"}], ";", 
  RowBox[{"NumofIons", "=", "2"}], ";", 
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", 
       FractionBox["1", 
        RowBox[{"4", "*", "4.0"}]]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Nu]"}], "-", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}], ",", 
     RowBox[{"\[Nu]", "+", 
      RowBox[{"1", "/", 
       SqrtBox[
        RowBox[{"40", "*", "45"}]]}]}]}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", "20"}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"vi", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vf", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hamcar", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"adag", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"ni", "=", "1"}], "2"], 
      RowBox[{"2", "\[Pi]", " ", 
       RowBox[{"\[CapitalOmega]", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
       RowBox[{
        RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Eta]", " ", "a", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                "\[Nu]", " ", "t"}]]}], "+", 
             RowBox[{"\[Eta]", " ", 
              RowBox[{"a", "\[ConjugateTranspose]"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
               "\[ImaginaryI]", " ", "2", "\[Pi]", " ", "\[Nu]", " ", 
                "t"}]]}]}], " ", ")"}]}], "+", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"MaxPhononNumber", "+", "1"}], ")"}]}], "]"}]}], 
         ")"}]}]}]}]}], "//", "Chop"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TwoIonSimulation", "[", 
   RowBox[{
   "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
    ",", "SimulationTime", ",", "\"\<Individual\>\"", ",", 
    RowBox[{"Evaluate", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "/.", "SecondRotation"}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"-", "3.1"}], "]"}], "Hamcar"}], ",", "True"}], "]"}], ";", 
  RowBox[{"BangBangEvolution", "=", 
   RowBox[{"expoteSolution", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataYRep", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{
           RowBox[{"SpinRotation", "[", 
            RowBox[{
             RowBox[{"\[Pi]", "/", "2"}], ",", "0"}], "]"}], ".", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"c", "[", "t", "]"}], "/.", "BangBangEvolution"}], 
            "]"}]}], "]"}], ",", "i", ",", "MaxPhononNumber"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"dataYRep", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
      ")"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", "\"\<00\>\""}],
       "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{"ReducedSpinDensityMatrix", "[", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], "/.", "BangBangEvolution"}], 
              "]"}], ",", "MaxPhononNumber"}], "]"}], ",", "2"}], "]"}], 
         "]"}], "//", "Chop"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "300"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", "\"\<Purity\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.756982437065268*^9, 3.756982574281869*^9}, {
   3.756982630906192*^9, 3.756982682909855*^9}, {3.7569827521009483`*^9, 
   3.7569827645313883`*^9}, {3.756982808758478*^9, 3.7569828159322433`*^9}, {
   3.756984219086583*^9, 3.75698429553036*^9}, {3.756984482677462*^9, 
   3.756984553193006*^9}, {3.756984590893515*^9, 3.756984591416934*^9}, {
   3.756984626994535*^9, 3.756984627404067*^9}, {3.756984668968157*^9, 
   3.756984669106083*^9}, {3.756984724603725*^9, 3.7569847620372963`*^9}, {
   3.756985183789019*^9, 3.7569853699996243`*^9}, {3.756985403098816*^9, 
   3.756985405672268*^9}, {3.7569854481518917`*^9, 3.756985450266583*^9}, {
   3.756985491170484*^9, 3.756985588234439*^9}, {3.756985634063283*^9, 
   3.756985641930625*^9}, {3.756985768902295*^9, 3.7569857707264977`*^9}, {
   3.756987037059238*^9, 3.756987044709035*^9}, {3.756987109851344*^9, 
   3.756987118175552*^9}, {3.7569873177192698`*^9, 3.756987321047307*^9}, {
   3.756987398280258*^9, 3.756987415155097*^9}, {3.756987469535994*^9, 
   3.756987471450007*^9}, {3.7569875133566504`*^9, 3.75698751834231*^9}, {
   3.7569875679147797`*^9, 3.756987684248178*^9}, {3.757319315264946*^9, 
   3.7573193748912153`*^9}, {3.7573195575347643`*^9, 3.75731956863619*^9}, {
   3.7573196228260603`*^9, 3.7573196331188087`*^9}, {3.757319826300984*^9, 
   3.757319923803653*^9}, 3.757331009659992*^9, {3.7573311354736357`*^9, 
   3.757331160943964*^9}, {3.757331388994005*^9, 3.757331493275215*^9}, 
   3.757331550569544*^9, {3.757331582062825*^9, 3.7573316212148523`*^9}, {
   3.757331660302064*^9, 3.757331691511792*^9}, {3.7574731281658773`*^9, 
   3.757473201422647*^9}, {3.757473322994841*^9, 3.757473323143469*^9}, {
   3.757474127532192*^9, 3.7574741290720987`*^9}, {3.757665178317944*^9, 
   3.7576651785994577`*^9}, 3.757665249494314*^9, {3.757665304259116*^9, 
   3.757665342442894*^9}, {3.7576653884230537`*^9, 3.757665388923155*^9}, {
   3.757665426928895*^9, 3.757665486415987*^9}, 3.759456134966346*^9, {
   3.7594563451544943`*^9, 3.759456361533646*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
dHvPDS5LZPO3eWjnDN2jbH5n9Gj6nPEgi83vjDmvNAZDp7P5nSFe6Xt5L9uv
pDrj7sOqCUt3sfmdkeo85EflGja/M1pymmeHjmDzO+OcJPDPujFsfmfcy5g1
6cFqNr8ztB7vG7pdxeZ3xvZuzw5Fe7L5XXDhb1XrUrD5XZAQZ6ewZ9fDc4Fa
v/nLkH/Y/C4Im3Rz5dK+bH4X+HVSv0hk+8FAF6y8ut9tHssPdcF4y5aP773Z
/C7YEQDOLg6b3wWSY561B/XZ/G3XozvOstSXze+CdLu0Hkn92fwu2LdzhV3t
M7YfdsHAK5d7f/5ErnbBSY3eYgMzNr8LvK/XfzJrx+Z3wXHN89lOl9n+2RUv
InJ1Yu6Sua7ISM4qjdNi87visFbUr8qnFBe4YqWFtujMAbbfdkWg7U2RJdvf
B7rid5qq+Odrcqgr7j8eHbPpAlnlCsmGIXNXJbP9uSs6uhWMNcskp7pickbY
8v2VZLUr5Jbbxy7JJhe4Ytbs9Vczotj8rjhxU99zTgKb3xXOs42wKp/c4Iqm
9QdXZq4gN7viQXCn+VrsfYrjhpwJZRtNJ7P53RAyaVhc1kYyzw1jbu+f0iGM
ze+GvEcpfg+s2Pxu+PH5ldJPwuZ3Q1jAxzldVGx+NzxJe/rntD+b3w0O9fFK
m05sfje43NlYV2PO5nfDkQ/eJyrZ+53aDYlmHy7UmrD53WCbndnw/RJ7H3XD
7M9/Cj90YPO7ocCrP744svnd0FTTL1/TTPnNbdfTqfey6wns/dUdaU883onL
yVx3zBk85/smfTa/O4ZbNHW/n0NxgTuycja8euvN3pfd4VKDL28SyYHuOLm8
5OWku+RQd0z70/WsUShZ5Y6Bc+dPn/uZnQ+4I9q1dMtHCcVT3XH0Ws6oU5vJ
anckWjmNSutFLnDHZ3HvHQl57DzBHQeHZSTHtKN4tTvWfpn0UjmU3OCOC0m3
a1WVlN/sDsuvt+2dprDzCw/cSI37vOgcmeuB2ojh9620qZ7ngUE5l75dWk5x
gQeabG8/+7c/O+/wgMVb7iW7ReRAD4xVxWyO0pBDPWA1zaIoz4Os8gBcl9Tc
ZOc9CR4I0H/kv8mT4qkesPa4vMF0IVntAc3N+OP+bym/wAOr1Du/fkhh50ke
kKiUK8+0kKs9MC/8wJcwZ6pv8MDmmtaP63ZTvNkDwx65l7RXsPMnT8yLEpic
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
p1wS/T9eHkfb
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
jeleRfv3AqZtHmCWS3WuF/L/ThPUzyDzvHCgYFzF3a60nu8Fdb4yNk9AhhcE
Ud9m+uiTlV5IGO8b6FJJ/SovbH+tFiWA6mov5G0Kb32qJid5IUZfahLvSk71
QpPw6o9PvcnZXuB+LOvq9Rc53wv9ql9YcPeTNV5wOl9mUDaFXOWF9UNjp/wM
Imu9kDQ8Zuuvw2SdF3zGPBW432P794aw1fa3QxqZ6w1BpGW5ZwKZ540R+zoe
vPuI7d8bGXdGVY0wuEv798b51bOi8zRs/95on6D+fPAkWeWN20eW7SjqQevV
3njk/SFujgc5yRsDnhk0y3Vs/95Y5rv7ovIZ2783jCV1UQViWp/vjW9OtZot
0WSNN9YNLbU35pGrvBEb0FggMCVrvWEyqkPc7b/JOm/8uTUrt3wHmeMDzrU+
xSZKMtcHu+YvXpeoIPN8cOSH/L7xMTLfB2s3epXzytn+fdB+kl7zpCSyss1z
N80wX0pW+cC0a96lzVq2fx8khmR0zv3B9u8D3ZomtDtFTvXBgvVLFlnnk7N9
EKuf/jPMtJr274NtuTs3xjmSNW31A528jJ+x/fugxuLb1yMNbP8++JX2V4M6
iNbrfHDw5MbktElkji8c9kWZ5PQkc30RPVG3q7QPmeeLCKvafj+Wkfm+OH9l
SE7/NDJ8MdxUVVYpJSt94XP5Rs3KULLKFxdCqhwMishqX5h92hYxpJSc5It+
q/jjjsSTU31htTv3pt5qcrYvgl8mjD/4lu2/7Xwv5l6sbWb798WNw4uKQo+R
q3yxMbT53ogLZK0v1u+fb/TF+h7t3xf9fYZ28HEkc/yQ8iJ4aK2W7d8PCqUT
N+Ur278f7Otfn+s4gdbz/VCcp+PHTCHDDwPWB06f2Ius9MN+63f8G05klR8m
G/7kNqeT1X4YcmTntqU7yEl++D2zXNISTE71w7OFC471mU7O9sNLfuf3tZXk
fD9k9lfHpDFr/DBysdV/mpXkKj8ImqLvZ+SQtX6wlUQcvdKphvbvhzDnvLEX
OpA5/rg1K25K5QVaz/XH9VmTzkQ8JfP8sc87+2qZlNbz/THTrrprL5DhD82o
pSc9Wtj+/XEwxHrBTAuqq/zxxOeA+tdysrptvbPswsnF5CR/TAq9OaizOznV
H0vG5HzWTiJn+0M9cVfHuMvkfH/M7yI8v7uIrPHH2R1nysbHkav8EXhbq76e
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
iz0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
wx/Xs4UJQ2n+k8HHftSY6f1o/pPh/njdzB3v2fwaIkPUUCPdG3U0b3e/i65p
jE6vZbxchqWVYRr+ZTR/y3C1qkfCwHTGcTJYqub+ajpK87gMn/vtzvt9hPFB
GbYM1ypc83c+l0G6aU3T3TDGqTJcaXH7NDuQ5nUZmkqz1ycR58jg9i2ztMmX
5ncZVPxVxtXyGN+VoTOgY8UkPZrnZfge6XTsoj7jWhmqFx6bfWoYzfcyxI6J
WuXbxvYXzTIEKJ/sWdJE+x4Ziq7sGy5tZtwuw9sjW3Wr6mj/I8fUIwWuYy8z
VpSjfI+B4sMztA+RQ3Nbi+mCdMYacjQa9kpcnUD7ITm+z4/c+WwFYxM5JixN
C9lB+x+eHMPdDi10jmTsLEePLcbzr82i/ZEcUW5VThqejOVylLwdvrePPe2T
5Ii8E2B7w4WxvxzZ6ac2JprRfkmOH2qrV6vS/ipEjmcfq2+P/0X7NjkuXZcf
VOrB4svl2J/6dRyf9nHRcmwYG9j87C7jODlsP7xz3FBA+zg5FuwSVToXMz7Y
/fwZy7rScmg/J0frAe3KXTsZp8rh8clUcH4z7SvlUD/Ud8zE3Yxz5KhdsWXj
j2jaX8pRvee3k9CP8V05zKflxr/2pX2eHCp7hCULAxjXdj9fhaDZeTTtN+Uw
UTYf3JvLuFmOp1l6htCmfaccF3b335JszLhdjtJme/WNarT/HIUxTmfMPr6t
5v8fcBmJew==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJw92HlczPv3B/BpoSzVFFrFaN/3ZVrnNdNMM5Ira1liRIUrQsh6c7NkS6Fr
ZyTdrI2lZIksEYWo3LI1sqUsKcmaX7/H97z5x+P5OOd8zufMu/nM+/0ZFDN7
RKw6h8MZpMHh/P//7N/r0uGvvcruC/4npWDGt7jaoTeYSwQLHO6PO3OduUxw
Tl7VJ/C3KwXVqwuba0uZqwXN4Y+sVv52rSBshjJt728/FhTfORZz97dVgqOm
F/J//naDQGfWrTV+v6//QnB06MWzWr/v55VgLD/8veq3GwWx6ver9/2+/ybB
TsPRDtNvMr8V1FoUzHt3i/m9YPHQU8tmVDC3CHYcvzLmzG3mj4J2M+2CHneZ
WwU/Lo64LrnH3CbQ3Ho1anIV8yfBhvjrOb41zO2ClSLjWTr/MX8W+Hndm6b+
kLlDEB+tHl/4mPmL4OecqDK9euavgpDXW2JinjF/E7xbmPic+5L5uyDn+bRx
YxqZfwjK7rT+49DM/FOA9LA9re+YOwX52Zk3xrUy/xK4fyh8bf+ZmYNK0ykf
Z30lp3Dgl+Ydm/ODxdVgtr+0qVStiuJqQM8tGobdyRx1bLF7ql3Sg8XVwfmS
vmacDotr4PVXx0KvPiyugRkVOR4/jFhcE6aD6k//NGNxTZz8+ezQp4Es3g3q
kmWzV9uweDcsVg2sOufI4t3Rf2fMNU03Fu+Ofje4+4Z5sbgW3k3V3bEtgMW1
0JCiSHEWsrg2hs+QxedLWFwb/467Uy4JY/Ee2NkrJlQ0gsV7YM47/VjnKBbv
iQ9ijZU1E1i8J94u3b00fzKL98LahetTJ85g8V4Ib/7zUGYii/dGQOEn16Hz
Wbw34gVx46csZnEdXK76depKKovrYOP4Gbdc17G4LiLV7qo3p7O4LhwsJRd8
trK4HmY5LfkcspfF9RD8YaLO4xwW5+LvWbO3/X2IDC7udodF53GWz8UPp/Mb
C8+SS7gYtmjOg+klrF4f1gn7al9dY/X6UE11WLzxFqvXR4X5Le/3NaxeH8Nc
LIyPPmb1Bhh4Pn9Fk4rVG0DY9PNw0StWb4CMtWf/udjK6g3Qp2n/oflfWX0f
jHjjPUX+k9X3wYdeiWdHalRTfR8orOat+K5HLumDJ0kj8nYYkjl9YXPvbZ2Z
KRl9Ed5YG+3JY/V90d0/aOYiZ1bfF5em299u9mT1/bBE499eH31YfT+U7dDk
Ogex+n5wfvx8k84QVt8P9uNDz2I4qzfEpVnO4QUjWb0hHu6fuMNoHKs3xBb1
nJnp01i9IWaOCR88axarN4JTmOlIQSKrN4L3+c865QtYvRFSP665VrWK1Rth
U+DJsiHrWb0xygu/pcVvYPXGiFm+fNigLazeGMIjDtZnslm9MTw35AtP/svq
TaDed7KPdh6rN8Ewz5Pf24+zehOYXZVf7nOJ1Ztg1OyKrKVXWb0ppli+L/x5
hdWbojo0qsbmFqs3Red2ja/XH7J6U+gdyixb85TVm6E545XC5gmrN0P5It6J
LS9YvRk8Y56bKNtZvRkcF//befILq++PoAnx9VM+s/r+eLRZ98KATlbfH3Wl
qY+UejVU3x8OG/pertcnc8whKFxbuV2XDHNsLfGYfdSQnGKO0xtz+xyzY/Xm
uJW769VHe1Y/AHpuoiFHrFn9AGxS2Ry3dGH1A2D1qafZerD6Abj041vFXWbO
QPw5s9+J1ABWPxBXvTTLEsSsfiCOqJulekay+oG4NsPGI2YMq+fBJzP6Ve8I
Mo+HatWSmQvGsuvxcPLA4bGZM8lyHlqOZ8q3zmDX56FbU8AorylkBQ+3j80q
dkxg/Xh4PKHzbWYKWcXDV6X9r5HLWP9B2JZf9PBNEus/CHZSmfnyv1j/QSj4
ZPXKagvrPwhH+Q3Omems/yBkrp5eMnAV6z8I32y7D5dnsP6DUBvUxzYwh/Uf
BMu+n0YE72X9LaAbcTbnFrs+zwJ2V+e63NjH+ltgQ/r0gvJTrH9X/JeBTcRR
1t8CY7jtE54pWH8LaFqfvHXoGOtvgWbR/fM3L7P+FshKnJBSXMT6W0JrVfem
Cex6PEtYRk0xUDvH+lsiOf+Z0OUO628J9/1LR/91lfW3hFGMZii/kPW3xIzG
+T9vXGP9LWHfY/iYtlrW3xIZ58vXZVSw/lZYH7JjQuJF1t8K4+4eMf9+m/W3
gl516Na+Day/Feq+93z6ror1t8KKjGt3NUpZfyv4XQy5s72G9bfC5SnJCze9
Yf2t4JG65kZWHetvjaTLE9633mT9rTH8QWOp4hHrb40r9XmnYj6w/taYOMX6
j7QnrL81Zp6LWyRg96uwRoBepF9fFetvjbHP/I+nt7H+1nj68lXH9XrW3wYL
+yzKfMs+X54NJmTtWdzO5oUNjlc7nez7mfW3wdNWzvpR7PopNmhq+GtNJ6tX
2EBl86uH7AXrb4PyE3+s7GD1Khsc+LJXz/t3f1t0PttbtJjdP88Wd0aGSbms
HrbY7eWz0v93f1vE/91/ecJj1t8WQ7I958ffYv1tMTbTas5Idv8ltqjz6h/W
8Ht+W9x1aK3SYH8PHDs0hY2/Ws7Wj2eHlji3aUbs/mCHGdn3brb9/vztELdy
lLLzHutvh5w9S2LzL7H+dnDcs21/zEPW3w5lLpqvk5pYfzvcm7N8aSy7X449
BlyoWGbKvg88ezQsju4IqGb97bHGwjv/z+esvz1u54R8E7DvU4o9ph8+eK5f
PutvjzGrm/45zP6+S+zhl9d8/ym7H5U9PArblv7Dvi8cB5waLag7xJ4PPAds
MN31oIB9v+AAU/kb7ZpK1t8BD2dbzplzmPV3QJ152tf67ay/A+5uuu8Ye5b1
d8DpbjETR7PPV+WAWv7qfXW7WX9HaPpv0Li8nvV3hLH7+++X2PMDjojdp7wX
xz4fuSNGr68u+m8j6++IGR2VA8aw56nCEbdvrcm9zZ5HJY6oH8hP5LL7VTni
6XeDHUm/n79OiLvYRzOPPa95TigJviHN2sz6O0F3e4372J2svxP0p8lfFP3J
+jvhC3/5xksTWH8n1E1f22Ceyvo7oUJnqkq6lvV3gr1RheBYFOvvDOmHUs2D
Yay/M1TKxl6z5rL+zlj3y933+QLW3xkdTlG9x/3+fXOGm7raBbkv6++Mc7lr
gzbIWX9nvIv8nuXOfp9Uzgjb82ntDfb7ynHBNn+3P79ZsP4umPdkRtzyoay/
C9w/qE32+4P1d4EybmzxTyPW3wVfZ367tEiH9XdBoKNXfJgf6+8Cw+LwNRw+
6++Ci5o2czU5rL8ratcvffyS7T94rniWmL2+3ZL1d8U4W12TjTzW3xXPhxiP
ef6K7U9cMfr+kduSerLCFa9TFXar2P2UuGLAjdzjL7RYf1c4G7RX7q9g+x83
CJ3O+ymuk7lu2F8d0auT7Zd4bjiVJ7HSeU92c4NhxePx0hNsv+SGFP61/O9H
yRFumHLaxiaW7cfkbijopf+pVxU50Q1tZ8/aPdrK7t8NM4/yNk3cTM5ww2G9
Kz0usf2hwg357v6c14VkpRvuavwsnLqQ7efc0OP6K5u7bL9b6YZn5wakcQ+R
VW6ImR/UfmAHucUNNvM6Zc1RbH53BGll141k+22uO4x1rgyduJHN747SwKYe
g5ew+d1hmxOpXODH5neHcvZ7rbZANr87buefmnSM7cfl7vgVMH3J4/Fsfnec
b/yapWvC5nfHjN3JCacGsPnd4Z9q1KzOzgMKdyQYdbjGBrD53aG/8dHs8x3s
POSOqrvD/9v1i1zpjsziX39P9WLzu+O0+n+jm1i/FneYxszIW8XOYxwPWF3c
oDxVT+Z64GD3A361fdn8HjihMfDJPNbPzQNvPhjlLjjJzlseyLOfv079EjnC
A8vGLV899RNZ7oE/XNL8e1aTEz1gr33q1bbf51UPWMi638zYQ87wwIMbDwu5
VWSFB6wDDE8X5pOVHqh7a/i9bTqb3wPe0bna8UvY/B7YYxD55wslWeWBLcsS
hKnsvNzigbAvPY5nidn8njjZL6cmnZ3nuZ4offtnbONGMq8rvo13fPFUNr8n
+EMWP0gbwOb3xFz12l/63mx+T/QfHJVlzc77ck88eZ6wPi+Ize+JUQVairoO
9r7FE2s7jki+c9n8nvCPbBLksvcRCk8M6uC4mxiy+T0hm+BqmlVJ9SWeuDX3
xr+j35IrPfH+xeXsJB6b3xOLTUYo69j7oBZPuI4PKyjLY+93vPA0/kGrE3uf
xvUC38hk8u5vZJ4Xiq/rX+64Rnbzwvcj3Zf8nUKGF+y7bxu0cT85wgvpc75W
2VWT5V5YfXTiwRW7yIlecA7yvFMZyeb3gvxtXtHfS8gZXpi0bedem2NkhRe6
Ww7WXz2HrPRCcGYyrriw+b0gmmchMB3N5vfCX09N7u1fRVZ54faPHh/7SNn8
Xtik9WZPbDc2vzd4T0umydn1uN5oe+ye/G80m98bxS83jfPvz+b3RkHT6Qk3
H92j+b0R0N3+38labP6u+IJ910K82fzeuKXodNT+SPmJ3qivDen4foKc4o3z
PzNtHVTkDG+s7LgZn9qbze+NQ/dyDDaUUlzpDYGd64+eaeQSb5yZ//ei0iJy
pTdM9k35OOc5WeWNwoMLONU7yC3e2C8rPakxkczxgZnZxZnBmWSuDyZ52N43
PUfm+WDyCY3wdwlkNx8c6rXo0UdPNr8PnJUm1/dOJ0f4YKvosUlaBlnuA/Ps
wdovhGx+H1Sv9tii6sHm90GwzhDuBxbP8EGK8I7m1TiywgcNZak+V/ux+bvu
p9D1aW19Jc3vgxjF1VE+pmx+H0zJue1XFcjm98HU+leGW99QfosPxrSsLmwo
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
         
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 50.}, {0, 0.4839444935008118}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {0, 0.4839444935008118}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{
  3.759456139616953*^9, {3.759456368571007*^9, 3.759456394226392*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
euBF67D1WW7EPA/c/d5iZlt/hc7vgfy9I0x7DSM92APr55o96JNILPNAzOav
X5NekD/GA6vXhiweso5Y7oFDb/NlKqrkT/PAwSWlFcNcibM9YNwzrdehNPLn
e+ByjN6IZz7EinY9+vhOr7PEtR7oETfz75aXxMr2eT17+XT3I272gF/xh3Nf
31+m83tiY9lOYUkk6VqeMD2UMPrdVmKuJ7JWpf8qbyI/zxM/U4qWbd5DDE8k
V10clmRC/mBPNE7SvzFJQCzzRK+aV5/vbyV/jCeUllulF4KI5Z7oMjhrxuG7
xGmeGKzpn/rjE3G2J9KPNxwZ40+c74kDu4zur/5zic7fPn/n2T3ma0mv9cSS
8FDp5d3ESk+0leBbUBP5mz3R+aZ21MdjxBwvjJl8/baKF/m1vCDrsi/1hpSY
64U+WZlDr20mP88LHiEbylUmEMMLvffLhUPeEQd7oej5um26rcSy9nzj4UP3
vIljvBDdVZhXo0Es98JojYc/O+0iTvPCZR/3yUVZxNntfXdlY1e8qKTze2H7
8761IWeJFV6I+Lkg3mEI+Wu94H3bL+2IlFjZPt+r65I768nf7IV4yesDOTOJ
Od7wKg58/eAnsZY3hrbJj6h9JuZ6Q2jzwPWpCzHPu/198khNWV9ieONvt3rD
LkeIg73BzThw+P5OYpk3ehk6Fh5rqKDze6M+avbEE5XEcm/I425NOx9G/jRv
2FRN3W4aSJztjWk1X38MTiR/vjcGfdz1dfk8YoU3ijjLu6irkb/WGzsf/S75
/o50pTda2+b4XrElbvbGib67w92NiTk+SMowm/H+FLGWD65+vFo8ZQsx1wfl
PfPn2NaV0/l98LemFk+qieGDHOmrUbHh5A/2QenjMf0jvYhlPij+GVuwOp78
MT6YcSeOl7CEWO6DrfLcyTm9yJ/mA6nlMnNLJenZPmhwv/pPySXO98G4U3FX
9ayJFT4YcVX9/coy4lofGKduLchcQ6z0wfYbgjlDqxR0fh+cmLgr/fw9Yo4v
zvv0vmQwi/xavuAHBe6/a0fM9UWN87dfddHk5/lib3aMQ2wiMXxRqTbx46K+
5A/2xcIXxbYv60iX+ULfPPvASl3iGF+0bb9r5+9ELG+fd8pgTVY5cZovum5O
rr63mDjbFzNDdg68tvwind8X8xrXOoVcIFb44kpBin9mJPlrfaGdfMTwjBGx
0hdc/y+22rcu0Pl9kW+wdUGCPuU5fshUau6N6U9+LT/s9T6zwi6FdK4fekWr
6bQaU57nhya3N7Yqi4jhh2NBK7QnrSN/sB/O7p08r/M90mV+eDUqkbN+3nk6
vx9+7noz6tcdYrkffPxquOeekT/NDzt7zovvaUKc7YdRq944f6oso/P74YMg
oWucE+UVfmi4VZeg6UX+2va+i6fSZ0eSrvRDNTd6qJcu5Zv9MGGX2iX5JmKO
Pwz/+3RsThr5tfzx9PNpb89S0rn+yCro3Lxqzjk6vz/+VryucvxIDH8MOOzY
9vYN+YP9MXjTvYnb1Ihl/njUWOr+UlFK5/fHr7a+RluDKC/3R5/nqxOz+ORP
88eHK4sHZY0mPdsfSZGbui3SpXy+Pwqcy33LjhMr/KGnU3o0J538tf54MSb2
7YIDpCv9Yb1u8PuR0Wfp/P540//YyTJN0jl8RKVajNVoJtbiQ96mHOjZSn4u
HxF79tVvriqh8/PRdPtowKEY0sHHLZWIly1Sygfzsdlu7lU1EekyPrbI808N
NqN8DB8zWvyb190hlvNhuVtPbd4+8qfxUb3mha5qOunZfOz5YChIX3GGzs/H
gUcGb5Z6kK7gQ7dP0bec38S1fJzQHjgp6B35lXx8ylS7tPHJaTo/H1MfFstT
d5POAUwepzjvDaW8OvB2UbiFKp90LaCt4vxsiR/l9YCpfacF13UmnQv8TXI5
mlhEbA2YKrc/k24nPw8I7x1e9zCr+H/sCUSUlHwZN5t0AC19Ty+fo0V5KTD5
h19X3w/kDwbiF/zzmtiZOKw9nxE7xecOsQzt71PpLrFRNC8C6O4WWPdHTHpM
e79D5w2vZ576Hy8GYuJ6TF7jR7oceNM4WlhcQ5wM9Hi7bMSJfeRPA8zHep7f
cKvof5wBPP0udRueR3o2MGqw9ECwA+VzgdAoU/1IDun5QFhF5MepXpQvAVrP
fDuT2490BWCdXXozPI24Cvio9mPRWBn5a4HDNt7LVx4s/B/XAxuHtMgOJZGu
BITeM7+ptRI3AQP+c1VuriB/M2B772B2W2/iNqBaOODvuG/EnAAst15hMXks
5dUD8NKo3wpXK9K1AsA5NPzZ49UFtP8AjC3V0ngUQTo3AFbbPHavVhBbB8D/
2iLnSank5wXgzgruBLTl0/4DoDM4z8v9CekIQOph45h0G8pLA1CXr9g3kPmD
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
cgf//wBIkjj5
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[CompressedData["
1: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
wO/NoUKaz/EDJt0WTKg8JPg/wpFc8Q==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
3xUT1ad+mhJD/l3hl93l0XRav9AVVsLuBf2Kyb8r+roODH9xjPy7wtA2/0dj
Evl3Rc9bH+9JtpN/V7go/3S5fof8u6GrXlNiylXy74Z0ju2nXrvIvxtqM/o6
/neS/LthMP94H4P35N8NxwKmzy9Ukn83BKiO9H9cRP7dcMXL+KBlFfl3g3mv
Zcm/1e8y/27Yo3bPavIv8u8Gbp1HSwj1Z7nBO/LlHu478u8Gz3fX5yZYs3mF
G2qOzsnbq8e42g0apvP5k9+Qfzc8yR41/BbpNbth5LvT/stEjDnu4EW73Brt
xljLHS0DJl436caY647g+xUFljaMee5YPWfaSc1JjOGOYuNxS3cOZRzWMd+4
c/ZSM8Zyd6wxrou2ljCOd8faOSseWyWTf3dwLz2eMCqWcbo7djo4xS4KYpzl
Dm3hq5u3pzAu7Fh/m/ooxQHy745Q/++CLank3x12U0xkOmMZK91RqbHbVH8N
+XdHW5cd9XWXyL8HuDOkR6SHyb8HmoLOVoUsIf8eWLrsecgfqvM8cG9CWuOM
F+TfA7+Pz7dLuEL+PRDKK3Xm7iT/Hrjxj6A9sZL8e+DFwtr6OV1qmX8PHF0k
8zJ4Sf49EP1m3+X1peTfA3kJPkcz3pJ/D1RfcLJ6Y8nmFR37cTEKdFZlXO2B
4BnzRm6oI/8e4L023eynyerNHvComfz6poQxxxM/r0/dWGzGWMsTksRbT8x+
kH9PpK5RlsXyWJ3niatGkYm60xnDE3+dbRJyBYzDPLFWzbFIYsRY7ondS//7
az6CcbwnnEqt6xXryb8nKiMCLLtPZJzuiTMb8+d892ec5YlhbaO6jVnEuNAT
l16sibp+gvx7ov/z6Gu3k8m/Z8f34Mhv93GMlZ7ICH8R0nsv+ffE1CPaV+3u
kn8vzBrZPvfHIfLvhaLXxVlfkxhzvWA+8p61dzn598Icmd3KJ1/JvxfWvnHx
XVtB/r2QNsus0jeb/Hth61ifqjtN5N8LHomBkmeG95h/L1zf8a33fKqne+F5
5O2E9mvk3wsOAWtD7mqy/kIvfEg4mmQfxFjR0T/a/cs5DcbVXrjSeP2A73vy
74Xi3oJsHw9Wb/bCD/vit2cmMuZ4499V2SXjHBlrecMu2rvPBy3GXG8U5FXk
t49mzPPGFzNZe+paxvBGj6mDh4wMZRzmjeW5wyR9vRjLvXHy13FPg2TG8d64
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
jNA9pEv5S3HY4V3DThXKX4ru+2y7P/5N578UM+KDrWx7U/5S3PpZL7/Ri/Lv
8CfL8xj+jc5/KcTFh2PMWun8l0Jj0USV2d0ofyl8Up7uGETnl1KKvNg5u+bS
efpaii8la2oa39D5L8XBE7a+Nu10/kuRXm53xPoHnf8yzLqVEtWupPNfhobu
41Ls6XzXkmHtzKi34V/o/JdB/YPlvAl03nNlMP2Ue6z1Hp3/MtytiTj6he4/
PBl8n0r1W+n+4SOD2wd9gz8v6PyXYaX37vfjK+n875i/PmC+gDhMBrlfyOte
T+j+JwM+BBz5+4DOfxm6D0kZIyyj+58Mri6ZHKNzdP+TYUBQ0+z9NXT/k2Gq
Yujs6Tfo/idDlo7a9KzjdP+T4Wni8rgVBXT/k0HnbWLj8Qq6/8kQdSP4dNB5
uv/JkDE6Zlzifrr/ySB6MfXe/IOUvwxF9aEJfmfo/idD0Fq19mRaXyHDY9U+
l5TplL8MT9b1EP/OoPxlOH+/brr0GN3/ZJh3O+2SL91XlTKcyz2lvLmS8pfh
m0j1ofFayr/jee5s0H64j/KX4aZdyPmpWyj/gTiX+XKgaG49//8A4kx5yQ==

         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 50.}, {0, 0.519576543281159}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 50.}, {0, 0.519576543281159}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756982494723208*^9, 3.75698252609367*^9, {3.756982567878085*^9, 
   3.756982607808539*^9}, {3.7569826418386383`*^9, 3.756982688410695*^9}, 
   3.7569827332728233`*^9, 3.756982771821471*^9, 3.7569828230177107`*^9, {
   3.75698424460603*^9, 3.756984301023197*^9}, {3.756984487857339*^9, 
   3.756984525523018*^9}, 3.756984561462879*^9, 3.75698460718929*^9, 
   3.756984641717375*^9, 3.756984683597506*^9, {3.7569847319929647`*^9, 
   3.756984768933049*^9}, {3.7569851923321667`*^9, 3.756985308445128*^9}, {
   3.756985380933154*^9, 3.756985409883297*^9}, {3.7569854809215937`*^9, 
   3.756985501002739*^9}, {3.7569855339889383`*^9, 3.756985594282954*^9}, {
   3.756985637385233*^9, 3.7569856481424723`*^9}, 3.756985776700481*^9, 
   3.7569858558478622`*^9, 3.756985907047635*^9, 3.75698706231597*^9, 
   3.756987124960692*^9, {3.7569873278867073`*^9, 3.756987364531405*^9}, {
   3.756987412248629*^9, 3.7569874226891117`*^9}, 3.7569874784533653`*^9, {
   3.7569875165209017`*^9, 3.7569875239713*^9}, {3.756987576563612*^9, 
   3.7569876899906263`*^9}, 3.757319000855772*^9, 3.757319380182405*^9, 
   3.757319574290019*^9, 3.757319638863521*^9, {3.75731990536766*^9, 
   3.757319929949354*^9}, 3.757331015884241*^9, {3.7573311568895187`*^9, 
   3.7573311676001987`*^9}, {3.757331400714942*^9, 3.757331501136137*^9}, 
   3.757331554650779*^9, {3.7573315914448347`*^9, 3.757331626491968*^9}, {
   3.7573316756749372`*^9, 3.757331698005171*^9}, {3.7574731551404877`*^9, 
   3.7574732085125523`*^9}, 3.757473327383896*^9, 3.757665193791584*^9, 
   3.7576652534872913`*^9, {3.757665308803747*^9, 3.75766534677297*^9}, 
   3.7576653929146137`*^9, {3.757665431277872*^9, 3.7576654905449963`*^9}, 
   3.759456166781004*^9, 3.759456384171109*^9, 3.759456421164904*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
09R3Q2G1+ouIUuq7Ifbnf8ku1FHfDVf+KDhvLae+EPpnnIb5DmL7grkQ67QD
G49OpH1CiPbeK09mOrL9IVqIZ4oXmgf70X4hxD3blFb39czXC3F+xXxr7kHa
NwDewnoF/7PsuiYwEM05Mf0R/T4gfs/jc5IO5gFMqFl/8sQI2pd+XNfm9HZw
2L4UChz0WauX7Mv2q2hAKfCsUfk65pMAu/k2a2qSab8CNjgYPS+4ynwFYPKl
dq5+E/P1QP8Jq0y+Itv/5EDIF2+/k+a0H7qjTeU34flpbB/UdEfapp3d7eHM
m7sDq0MkCseZhzs0Vl29/KyM9kd31JXtm2MnYz7UHcJcnOkfwfbVaHc4/bK1
+qo522eT3GEDza+jfWnfdUfGqPEWG8OZr/jx+wOXNOgkMF/vjtvJ6er8y8zL
3fFZudZ6WAPtwyKsDxsnTvqTeU0RrLtemviqsn3dXATDJ85Rfhy2n0OEtkfD
n9/1pP1dhHOvdA73L2Q+VISJnIHTiluYjxaBW1hSuTGW+SQRVnN76oyP098D
IuS4G4zXy2e+QoSvIrXUolLm60UoXL/o7Og7zMtFGJr/5KNyDf294IE9Maov
9RqY1/RA8rSAkLhnNL8HDsZNf/6kieb3wJSFLwRdz2l+D/CW1ZRrNdD8HuhX
MVWxraX5PaCvsveq5kOa3wMRgtBRPWU0vwdalJ+25l2g+T2w3/ix9rxMmt8D
zYmRfRYHaH4PVHC0nE9tpvnF2CGuivUNovnFiMs6lHFcRPOLYTQ9+DjXhOYX
w25c4IY5I2h+MaYt0u5okrH/31Dxj/fVHb7rDXp+xCiunNwbkU7Pjxhh6e1n
7cPp+RHDTCX7tmAKPT9ilO0wMVxqSM+PGG/UWjjL/qLnX4xRS3N6DG/T8++J
3en6iRNS6Pn3RJNVVXliCD3/ntDUvabB4dLz7wnDgVKlT4Pp+feEz4mHjurV
9P31hNG4QarXkun764mqNymxs5bR99cTBa3bwvk29P31hKvfzFPGn9n5UOGJ
om3BcTF36LzxhHHYit9E8ew8kXuiUyXwSvwcOn8k2Jc30TZlEp0/EkxQnysw
6qLzVAKjXPnUxsvsPIQEmfKdyxfspvNVgqhaXN85g/lQCbI6OlR3aNF5K0G8
qMrGuo29T5IkGFkfLztwmd4fEgzl9Ip+iWbvlwoJfBpWfx7iR+8rCerio5S1
DZmXS1DhX/mptJv2Ey8kdssmh9xk+4umF2ZEtU+NPUr7kBc6OJEnHWk/hBeU
dOx3rRPQfuSFmHerNjepMx/qBXnrmc7WNhmb3wsqp7/Yd5bL2Pxe+Gl7rEXF
MRmb3wvO87epz9rAfIUXrmouk83wYb7eCw+VX+omWjAv94J2ybGUyqHMK0jx
wI8bXydrYfNL0WVYUrLrbgubXwr5kNnti063sPmlUJl9s2PXPub9pZjp4N0Q
u4r5UCniXo1MVpzOfLQUSlWW2uAynyTF8L2cI/t1mM+VYlL79jWHFJivkGJX
apZyY1szm1+K3VsLLnrUNrP5f/SmeRhdLWtm83tDaCDcpZjTLPwvtCDV3g==

      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5620339832700643},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Purity\"", TraditionalForm], None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 50.}, {0.5828883689764907, 0.9999760831050193}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.756982494723208*^9, 3.75698252609367*^9, {3.756982567878085*^9, 
   3.756982607808539*^9}, {3.7569826418386383`*^9, 3.756982688410695*^9}, 
   3.7569827332728233`*^9, 3.756982771821471*^9, 3.7569828230177107`*^9, {
   3.75698424460603*^9, 3.756984301023197*^9}, {3.756984487857339*^9, 
   3.756984525523018*^9}, 3.756984561462879*^9, 3.75698460718929*^9, 
   3.756984641717375*^9, 3.756984683597506*^9, {3.7569847319929647`*^9, 
   3.756984768933049*^9}, {3.7569851923321667`*^9, 3.756985308445128*^9}, {
   3.756985380933154*^9, 3.756985409883297*^9}, {3.7569854809215937`*^9, 
   3.756985501002739*^9}, {3.7569855339889383`*^9, 3.756985594282954*^9}, {
   3.756985637385233*^9, 3.7569856481424723`*^9}, 3.756985776700481*^9, 
   3.7569858558478622`*^9, 3.756985907047635*^9, 3.75698706231597*^9, 
   3.756987124960692*^9, {3.7569873278867073`*^9, 3.756987364531405*^9}, {
   3.756987412248629*^9, 3.7569874226891117`*^9}, 3.7569874784533653`*^9, {
   3.7569875165209017`*^9, 3.7569875239713*^9}, {3.756987576563612*^9, 
   3.7569876899906263`*^9}, 3.757319000855772*^9, 3.757319380182405*^9, 
   3.757319574290019*^9, 3.757319638863521*^9, {3.75731990536766*^9, 
   3.757319929949354*^9}, 3.757331015884241*^9, {3.7573311568895187`*^9, 
   3.7573311676001987`*^9}, {3.757331400714942*^9, 3.757331501136137*^9}, 
   3.757331554650779*^9, {3.7573315914448347`*^9, 3.757331626491968*^9}, {
   3.7573316756749372`*^9, 3.757331698005171*^9}, {3.7574731551404877`*^9, 
   3.7574732085125523`*^9}, 3.757473327383896*^9, 3.757665193791584*^9, 
   3.7576652534872913`*^9, {3.757665308803747*^9, 3.75766534677297*^9}, 
   3.7576653929146137`*^9, {3.757665431277872*^9, 3.7576654905449963`*^9}, 
   3.759456166781004*^9, 3.759456384171109*^9, 3.759456425568591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParitySimulation", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalOmega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"4", "*", "4.5"}]], ",", 
           FractionBox["1", 
            RowBox[{"4", "*", "4.0"}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"phi", "/", "t"}], ",", "0"}], "}"}]}], ";", 
      RowBox[{"\[Omega]", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Omega]Ion", "-", 
          RowBox[{"0.9", "\[Nu]"}]}], ",", 
         RowBox[{"\[Omega]Ion", "+", 
          RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
      RowBox[{"\[Nu]", "=", "1.5"}], ";", 
      RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
      RowBox[{"\[Eta]", "=", "0.1"}], ";", 
      RowBox[{"SimulationTime", "=", "5"}], ";", 
      RowBox[{"TwoIonSimulation", "[", 
       RowBox[{
       "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", 
        "MaxPhononNumber", ",", "SimulationTime", ",", "\"\<Individual\>\"", 
        ",", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"c", "[", "40", "]"}], "/.", "BangBangEvolution"}], "]"}], 
        ",", "0", ",", "True", ",", "False"}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"phi", ",", 
        RowBox[{
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
           "MaxPhononNumber"}], "]"}], "+", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "4", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
           "MaxPhononNumber"}], "]"}], "-", 
         RowBox[{"Population", "[", 
          RowBox[{
           RowBox[{"DensityMatrix", "[", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"c", "[", "2", "]"}], "/.", 
              RowBox[{"expoteSolution", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
           "MaxPhononNumber"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", "1", ",", 
       RowBox[{"1", "/", "50"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], "&"}], "@",
    "ParitySimulation"}]}]], "Input",
 CellChangeTimes->{{3.759456239388802*^9, 3.759456307535013*^9}, {
  3.759456431339191*^9, 3.759456451257697*^9}, {3.759456617924204*^9, 
  3.759456628720809*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9U2tIU1EcF1OUQZQxyl6KHyYmouSajw/6Uz+kiCTTT9IMM1RslLPAyKyM
MDHER80PqRDqLCIYsiwVRFNHPjIp34avebXZPffeqTEVkdbudm4/uFzu4/97
nXOCcosy8jw9PDyUzku8S2AL+uJCJggeyI3JllI9zI938+Y7pGcDLKY6IaWa
oDuggqi7jXh5/cnZ2FzpeyesjJlxXCJofCWiB8tq76oCH+n/PrzWrpDyRRac
WnwzgAS1QlvcxdJ5M9o/9ZfEN7GQzbXp4mTDUPjpwxqfs5RvFNeO3U/orGRx
QVM7aA8Zx5u6HdUJPUv5J6B3GB8Wd7AwOKfn2r7DM6Lq1sf/ej9gklVeWTtF
oHRhCqnKFl6RI/mfRvD2RfAmgiF7iFNhBmFeR2a9j3LUzxzSy0ejR29yyHAJ
zkMbHVGSPsJRfwtoib/saA/iYSkVCX8i/ulAps9dnvpdxIfo3cTjPTyKRXu6
JfgtpGltWzz1vwzVAaOs9hfgXo1VnEz2MreGCzTPKpr1Z3RTkQJS3ALYyyls
MygEms+Chhuncc9XgKimqV3Duq5UdXuJp3kZmJ4N7aS+5eGOw8BreGw6oZCn
+dcRU7PzaDCYR6BoJ2AD57ODo9IYjvaxgcT3Wc3hrRzyXfiFMIb3z86X+rGi
2l52mBTJQWSTG62InZn92+Ij9bWJF6r6c2VWgl2Rzr6JSf+VQNmktF9+gznY
V/d/IXDVE8fiXXrSYZaZ0D5ZfB5Za3CMELjsVRCsyjObcp3z7n45FH2tMduW
CL6Ni+Bg0FTdcWwS2jeP7Jj9UN9tAldcuQB9VObyxB9pfwoo2evtqrcRuOg0
NowPXB0LZQhdjy1I5+Mf3lGiiw==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw9U2tIU1EcF1OUQZQxyl6KHyYmouSajw/6Uz+kiCTTT9IMM1RslLPAyKyM
MDHER80PqRDqLCIYsiwVRFNHPjIp34avebXZPffeqTEVkdbudm4/uFzu4/97
nXOCcosy8jw9PDyUzku8S2AL+uJCJggeyI3JllI9zI938+Y7pGcDLKY6IaWa
oDuggqi7jXh5/cnZ2FzpeyesjJlxXCJofCWiB8tq76oCH+n/PrzWrpDyRRac
WnwzgAS1QlvcxdJ5M9o/9ZfEN7GQzbXp4mTDUPjpwxqfs5RvFNeO3U/orGRx
QVM7aA8Zx5u6HdUJPUv5J6B3GB8Wd7AwOKfn2r7DM6Lq1sf/ej9gklVeWTtF
oHRhCqnKFl6RI/mfRvD2RfAmgiF7iFNhBmFeR2a9j3LUzxzSy0ejR29yyHAJ
zkMbHVGSPsJRfwtoib/saA/iYSkVCX8i/ulAps9dnvpdxIfo3cTjPTyKRXu6
JfgtpGltWzz1vwzVAaOs9hfgXo1VnEz2MreGCzTPKpr1Z3RTkQJS3ALYyyls
MygEms+Chhuncc9XgKimqV3Duq5UdXuJp3kZmJ4N7aS+5eGOw8BreGw6oZCn
+dcRU7PzaDCYR6BoJ2AD57ODo9IYjvaxgcT3Wc3hrRzyXfiFMIb3z86X+rGi
2l52mBTJQWSTG62InZn92+Ij9bWJF6r6c2VWgl2Rzr6JSf+VQNmktF9+gznY
V/d/IXDVE8fiXXrSYZaZ0D5ZfB5Za3CMELjsVRCsyjObcp3z7n45FH2tMduW
CL6Ni+Bg0FTdcWwS2jeP7Jj9UN9tAldcuQB9VObyxB9pfwoo2evtqrcRuOg0
NowPXB0LZQhdjy1I5+Mf3lGiiw==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.8233334982606468},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0.8290654429660937, 0.9437043370750362}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7594562810052347`*^9, {3.75945643337503*^9, 3.759456480812853*^9}, {
   3.7594566228426037`*^9, 3.7594566316571407`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Threshold", "[", 
       RowBox[{"#", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], "]"}], "&"}], "@", 
     RowBox[{"ReducedSpinDensityMatrix", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"c", "[", "40", "]"}], "/.", "BangBangEvolution"}], "]"}], 
       ",", "MaxPhononNumber"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.757665313362768*^9, 3.757665315088697*^9}, 
   3.759458986218961*^9}]
}, Open  ]]
}, Open  ]],

Cell["Adiabatic evolution meanwhile maintain the coherence", "Section",
 CellChangeTimes->{{3.7573205316542473`*^9, 3.757320544814825*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytic Simulation", "Title",
 CellChangeTimes->{{3.759459333388933*^9, 3.759459338394897*^9}}],

Cell[CellGroupData[{

Cell["Parity measurement", "Chapter",
 CellChangeTimes->{{3.7594593502155037`*^9, 3.759459355299635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"AnalyticParityEvolve", "[", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0.5", "0", "0", 
         RowBox[{
          RowBox[{"-", "0.5"}], "I"}]},
        {"0", "0", "0", "0"},
        {"0", "0", "0", "0"},
        {
         RowBox[{"0.5", "I"}], "0", "0", "0.5"}
       }], "\[NoBreak]", ")"}], ",", "a", ",", "b"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.759460540448352*^9, {3.7594609796673326`*^9, 3.75946100885259*^9}, {
   3.760094248732283*^9, 3.7600943369817457`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    1.1435397259066846`, $CellContext`b$$ = 1.3069025438933541`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"\:65e0\:6807\:9898\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 2 Pi}, {
      Hold[$CellContext`b$$], 0, 2 Pi}}, Typeset`size$$ = {847., {3., 10.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$139465$$ = 0, $CellContext`b$139466$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`b$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$139465$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$139466$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`AnalyticParityEvolve[{{0.5, 0, 0, (-0.5) I}, {0, 
         0, 0, 0}, {0, 0, 0, 0}, {
         0.5 I, 0, 0, 0.5}}, $CellContext`a$$, $CellContext`b$$], 
      "Specifications" :> {{$CellContext`a$$, 0, 2 Pi}, {$CellContext`b$$, 0, 
         2 Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{892., {65., 71.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.759460540979067*^9, {3.759460982802744*^9, 3.7594610095423117`*^9}, 
   3.7600942724386263`*^9, {3.760094312829261*^9, 3.760094337516275*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AnalyticParityEvolve", "[", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0.5`", "0.5`", "0"},
       {"0", "0.5`", "0.5`", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   RowBox[{"\[Pi]", "/", "2"}], ",", 
   RowBox[{"\[Pi]", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.759460552740077*^9, 3.75946060827944*^9}, 
   3.75947114724432*^9, {3.760094281145042*^9, 3.760094284476143*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzbyf69xj00Y7BjD4YB+UI3lrxqT19jD+xE8xm6dN
2g/nWx/14nIqvgDnF1T5JW4uuAHn5+5I7WNSfgDnX3nhybk86Qmc36X/jWFb
5As4v1D7xNQDS9/A+b+Ss9fdzfsA5yftDQuYkPYJzk/+eOXAgY4vcH6Pwfb8
ZW3f4HymA9vNW6p+wPmCWt7n7s/4Bed7zHda/GHSHzhf/P0Zt/rt/+D8Wcd3
MTJnMjjA+Dayjv8VUhjhfO0HAk9qS5jg/LUrhDK2FjHD+TX3Yi9rt7HA+YU2
Ft7zprDC+b/muyS9nsAG518omJVQvogdzrd0V/p3dyEHnH/S1XKFwxxOOH/p
xpmWj1ZzwfmiyjpZcSu54fxLjBxNknt44PytHMXLLpzkhfN1RAWyko7ywfnv
+76JGF/jh/OV29v187ME4PxHUbdvOT1H8D2eXv65NU8Qzq8oSs0Qe4vg+22b
7SVWJgTnv/uTVcP8DcFfeL1xS16xMCI8MmwTKn8j+LJ/J0YXVonA+c/cu09x
sIjC+YfVztjLdSP4WRzLWBQ5xeD87QtUbA9PRPDPWdscDRIUh/N/ZM0OTuhD
8E8EzA/lFZOA85MsbZYvn4Lge+0qqgy8jeAbWq/0/q0oCecDAKiD9UY=
       "]]},
     Annotation[#, "Charting`Private`Tag$119385#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{0, 2 Pi}, {0., 2.}}, {{0, 6.283185307179586}, {0., 2.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7594605818610783`*^9, 3.759460608740234*^9}, {
  3.76009428172362*^9, 3.760094284906334*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Multi-mode Simulation", "Title",
 CellChangeTimes->{{3.763892897158181*^9, 3.7638929044164248`*^9}}],

Cell[CellGroupData[{

Cell["Pre-function", "Chapter",
 CellChangeTimes->{{3.756980067107995*^9, 3.756980078116983*^9}, {
  3.756980119679235*^9, 3.756980125319233*^9}}],

Cell[CellGroupData[{

Cell["Basic Function", "Section",
 CellChangeTimes->{{3.735541742086438*^9, 3.735541744572085*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinEigenstate", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"PhononEigenstate", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "circle", "}"}], ",", 
     RowBox[{
      RowBox[{"circle", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Nest", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Permute", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Cycles", "[", 
              RowBox[{"{", "circle", "}"}], "]"}]}], "]"}], "&"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "1"}],
             "}"}], "//", "Flatten"}], ",", "j"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7307101186242743`*^9, 3.730710161881748*^9}, {
  3.735614174579564*^9, 3.7356141801616173`*^9}, {3.7356142194599113`*^9, 
  3.73561424928274*^9}, {3.73561428398462*^9, 3.735614298093095*^9}, {
  3.735615287595399*^9, 3.7356152877446833`*^9}, {3.735615458751697*^9, 
  3.735615540623932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DensityMatrix", "[", "State_", "]"}], ":=", 
  FractionBox[
   RowBox[{"Outer", "[", 
    RowBox[{"Times", ",", 
     RowBox[{"Conjugate", "@", "State"}], ",", "State"}], "]"}], 
   RowBox[{
    RowBox[{"Conjugate", "@", "State"}], ".", "State"}]]}]], "Input",
 CellChangeTimes->{{3.7356144936946774`*^9, 3.7356145022294073`*^9}, {
  3.7356145554753227`*^9, 3.7356145874298887`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReducedSpinDensityMatrix", "[", 
   RowBox[{"State_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "wholeDensityMatrix", "}"}], ",", 
    RowBox[{
     RowBox[{"wholeDensityMatrix", "=", 
      RowBox[{"DensityMatrix", "[", "State", "]"}]}], ";", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Normalize", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"Nest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Permute", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Cycles", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}],
                     "]"}]}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  "i"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
                 
                 RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".",
            "wholeDensityMatrix", ".", 
           RowBox[{"(", 
            RowBox[{"Normalize", "@", 
             RowBox[{"Flatten", "@", 
              RowBox[{"KroneckerProduct", "[", 
               RowBox[{
                RowBox[{"Nest", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Permute", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Cycles", "[", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}],
                     "]"}]}], "]"}], "&"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
                  "j"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
                 
                 RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", 
            RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
        "Chop"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.757319101445539*^9, 3.757319121629839*^9}, {
  3.757319192091464*^9, 3.757319269935294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PopulationSingleParticle", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", "g"}], "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
              "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", "g"}], "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7539329393009977`*^9, 3.753932956193926*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Population", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "g"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "g"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "p", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", 
       RowBox[{"PhononNumber", "+", "1"}]}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7307110414500566`*^9, 3.7307110666835003`*^9}, {
   3.7307111997801123`*^9, 3.7307112734743276`*^9}, 3.7307113318256655`*^9, {
   3.730761042212937*^9, 3.7307610583718605`*^9}, {3.7307612002419753`*^9, 
   3.730761203041136*^9}, {3.730796868454355*^9, 3.7307968962869463`*^9}, {
   3.730796982701889*^9, 3.730796989973305*^9}, {3.735614876597836*^9, 
   3.735614946903778*^9}, {3.7356150038844433`*^9, 3.735615018697229*^9}, {
   3.735615306097938*^9, 3.735615307141433*^9}, {3.735615406632887*^9, 
   3.735615406981205*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PhononDistribution", "[", 
   RowBox[{"M_", ",", "g_", ",", "PhononNumber_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "p"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "g", "]"}], "]"}]}], "]"}], "]"}]}], ")"}], ".", "M",
       ".", 
      RowBox[{"(", 
       RowBox[{"Normalize", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Permute", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Cycles", "[", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "}"}], 
                 "]"}]}], "]"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", "p"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"PhononEigenstate", "[", "PhononNumber", "]"}], "[", 
            RowBox[{"[", "g", "]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
   "Chop"}]}]], "Input",
 CellChangeTimes->{{3.7415702639739017`*^9, 3.7415703199281025`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UParity", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]_"}], "]"}], "=", 
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}], 
      RowBox[{
       RowBox[{"-", "I"}], " ", 
       SuperscriptBox["E", 
        RowBox[{"I", " ", "\[Phi]"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "I"}], " ", 
       SuperscriptBox["E", 
        RowBox[{
         RowBox[{"-", "I"}], " ", "\[Phi]"}]], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "/", "2"}], "]"}]}
    }], "\[NoBreak]", ")"}]}]], "Input",
 CellChangeTimes->{{3.759459358105268*^9, 3.7594594063604116`*^9}, {
  3.760094102492169*^9, 3.760094166922532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]", "2"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Theta]", "2"], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.759459407097806*^9, 3.759471852628113*^9, 3.760092802994104*^9, {
   3.760094171466195*^9, 3.7600941974682407`*^9}, 3.763893718721591*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UParityTwoIon", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], "=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"UParity", "[", 
     RowBox[{"\[Phi]", ",", "\[Theta]1"}], "]"}], ",", 
    RowBox[{"UParity", "[", 
     RowBox[{"\[Phi]", ",", "\[Theta]2"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.759459411366664*^9, 3.759459454127335*^9}, {
  3.760094178830119*^9, 3.760094196234042*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "\[Phi]"}]]}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]1", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]"}]], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]1", "2"], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Theta]2", "2"], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7594594141109858`*^9, 3.7594594167729053`*^9}, 
   3.75945945461372*^9, 3.759471852672947*^9, 3.760092803060317*^9, 
   3.760094199193387*^9, 3.763893718811927*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AnalyticParityEvolve", "[", 
   RowBox[{"\[Rho]_", ",", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[Rho]AfterParity", "}"}], ",", 
    RowBox[{
     RowBox[{"\[Rho]AfterParity", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Refine", "[", 
         RowBox[{
          RowBox[{"ComplexExpand", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"UParityTwoIon", "[", 
              RowBox[{"\[Phi]", ",", "\[Theta]1", ",", "\[Theta]2"}], "]"}], 
             ".", "\[Rho]", ".", 
             RowBox[{
              RowBox[{"UParityTwoIon", "[", 
               RowBox[{"\[Phi]", ",", "\[Theta]1", ",", "\[Theta]2"}], "]"}], 
              "\[ConjugateTranspose]"}]}], ")"}]}], ",", 
          RowBox[{"\[Phi]", "\[Element]", "Reals"}]}], "]"}], "//", "Chop"}], 
       "//", "FullSimplify"}]}], ";", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}], "-", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"\[Rho]AfterParity", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7594604794319143`*^9, 3.7594605235774193`*^9}, {
  3.7600942087642927`*^9, 3.760094232136155*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Matrixs", "Section",
 CellChangeTimes->{{3.735536939642934*^9, 3.735536950527709*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxPhononNumber", "=", "4"}], ";"}]], "Input",
 CellChangeTimes->{{3.735540973887891*^9, 3.735540986895095*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Id", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Px", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Py", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pz", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pm", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]x", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Px", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]y", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Py", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]z", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pz", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]p", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pp", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]m", "[", "j_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", " ", 
     SuperscriptBox["2", 
      RowBox[{"NumofIons", "-", "j"}]], "]"}], ",", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"Pm", ",", 
      RowBox[{"IdentityMatrix", "[", " ", 
       SuperscriptBox["2", 
        RowBox[{"j", "-", "1"}]], "]"}]}], "]"}]}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "x"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1"},
      {"1", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "z"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0"},
      {"0", 
       RowBox[{"-", "1"}]}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "y"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", 
       RowBox[{"-", "I"}]},
      {"I", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "+"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "1"},
      {"0", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Sigma]", "-"], "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0"},
      {"1", "0"}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"a", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "-", "1"}]}], "]"}], 
        SqrtBox["j"]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}], ",", 
     
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"adag", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "+", "1"}]}], "]"}], 
        SqrtBox[
         RowBox[{"j", "+", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}], ",", 
     
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}]}], ";", 
  RowBox[{"b", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "-", "1"}]}], "]"}], 
        SqrtBox["j"]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"bdag", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"KroneckerDelta", "[", 
         RowBox[{"i", ",", 
          RowBox[{"j", "+", "1"}]}], "]"}], 
        SqrtBox[
         RowBox[{"j", "+", "1"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726362943681505*^9, 3.7263629676883783`*^9}, {
   3.726363631390667*^9, 3.726363646560259*^9}, 3.726363738418151*^9, {
   3.729248960306776*^9, 3.729249014398572*^9}, {3.729249066088626*^9, 
   3.729249071735437*^9}, {3.7292491113875217`*^9, 3.729249116613011*^9}, {
   3.7292494578750753`*^9, 3.729249461178195*^9}, {3.729249646860078*^9, 
   3.729249654040284*^9}, {3.730631934481776*^9, 3.730631954416917*^9}, {
   3.733044962909903*^9, 3.73304497565516*^9}, {3.735540966293165*^9, 
   3.735540995599413*^9}, {3.735541439374699*^9, 3.7355414683897142`*^9}, {
   3.735541502812069*^9, 3.735541507708048*^9}, {3.763892948520895*^9, 
   3.763892985082419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpinRotation", "[", 
   RowBox[{"\[Theta]_", ",", "\[CurlyPhi]_"}], "]"}], ":=", 
  RowBox[{"MatrixExp", "[", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      FractionBox["\[Theta]", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], "NumofIons"], 
           RowBox[{"\[Sigma]x", "[", "k", "]"}]}], ")"}], 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], "NumofIons"], 
           RowBox[{"\[Sigma]y", "[", "k", "]"}]}], ")"}], 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}], ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.757474072438566*^9, 3.757474107103876*^9}, {
  3.757474176962634*^9, 3.75747418016044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]Z", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "z"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], "}"}]}],
       "}"}], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.735540942063628*^9, 3.7355409538341303`*^9}, {
   3.735541003212188*^9, 3.735541016403418*^9}, {3.735541055009431*^9, 
   3.7355410579088707`*^9}, {3.735541148555523*^9, 3.735541202675058*^9}, {
   3.7355412682873383`*^9, 3.735541274678626*^9}, 3.735541360307719*^9, {
   3.735541390655395*^9, 3.735541390811715*^9}, {3.763892995315168*^9, 
   3.7638930076608553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]P", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "+"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], "}"}]}],
       "}"}], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7355420028979387`*^9, 3.735542012135611*^9}, 
   3.76389301469097*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Sigma]M", "[", "i_", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "@@", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Permute", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Cycles", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], "&"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
           SubscriptBox["\[Sigma]", "-"]}], "}"}], ",", "i"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], "}"}]}],
       "}"}], ",", "1"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.735542018415069*^9, 3.735542025403665*^9}, 
   3.763893017774539*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pnt", "=", "800"}], ";", 
  RowBox[{
   RowBox[{"TwoIonSimulationTwoMode", "[", 
    RowBox[{
    "\[CapitalOmega]_", ",", "\[Delta]_", ",", "\[Nu]_", ",", 
     "MaxPhononNumber_", ",", "SimulationTime_", ",", "only_", ",", 
     RowBox[{"initialState_:", " ", 
      RowBox[{"Normalize", "[", 
       RowBox[{
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
              "]"}]}], "}"}], "//", "Flatten"}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"Table", "[", 
              RowBox[{"0", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "MaxPhononNumber"}], "}"}]}], 
              "]"}]}], "}"}], "//", "Flatten"}]}], "]"}], "//", "Flatten"}], 
       "]"}]}], ",", 
     RowBox[{"Hamcar_:", "0"}], ",", 
     RowBox[{"export_:", "False"}], ",", 
     RowBox[{"plotTrue_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "IHamiltonian", ",", "a", ",", "adag", ",", "b", ",", "bdag", ",", 
       "\[Sigma]Z", ",", "\[Sigma]P", ",", "\[Sigma]M", ",", "sol", ",", 
       "data", ",", "Hambsb", ",", "Hamrsb", ",", "\[Delta]\[Omega]b", ",", 
       "\[Delta]\[Omega]r", ",", "end"}], "}"}], ",", 
     RowBox[{
      RowBox[{"\[Delta]\[Omega]b", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"\[Delta]\[Omega]r", "=", 
       RowBox[{"2", "\[Pi]", " ", 
        RowBox[{"\[Delta]", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
      RowBox[{"a", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], 
            SqrtBox["j"]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"adag", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], 
            SqrtBox[
             RowBox[{"j", "+", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"MaxPhononNumber", "+", "1"}], "]"}]}], "]"}]}], ";", 
      RowBox[{"b", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "-", "1"}]}], "]"}], 
            SqrtBox["j"]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}],
         "]"}]}], ";", 
      RowBox[{"bdag", "=", 
       RowBox[{"KroneckerProduct", "[", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
         RowBox[{"IdentityMatrix", "[", 
          RowBox[{"MaxPhononNumber", "+", "1"}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"KroneckerDelta", "[", 
             RowBox[{"i", ",", 
              RowBox[{"j", "+", "1"}]}], "]"}], 
            SqrtBox[
             RowBox[{"j", "+", "1"}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "MaxPhononNumber"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "MaxPhononNumber"}], "}"}]}], "]"}]}],
         "]"}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]Z", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "z"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], 
             "}"}]}], "}"}], ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]P", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "+"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], 
             "}"}]}], "}"}], ",", "1"}], "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"\[Sigma]M", "[", "i_", "]"}], ":=", 
       RowBox[{"KroneckerProduct", "@@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Nest", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Permute", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"Cycles", "[", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "}"}], "]"}]}], "]"}], 
               "&"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
                SubscriptBox["\[Sigma]", "-"]}], "}"}], ",", "i"}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"IdentityMatrix", "[", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "]"}], 
             "}"}]}], "}"}], ",", "1"}], "]"}]}]}], ";", 
      RowBox[{"Hambsb", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"b", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"bdag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}]}], " ", 
                 ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"]}], 
                "]"}]}], ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
             "\[ImaginaryI]", " ", "\[Delta]\[Omega]b", "  ", "t"}]]}]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"b", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"bdag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}]}], " ", 
                 ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"]}], 
                "]"}]}], ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]b", "  ", 
              "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
      RowBox[{"Hamrsb", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]P", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"b", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"bdag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}]}], " ", 
                 ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"]}], 
                "]"}]}], ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
             "\[ImaginaryI]", " ", "\[Delta]\[Omega]r", "  ", "t"}]]}]}], "+", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"ni", "=", "1"}], "2"], 
           RowBox[{"2", "\[Pi]", " ", 
            RowBox[{"\[CapitalOmega]", "[", 
             RowBox[{"[", 
              RowBox[{"4", ",", "ni"}], "]"}], "]"}], 
            RowBox[{
             RowBox[{"\[Sigma]M", "[", "ni", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"a", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"adag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"b", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}], "+", 
                  RowBox[{"bdag", " ", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "2", "\[Pi]", " ", 
                    RowBox[{"\[Nu]", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "t"}]]}]}], " ", 
                 ")"}]}], "+", 
               RowBox[{"IdentityMatrix", "[", 
                RowBox[{"4", "*", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"]}], 
                "]"}]}], ")"}]}], "*", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Delta]\[Omega]r", "  ", 
              "t"}]]}]}]}], "//", "Chop"}], "//", "Simplify"}]}], ";", 
      RowBox[{"IHamiltonian", "=", 
       RowBox[{"Hambsb", "+", "Hamrsb", "+", "Hamcar"}]}], ";", 
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"I", " ", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"c", "[", "t", "]"}], ",", "t"}], "]"}]}], "\[Equal]", 
            
            RowBox[{
             RowBox[{"(", "IHamiltonian", ")"}], ".", 
             RowBox[{"c", "[", "t", "]"}]}]}], ",", 
           RowBox[{
            RowBox[{"c", "[", "0", "]"}], "\[Equal]", "initialState"}]}], 
          "}"}], ",", "c", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "SimulationTime"}], "}"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", "Infinity"}]}], "]"}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{";", 
      RowBox[{"If", "[", 
       RowBox[{"export", ",", 
        RowBox[{"expoteSolution", "=", "sol"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"plotTrue", "\[Equal]", "False"}], ",", 
        RowBox[{"Goto", "[", "end", "]"}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"only", "\[Equal]", "\"\<Individual\>\""}], ",", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{"Population", "[", 
               RowBox[{
                RowBox[{"DensityMatrix", "[", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   RowBox[{"c", "[", "t", "]"}], "/.", 
                   RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "i", 
                ",", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", 
                 "1"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
              RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"data", ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], 
                "}"}]}], ")"}]}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
               "\"\<00\>\""}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"t", ",", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"Population", "[", 
                 RowBox[{
                  RowBox[{"DensityMatrix", "[", 
                   RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", 
                  ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", 
                   "1"}]}], "]"}]}], "+", 
               RowBox[{"Population", "[", 
                RowBox[{
                 RowBox[{"DensityMatrix", "[", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", 
                 ",", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", 
                  "1"}]}], "]"}], "+", 
               RowBox[{"Population", "[", 
                RowBox[{
                 RowBox[{"DensityMatrix", "[", 
                  RowBox[{"Evaluate", "[", 
                   RowBox[{
                    RowBox[{"c", "[", "t", "]"}], "/.", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", 
                 ",", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", 
                  "1"}]}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
              RowBox[{"SimulationTime", "/", "pnt"}]}], "}"}]}], "]"}]}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{"data", ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], "]"}]}]}], 
       "]"}], ";", 
      RowBox[{"Label", "[", "end", "]"}], ";"}], "*)"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.740907606777033*^9, 3.7409076822283487`*^9}, {
   3.7409077209495635`*^9, 3.740907749420192*^9}, {3.7409078041393213`*^9, 
   3.7409079245032063`*^9}, {3.7409079759671497`*^9, 3.740907978192277*^9}, {
   3.740908075014815*^9, 3.7409081233435793`*^9}, {3.7409081580695653`*^9, 
   3.7409081958707275`*^9}, 3.7409083146205196`*^9, {3.7409085249615507`*^9, 
   3.7409085369742374`*^9}, {3.74090857023814*^9, 3.740908611379493*^9}, {
   3.74090864925966*^9, 3.7409086494436703`*^9}, {3.7409087271631155`*^9, 
   3.7409087295392513`*^9}, {3.740908760091999*^9, 3.740908766476364*^9}, {
   3.7409089855358934`*^9, 3.7409089861039257`*^9}, {3.7409091409447823`*^9, 
   3.74090915366651*^9}, {3.7409096309268084`*^9, 3.7409096614065514`*^9}, {
   3.7409096942094274`*^9, 3.740909718613823*^9}, {3.740909773295951*^9, 
   3.7409097744780183`*^9}, {3.7409970479684987`*^9, 3.740997051421696*^9}, {
   3.7410396270058804`*^9, 3.74103963486833*^9}, {3.741041290590032*^9, 
   3.7410413074869986`*^9}, {3.7410430913970323`*^9, 
   3.7410430934861517`*^9}, {3.741043227167798*^9, 3.7410432672430897`*^9}, {
   3.741043304625228*^9, 3.741043317713977*^9}, {3.7410433937443256`*^9, 
   3.741043406480054*^9}, {3.7410438096061115`*^9, 3.7410438144303875`*^9}, {
   3.741056865967491*^9, 3.7410568743729715`*^9}, {3.741058150383956*^9, 
   3.7410581753893857`*^9}, {3.741058210290382*^9, 3.7410582612482967`*^9}, 
   3.741058353320563*^9, {3.741058390190672*^9, 3.7410585976785393`*^9}, {
   3.7410586652034016`*^9, 3.741058755955592*^9}, {3.741058798315015*^9, 
   3.7410588116577783`*^9}, {3.741058847492828*^9, 3.7410588521560946`*^9}, {
   3.741058925230274*^9, 3.7410589289234858`*^9}, {3.741059005484864*^9, 
   3.7410590197496805`*^9}, {3.7410590538996334`*^9, 3.741059139938555*^9}, 
   3.741059179955844*^9, {3.741073880515668*^9, 3.7410739004178057`*^9}, 
   3.7410740436199965`*^9, {3.741074096322011*^9, 3.7410741319110465`*^9}, 
   3.7410742326638093`*^9, {3.741075305744186*^9, 3.7410753808724833`*^9}, {
   3.7410754646652756`*^9, 3.741075543014757*^9}, {3.741078063140133*^9, 
   3.741078069505497*^9}, {3.7411527011397676`*^9, 3.7411527066670837`*^9}, {
   3.741153167858463*^9, 3.741153193217913*^9}, {3.741153255063451*^9, 
   3.7411532758686404`*^9}, {3.741153357102287*^9, 3.7411533882500687`*^9}, {
   3.7411537507428017`*^9, 3.741153758615252*^9}, {3.7411538080160775`*^9, 
   3.7411538306003695`*^9}, {3.7411544963914504`*^9, 3.741154561924199*^9}, 
   3.741154615391257*^9, {3.7411547396973667`*^9, 3.741154789249201*^9}, {
   3.741154900344555*^9, 3.741154905705862*^9}, {3.7413143116382656`*^9, 
   3.7413143214788284`*^9}, {3.7413144007933655`*^9, 
   3.7413144038755417`*^9}, {3.74131544988437*^9, 3.7413154646872163`*^9}, {
   3.7413155349412346`*^9, 3.741315570101246*^9}, {3.7413169904824867`*^9, 
   3.741317050780936*^9}, {3.741318972897875*^9, 3.7413190117700977`*^9}, {
   3.741319046460082*^9, 3.74131909957812*^9}, {3.7413191974217167`*^9, 
   3.7413192111034994`*^9}, {3.741319336316661*^9, 3.741319359886009*^9}, {
   3.741319390367752*^9, 3.741319398703229*^9}, {3.7413210980374255`*^9, 
   3.741321111963222*^9}, 3.741332484098671*^9, {3.741334019692502*^9, 
   3.741334033258278*^9}, {3.7413340728825445`*^9, 3.741334086219307*^9}, {
   3.7415691250687604`*^9, 3.741569144188854*^9}, 3.741569204245289*^9, {
   3.741569234460017*^9, 3.7415692367881503`*^9}, {3.741569302252895*^9, 
   3.741569345900391*^9}, {3.7415694827172165`*^9, 3.741569532275051*^9}, {
   3.7415698678882475`*^9, 3.74156987353557*^9}, {3.741570215807147*^9, 
   3.741570222020502*^9}, 3.7415704177186956`*^9, {3.756506377697969*^9, 
   3.756506381747332*^9}, {3.7565067798624268`*^9, 3.756506807787545*^9}, {
   3.756507349826872*^9, 3.756507383039626*^9}, {3.756507608822401*^9, 
   3.756507641659936*^9}, {3.756507741718251*^9, 3.7565077420583143`*^9}, {
   3.756507777160894*^9, 3.756507792915447*^9}, {3.756507834289385*^9, 
   3.756507929405039*^9}, {3.756509663096066*^9, 3.756509710602314*^9}, {
   3.756509984332872*^9, 3.7565099889123783`*^9}, {3.756510729443226*^9, 
   3.756510798312159*^9}, {3.756980398715255*^9, 3.7569804475419197`*^9}, {
   3.756981702639697*^9, 3.756981713958783*^9}, 3.7569817525357*^9, {
   3.756981796533292*^9, 3.756981802135212*^9}, {3.7569819112253857`*^9, 
   3.7569819780969067`*^9}, {3.7569820229390383`*^9, 
   3.7569820230929813`*^9}, {3.756982279601139*^9, 3.756982295001837*^9}, {
   3.756982710461275*^9, 3.756982718834388*^9}, {3.7569857483474207`*^9, 
   3.756985757374257*^9}, {3.756985826571913*^9, 3.756985828180088*^9}, {
   3.756985891364262*^9, 3.756985894471477*^9}, 3.757068405355926*^9, {
   3.7570684991443253`*^9, 3.757068518455181*^9}, {3.757068553110278*^9, 
   3.757068602308579*^9}, 3.757318978672659*^9, {3.757330735498168*^9, 
   3.757330738554386*^9}, {3.759444622792911*^9, 3.7594446481959763`*^9}, {
   3.75944469406975*^9, 3.759444696440651*^9}, {3.7594449188401337`*^9, 
   3.759444952631028*^9}, {3.759446176177875*^9, 3.759446178900278*^9}, {
   3.759446499049243*^9, 3.7594464995829067`*^9}, 3.759446549727826*^9, {
   3.7594466167844543`*^9, 3.759446625209323*^9}, {3.763893042261392*^9, 
   3.763893064704752*^9}, {3.763893461201932*^9, 3.7638935636591187`*^9}, {
   3.76389360668017*^9, 3.763893608351679*^9}, {3.763893762807712*^9, 
   3.7638937912669687`*^9}, {3.7638938705604897`*^9, 3.763893891699986*^9}, {
   3.7638939553444223`*^9, 3.763894021311862*^9}, {3.7638940620324306`*^9, 
   3.763894272125321*^9}, {3.763894314212943*^9, 3.7638943697108088`*^9}, 
   3.7638944880458717`*^9, {3.7638956348004017`*^9, 3.763895637611787*^9}, 
   3.763896304994096*^9, {3.7638963415581827`*^9, 3.7638963440630198`*^9}, 
   3.763896442075526*^9, 3.763896479354293*^9, 3.763896591398657*^9, 
   3.763896776575292*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Chapter",
 CellChangeTimes->{{3.763893708134116*^9, 3.7638937094109097`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "TwoIonSimulationTwoMode", "]"}]], "Input",
 CellChangeTimes->{{3.763894229618208*^9, 3.7638942333778048`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", "*", "4.5"}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"\[Delta]", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";", 
  RowBox[{"\[Omega]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]Ion", "-", 
      RowBox[{"0.9", "\[Nu]"}]}], ",", 
     RowBox[{"\[Omega]Ion", "+", 
      RowBox[{"0.9", "\[Nu]"}]}]}], "}"}]}], ";", 
  RowBox[{"\[Nu]", "=", 
   RowBox[{"{", 
    RowBox[{"20", ",", "10"}], "}"}]}], ";", 
  RowBox[{"\[Omega]Ion", "=", "10"}], ";", 
  RowBox[{"\[Eta]", "=", "0.1"}], ";", 
  RowBox[{"SimulationTime", "=", "200"}], ";", 
  RowBox[{"solution", "=", 
   RowBox[{"TwoIonSimulationTwoMode", "[", 
    RowBox[{
    "\[CapitalOmega]", ",", "\[Delta]", ",", "\[Nu]", ",", "MaxPhononNumber", 
     ",", "SimulationTime", ",", "\"\<Individual\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.763893617771593*^9, 3.763893673841346*^9}, {
   3.763893971688368*^9, 3.7638939729809933`*^9}, {3.763894004530034*^9, 
   3.763894005346559*^9}, 3.763894307840946*^9, 3.7638943388405323`*^9, {
   3.763894475225114*^9, 3.763894500332349*^9}, {3.7638964665628223`*^9, 
   3.763896467753372*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "100", "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                  False, Background -> GrayLevel[0.93], Frame -> True, 
                  FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                  ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "200.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Output dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "100", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 200.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.763893658659163*^9, 3.76389373422331*^9}, {
   3.7638937801166553`*^9, 3.763893796024474*^9}, 3.76389387488196*^9, {
   3.763893968661367*^9, 3.7638939733073397`*^9}, {3.763894006736116*^9, 
   3.7638940242765493`*^9}, {3.763894078670979*^9, 3.763894263513463*^9}, 
   3.7638943091353416`*^9, {3.7638943407860603`*^9, 3.7638943834673557`*^9}, 
   3.763894489927894*^9, 3.763896324457945*^9, {3.763896432881424*^9, 
   3.763896484813295*^9}, 3.763896584173319*^9, {3.763896770555481*^9, 
   3.763896795977538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"c", "[", "t", "]"}], "/.", 
            RowBox[{"solution", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "1", ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", "1"}]}], 
        "]"}]}], "+", 
      RowBox[{"Population", "[", 
       RowBox[{
        RowBox[{"DensityMatrix", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"c", "[", "t", "]"}], "/.", 
           RowBox[{"solution", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "2", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", "1"}]}], 
       "]"}], "+", 
      RowBox[{"Population", "[", 
       RowBox[{
        RowBox[{"DensityMatrix", "[", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"c", "[", "t", "]"}], "/.", 
           RowBox[{"solution", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "3", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", "1"}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
     RowBox[{"SimulationTime", "/", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.763896505246243*^9, 3.763896515193424*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "0.4131699680063628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.969841127977129`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "0.7500128381409018`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "0.11699144930262254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "0.1169602845256589`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0.7499708492918902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"140", ",", "0.9698577092935574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", "0.41321771584166384`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "2.350753654516743`*^-9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0.41312222097026524`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.763896518393899*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Population", "[", 
        RowBox[{
         RowBox[{"DensityMatrix", "[", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"c", "[", "t", "]"}], "/.", 
            RowBox[{"solution", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", "i", ",", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"MaxPhononNumber", "+", "1"}], ")"}], "2"], "-", "1"}]}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "SimulationTime", ",", 
       RowBox[{"SimulationTime", "/", "10"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Print", "[", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", "#"}], "}"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Green", ",", "Yellow", ",", "Red"}], "}"}]}], 
       ")"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<11\>\"", ",", "\"\<10\>\"", ",", "\"\<01\>\"", ",", 
        "\"\<00\>\""}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.763896795552367*^9, 3.763896804146325*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]], 
        LineBox[{{0., 0.}, {20., 0.}, {40., 0.}, {60., 0.}, {80., 0.}, {100., 
         0.}, {120., 0.}, {140., 0.}, {160., 0.}, {180., 0.}, {200., 0.}}]}, {
       
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 1, 0]], 
        LineBox[{{0., 0.}, {20., 0.4131699680063628}, {40., 
         0.969841127977129}, {60., 0.7500128381409018}, {80., 
         0.11699144930262254`}, {100., 0.1169602845256589}, {120., 
         0.7499708492918902}, {140., 0.9698577092935574}, {160., 
         0.41321771584166384`}, {180., 2.350753654516743*^-9}, {200., 
         0.41312222097026524`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 1, 0]], 
        LineBox[{{0., 0.}, {20., 0.}, {40., 0.}, {60., 0.}, {80., 0.}, {100., 
         0.}, {120., 0.}, {140., 0.}, {160., 0.}, {180., 0.}, {200., 0.}}]}, {
       
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.019444444444444445`], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[1, 0, 0]], 
        LineBox[{{0., 1.}, {20., 0.5868300319936371}, {40., 
         0.030158872022870847`}, {60., 0.24998716185909814`}, {80., 
         0.8830085506973774}, {100., 0.8830397154743411}, {120., 
         0.25002915070810977`}, {140., 0.030142290706442552`}, {160., 
         0.5867822841583362}, {180., 0.9999999976492463}, {200., 
         0.5868777790297346}}]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 200.}, {0, 1.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 200.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"11\"", "\"10\"", "\"01\"", "\"00\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.35], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.019444444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellChangeTimes->{3.7638968086058407`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1680, 1005},
WindowMargins->{{Automatic, -73}, {821, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (2016\:5e7410\
\:67088\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[700, 27, 146, 2, 65, "Chapter"],
Cell[CellGroupData[{
Cell[871, 33, 99, 1, 64, "Section"],
Cell[973, 36, 1652, 46, 103, "Input"],
Cell[2628, 84, 418, 10, 53, "Input"],
Cell[3049, 96, 2827, 71, 154, "Input"],
Cell[5879, 169, 1964, 53, 103, "Input"],
Cell[7846, 224, 2542, 62, 103, "Input"],
Cell[10391, 288, 2033, 54, 103, "Input"],
Cell[CellGroupData[{
Cell[12449, 346, 876, 26, 53, "Input"],
Cell[13328, 374, 914, 26, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14279, 405, 479, 11, 46, "Input"],
Cell[14761, 418, 4685, 130, 77, "Output"]
}, Open  ]],
Cell[19461, 551, 1729, 44, 82, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21227, 600, 98, 1, 64, "Section"],
Cell[21328, 603, 147, 3, 32, "Input"],
Cell[21478, 608, 3659, 115, 330, "Input"],
Cell[25140, 725, 2742, 77, 287, "Input"],
Cell[27885, 804, 1110, 30, 73, "Input"],
Cell[28998, 836, 1185, 30, 46, "Input"],
Cell[30186, 868, 913, 26, 46, "Input"],
Cell[31102, 896, 911, 26, 46, "Input"],
Cell[32016, 924, 21992, 486, 999, "Input"],
Cell[54011, 1412, 16096, 407, 906, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70156, 1825, 118, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[70299, 1830, 106, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[70430, 1835, 160, 2, 35, "Subsubsection"],
Cell[70593, 1839, 1357, 36, 50, "Input"],
Cell[CellGroupData[{
Cell[71975, 1879, 398, 7, 32, "Input"],
Cell[72376, 1888, 47104, 862, 246, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119529, 2756, 108, 1, 35, "Subsubsection"],
Cell[119640, 2759, 1330, 38, 50, "Input"],
Cell[CellGroupData[{
Cell[120995, 2801, 332, 7, 32, "Input"],
Cell[121330, 2810, 12546, 218, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133913, 3033, 410, 8, 32, "Input"],
Cell[134326, 3043, 65110, 1156, 246, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199497, 4206, 163, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[199685, 4212, 106, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[199816, 4217, 1230, 36, 199, "Input"],
Cell[201049, 4255, 12492, 217, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213578, 4477, 1227, 36, 199, "Input"],
Cell[214808, 4515, 12490, 217, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227347, 4738, 103, 1, 35, "Subsubsection"],
Cell[227453, 4741, 1922, 47, 50, "Input"],
Cell[CellGroupData[{
Cell[229400, 4792, 482, 9, 46, "Input"],
Cell[229885, 4803, 12905, 223, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242827, 5031, 291, 8, 46, "Input"],
Cell[243121, 5041, 208, 5, 44, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243390, 5053, 117, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[243532, 5058, 1957, 58, 235, "Input"],
Cell[245492, 5118, 64288, 1142, 239, "Print"],
Cell[309783, 6262, 9377, 190, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319197, 6457, 172, 3, 44, "Subsection"],
Cell[CellGroupData[{
Cell[319394, 6464, 1572, 47, 212, "Input"],
Cell[320969, 6513, 64426, 1145, 239, "Print"]
}, Open  ]],
Cell[385410, 7661, 1505, 46, 212, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[386952, 7712, 101, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[387078, 7717, 3207, 88, 306, "Input"],
Cell[390288, 7807, 22376, 455, 246, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[412737, 8270, 103, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[412865, 8275, 98, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[412988, 8280, 122, 1, 44, "Subsection"],
Cell[413113, 8283, 272, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[413410, 8292, 2185, 59, 199, "Input"],
Cell[415598, 8353, 62864, 1122, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478499, 9480, 1799, 54, 199, "Input"],
Cell[480301, 9536, 62573, 1117, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542911, 10658, 1908, 55, 199, "Input"],
Cell[544822, 10715, 62830, 1121, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[607701, 11842, 113, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[607839, 11847, 1690, 52, 199, "Input"],
Cell[609532, 11901, 62118, 1110, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[671687, 13016, 1786, 54, 199, "Input"],
Cell[673476, 13072, 62673, 1120, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[736186, 14197, 1741, 53, 199, "Input"],
Cell[737930, 14252, 62682, 1118, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[800661, 15376, 103, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[800789, 15381, 134, 3, 35, "Input"],
Cell[800926, 15386, 113, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801076, 15392, 2168, 62, 206, "Input"],
Cell[803247, 15456, 62895, 1120, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[866203, 16583, 142, 1, 63, "Subchapter"],
Cell[866348, 16586, 216, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[866589, 16594, 94, 1, 64, "Section"],
Cell[866686, 16597, 325, 8, 50, "Input"],
Cell[CellGroupData[{
Cell[867036, 16609, 1200, 32, 180, "Input"],
Cell[868239, 16643, 12427, 216, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880703, 16864, 1963, 52, 195, "Input"],
Cell[882669, 16918, 62170, 1108, 238, "Print"],
Cell[944842, 18028, 9481, 192, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[954360, 18225, 4256, 102, 316, "Input"],
Cell[958619, 18329, 3833, 75, 240, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[962501, 18410, 93, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[962619, 18415, 1520, 42, 199, "Input"],
Cell[964142, 18459, 64425, 1143, 239, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1028604, 19607, 2676, 79, 242, "Input"],
Cell[1031283, 19688, 62772, 1118, 238, "Print"],
Cell[1094058, 20808, 9678, 194, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1103773, 21007, 2407, 59, 175, "Input"],
Cell[1106183, 21068, 288, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1106508, 21081, 4440, 112, 342, "Input"],
Cell[1110951, 21195, 3678, 74, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1114666, 21274, 589, 18, 48, "Input"],
Cell[1115258, 21294, 1000, 25, 81, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1116331, 21327, 150, 2, 65, "Chapter"],
Cell[CellGroupData[{
Cell[1116506, 21333, 137, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[1116668, 21338, 2979, 80, 212, "Input"],
Cell[1119650, 21420, 61693, 1101, 242, "Output"]
}, Open  ]],
Cell[1181358, 22524, 144, 2, 46, "Input"],
Cell[CellGroupData[{
Cell[1181527, 22530, 2259, 69, 212, "Input"],
Cell[1183789, 22601, 57321, 1028, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1241147, 23634, 2436, 72, 212, "Input"],
Cell[1243586, 23708, 62189, 1109, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1305824, 24823, 106, 1, 50, "Section"],
Cell[CellGroupData[{
Cell[1305955, 24828, 94, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1306074, 24833, 1414, 41, 199, "Input"],
Cell[1307491, 24876, 12568, 218, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320108, 25100, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1320240, 25105, 260, 5, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[1320525, 25114, 10786, 266, 683, "Input"],
Cell[1331314, 25382, 74183, 1306, 235, "Print"],
Cell[1405500, 26690, 76530, 1342, 246, "Output"],
Cell[1482033, 28034, 8110, 143, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1490180, 28182, 3914, 103, 342, "Input"],
Cell[1494097, 28287, 3069, 63, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1497203, 28355, 510, 16, 48, "Input"],
Cell[1497716, 28373, 904, 23, 92, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1498669, 28402, 203, 4, 35, "Subsubsection"],
Cell[1498875, 28408, 266, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[1499166, 28417, 10967, 264, 597, "Input"],
Cell[1510136, 28683, 74710, 1313, 236, "Print"],
Cell[1584849, 29998, 76787, 1343, 246, "Output"],
Cell[1661639, 31343, 8367, 145, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1670043, 31493, 3938, 104, 414, "Input"],
Cell[1673984, 31599, 3061, 63, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1677082, 31667, 605, 18, 48, "Input"],
Cell[1677690, 31687, 914, 22, 92, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1678665, 31716, 113, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1678803, 31721, 140, 3, 32, "Input"],
Cell[1678946, 31726, 54954, 951, 139, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1733949, 32683, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1734081, 32688, 9402, 238, 625, "Input"],
Cell[1743486, 32928, 61073, 1090, 239, "Print"],
Cell[1804562, 34020, 62319, 1108, 246, "Output"],
Cell[1866884, 35130, 7180, 126, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1874101, 35261, 3935, 104, 414, "Input"],
Cell[1878039, 35367, 3123, 64, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1881199, 35436, 672, 19, 48, "Input"],
Cell[1881874, 35457, 1962, 42, 92, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1883897, 35506, 257, 3, 50, "Section"],
Cell[CellGroupData[{
Cell[1884179, 35513, 128, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1884332, 35518, 2123, 61, 235, "Input"],
Cell[1886458, 35581, 64336, 1143, 239, "Print"],
Cell[1950797, 36726, 9431, 191, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1960277, 36923, 191, 2, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1960493, 36929, 2067, 63, 219, "Input"],
Cell[1962563, 36994, 60649, 1083, 240, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2023261, 38083, 121, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2023407, 38088, 2173, 63, 235, "Input"],
Cell[2025583, 38153, 64266, 1142, 239, "Print"],
Cell[2089852, 39297, 9354, 190, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2099255, 39493, 136, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2099416, 39498, 1603, 47, 235, "Input"],
Cell[2101022, 39547, 61407, 1095, 235, "Print"],
Cell[2162432, 40644, 9379, 190, 62, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2171860, 40840, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2171992, 40845, 7236, 206, 553, "Input"],
Cell[2179231, 41053, 75973, 1335, 239, "Print"],
Cell[2255207, 42390, 76105, 1335, 246, "Output"],
Cell[2331315, 43727, 6775, 123, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2338127, 43855, 3991, 106, 342, "Input"],
Cell[2342121, 43963, 3474, 71, 244, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2345644, 44040, 107, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[2345776, 44045, 8999, 225, 583, "Input"],
Cell[2354778, 44272, 61025, 1091, 241, "Print"],
Cell[2415806, 45365, 62586, 1111, 246, "Output"],
Cell[2478395, 46478, 7214, 126, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2485646, 46609, 4008, 105, 342, "Input"],
Cell[2489657, 46716, 3427, 69, 240, "Output"]
}, Open  ]],
Cell[2493099, 46788, 600, 18, 48, "Input"]
}, Open  ]]
}, Open  ]],
Cell[2493726, 46810, 139, 1, 64, "Section"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2493914, 46817, 102, 1, 92, "Title"],
Cell[CellGroupData[{
Cell[2494041, 46822, 105, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[2494171, 46827, 764, 22, 94, "Input"],
Cell[2494938, 46851, 2090, 41, 153, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2497065, 46897, 979, 25, 83, "Input"],
Cell[2498047, 46924, 2308, 51, 237, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2500416, 46982, 106, 1, 66, "Title"],
Cell[CellGroupData[{
Cell[2500547, 46987, 146, 2, 65, "Chapter"],
Cell[CellGroupData[{
Cell[2500718, 46993, 99, 1, 64, "Section"],
Cell[2500820, 46996, 1652, 46, 103, "Input"],
Cell[2502475, 47044, 418, 10, 53, "Input"],
Cell[2502896, 47056, 2827, 71, 154, "Input"],
Cell[2505726, 47129, 1964, 53, 103, "Input"],
Cell[2507693, 47184, 2542, 62, 103, "Input"],
Cell[2510238, 47248, 2033, 54, 103, "Input"],
Cell[CellGroupData[{
Cell[2512296, 47306, 876, 26, 53, "Input"],
Cell[2513175, 47334, 936, 26, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2514148, 47365, 479, 11, 46, "Input"],
Cell[2514630, 47378, 4707, 130, 77, "Output"]
}, Open  ]],
Cell[2519352, 47511, 1729, 44, 82, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2521118, 47560, 98, 1, 64, "Section"],
Cell[2521219, 47563, 147, 3, 32, "Input"],
Cell[2521369, 47568, 3659, 115, 330, "Input"],
Cell[2525031, 47685, 4383, 121, 381, "Input"],
Cell[2529417, 47808, 1110, 30, 73, "Input"],
Cell[2530530, 47840, 1302, 33, 48, "Input"],
Cell[2531835, 47875, 1003, 29, 48, "Input"],
Cell[2532841, 47906, 1002, 29, 48, "Input"],
Cell[2533846, 47937, 28656, 628, 1010, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2562551, 48571, 97, 1, 65, "Chapter"],
Cell[2562651, 48574, 148, 2, 46, "Input"],
Cell[CellGroupData[{
Cell[2562824, 48580, 1549, 42, 199, "Input"],
Cell[2564376, 48624, 9975, 198, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2574388, 48827, 1763, 49, 86, "Input"],
Cell[2576154, 48878, 945, 25, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2577136, 48908, 1591, 44, 84, "Input"],
Cell[2578730, 48954, 19563, 403, 238, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

